name: Build and Release Package and CLI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  ENTRYPOINT: packages/node-runtime/src/cli.ts
  OUTDIR: "cli-out"

jobs:
  build:
    name: Build CLI binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x64
          - os: ubuntu-latest
            target: bun-linux-x64
            ext: ""
          # Linux x64 baseline
          - os: ubuntu-latest
            target: bun-linux-x64-baseline
            ext: ""
          # Linux x64 modern
          - os: ubuntu-latest
            target: bun-linux-x64-modern
            ext: ""
          # Linux ARM64
          - os: ubuntu-latest
            target: bun-linux-arm64
            ext: ""
          # Windows x64 (default)
          - os: windows-latest
            target: bun-windows-x64
            ext: ".exe"
          # Windows x64 baseline
          - os: windows-latest
            target: bun-windows-x64-baseline
            ext: ".exe"
          # Windows x64 modern
          - os: windows-latest
            target: bun-windows-x64-modern
            ext: ".exe"
          # macOS ARM64
          - os: macos-latest
            target: bun-darwin-arm64
            ext: ""
          # macOS x64
          - os: macos-latest
            target: bun-darwin-x64
            ext: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun ci
        shell: bash

      - run: bun test --timeout 20000
        shell: bash
        continue-on-error: true

      - run: mkdir -p "${{ env.BUN_INSTALL_CACHE_DIR }}"
        shell: bash
        env:
          BUN_INSTALL_CACHE_DIR: ${{ runner.temp }}/bun-cache

      - name: Build for ${{ matrix.target }}
        run: |
          mkdir -p "${{ env.OUTDIR }}"
          bun build --compile \
            --target=${{ matrix.target }} \
            "${{ env.ENTRYPOINT }}" \
            --outfile "${{ env.OUTDIR }}/cryptit-cli-${{ matrix.target }}${{ matrix.ext }}"
        shell: bash 
        env:
          BUN_INSTALL_CACHE_DIR: ${{ runner.temp }}/bun-cache

      - name: Archive binary (tar.gz on Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        env:
          BIN: cryptit-cli-${{ matrix.target }}${{ matrix.ext }}
        run: |
          set -euo pipefail
          pushd "${{ env.OUTDIR }}"
          chmod +x "$BIN" || true
          tar -czf "${BIN}.tar.gz" "$BIN"
          popd

      - name: Archive binary (zip on Windows)
        if: runner.os == 'Windows'
        shell: powershell
        env:
          OUTDIR: ${{ env.OUTDIR }}
          BIN: cryptit-cli-${{ matrix.target }}${{ matrix.ext }}
        run: |
          $ErrorActionPreference = "Stop"
          $path = Join-Path $env:OUTDIR $env:BIN
          # Ensure file exists, then zip it
          if (!(Test-Path $path)) { throw "Binary not found: $path" }
          Compress-Archive -Path $path -DestinationPath (Join-Path $env:OUTDIR ($env:BIN + ".zip")) -Force

      - name: Upload artifact (${{ matrix.target }})
        uses: actions/upload-artifact@v4
        with:
          # Upload the archive we just made (zip on Windows, tar.gz elsewhere)
          name: cryptit-cli-${{ matrix.target }}-archive
          path: |
            ${{ env.OUTDIR }}/cryptit-cli-${{ matrix.target }}${{ matrix.ext }}.tar.gz
            ${{ env.OUTDIR }}/cryptit-cli-${{ matrix.target }}${{ matrix.ext }}.zip

  release:
    name: Upload to GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist

      - name: Create SHA256SUMS.txt
        run: |
          cd dist
          # Flatten any nested folders produced by download-artifact
          find . -type f -name '*.tar.gz' -o -name '*.zip' -print0 | xargs -0 -I{} bash -c 'sha256sum "{}"'
          # Write checksums file
          { find . -type f -name '*.tar.gz' -print0; find . -type f -name '*.zip' -print0; } \
            | xargs -0 sha256sum > SHA256SUMS.txt
          echo "Generated checksums:"
          cat SHA256SUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.tar.gz
            dist/**/*.zip
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
        - uses: actions/checkout@v5

        - uses: oven-sh/setup-bun@v2
          with:
            bun-version: latest

        - run: bun ci

        - run: bun run build

        - uses: actions/setup-node@v4
          with:
            registry-url: https://registry.npmjs.org/
            node-version: 20
            scope: '@mqxym'

        - run: npm publish --access public --provenance
#          env:
#            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}