name: Build and Release Package and CLI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  ENTRYPOINT: packages/node-runtime/src/cli.ts
  OUTDIR: "cli-out"

jobs:
  build:
    name: Build CLI binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x64
          - os: ubuntu-latest
            target: bun-linux-x64
            ext: ""
          # Linux x64 baseline
          - os: ubuntu-latest
            target: bun-linux-x64-baseline
            ext: ""
          # Linux x64 modern
          - os: ubuntu-latest
            target: bun-linux-x64-modern
            ext: ""
          # Linux ARM64
          - os: ubuntu-latest
            target: bun-linux-arm64
            ext: ""
          # Windows x64 (default)
          - os: windows-latest
            target: bun-windows-x64
            ext: ".exe"
          # Windows x64 baseline
          - os: windows-latest
            target: bun-windows-x64-baseline
            ext: ".exe"
          # Windows x64 modern
          - os: windows-latest
            target: bun-windows-x64-modern
            ext: ".exe"
          # macOS ARM64
          - os: macos-latest
            target: bun-darwin-arm64
            ext: ""
          # macOS x64
          - os: macos-latest
            target: bun-darwin-x64
            ext: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun ci
        shell: bash

      - run: bun test --timeout 20000
        shell: bash


      - name: Build for ${{ matrix.target }}
        run: |
          mkdir -p "${{ env.OUTDIR }}"
          bun build --compile \
            --target=${{ matrix.target }} \
            "${{ env.ENTRYPOINT }}" \
            --outfile "${{ env.OUTDIR }}/myapp-${{ matrix.target }}${{ matrix.ext }}"
        shell: bash 

      - name: Upload artifact (${{
          matrix.target }})
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.target }}${{ matrix.ext }}
          path: ${{ env.OUTDIR }}/myapp-${{ matrix.target }}${{ matrix.ext }}

  release:
    name: Upload to GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: oven-sh/setup-bun@v2
          with:
            bun-version: latest
        - run: bun install
        - run: bun run build
        - uses: actions/setup-node@v4
          with:
            registry-url: https://registry.npmjs.org/
        - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        - run: npm publish --access public
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}