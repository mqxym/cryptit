{
  "version": 3,
  "sources": ["../../node_modules/argon2-browser/dist/argon2.js", "../../node_modules/argon2-browser/lib/argon2.js", "../../node_modules/@phc/format/index.js", "../../node_modules/node-gyp-build/node-gyp-build.js", "../../node_modules/node-gyp-build/index.js", "../../node_modules/argon2/argon2.cjs", "../../packages/core/src/config/VersionRegistry.ts", "../../packages/core/src/algorithms/encryption/aes-gmc/AESGCM.ts", "../../packages/core/src/algorithms/kdf/argon2-wrapper.ts", "../../packages/core/src/algorithms/kdf/Argon2.ts", "../../packages/core/src/config/defaults.ts", "../../packages/core/src/header/constants.ts", "../../packages/core/src/util/bytes.ts", "../../packages/core/src/header/encoder.ts", "../../packages/core/src/header/decoder.ts", "../../packages/core/src/stream/EncryptTransform.ts", "../../packages/core/src/stream/DecryptTransform.ts", "../../packages/core/src/stream/StreamProcessor.ts", "../../packages/core/src/index.ts", "../../packages/node-runtime/src/provider.ts", "../../packages/node-runtime/src/index.ts"],
  "sourcesContent": [
    "var Module=typeof self!==\"undefined\"&&typeof self.Module!==\"undefined\"?self.Module:{};var jsModule=Module;var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var ALLOC_NORMAL=0;var ALLOC_STACK=1;function allocate(slab,allocator){var ret;if(allocator==ALLOC_STACK){ret=stackAlloc(slab.length)}else{ret=_malloc(slab.length)}if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile=\"argon2.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"c\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"k\"];addOnInit(Module[\"asm\"][\"d\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147418112;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var asmLibraryArg={\"a\":_emscripten_memcpy_big,\"b\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"d\"]).apply(null,arguments)};var _argon2_hash=Module[\"_argon2_hash\"]=function(){return(_argon2_hash=Module[\"_argon2_hash\"]=Module[\"asm\"][\"e\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"f\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"g\"]).apply(null,arguments)};var _argon2_verify=Module[\"_argon2_verify\"]=function(){return(_argon2_verify=Module[\"_argon2_verify\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _argon2_error_message=Module[\"_argon2_error_message\"]=function(){return(_argon2_error_message=Module[\"_argon2_error_message\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _argon2_encodedlen=Module[\"_argon2_encodedlen\"]=function(){return(_argon2_encodedlen=Module[\"_argon2_encodedlen\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _argon2_hash_ext=Module[\"_argon2_hash_ext\"]=function(){return(_argon2_hash_ext=Module[\"_argon2_hash_ext\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _argon2_verify_ext=Module[\"_argon2_verify_ext\"]=function(){return(_argon2_verify_ext=Module[\"_argon2_verify_ext\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};Module[\"allocate\"]=allocate;Module[\"UTF8ToString\"]=UTF8ToString;Module[\"ALLOC_NORMAL\"]=ALLOC_NORMAL;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();if(typeof module!==\"undefined\")module.exports=Module;Module.unloadRuntime=function(){if(typeof self!==\"undefined\"){delete self.Module}Module=jsModule=wasmMemory=wasmTable=asm=buffer=HEAP8=HEAPU8=HEAP16=HEAPU16=HEAP32=HEAPU32=HEAPF32=HEAPF64=undefined;if(typeof module!==\"undefined\"){delete module.exports}};\n",
    "(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.argon2 = factory();\n    }\n})(typeof self !== 'undefined' ? self : this, function () {\n    const global = typeof self !== 'undefined' ? self : this;\n\n    /**\n     * @enum\n     */\n    const ArgonType = {\n        Argon2d: 0,\n        Argon2i: 1,\n        Argon2id: 2,\n    };\n\n    function loadModule(mem) {\n        if (loadModule._promise) {\n            return loadModule._promise;\n        }\n        if (loadModule._module) {\n            return Promise.resolve(loadModule._module);\n        }\n        let promise;\n        if (\n            global.process &&\n            global.process.versions &&\n            global.process.versions.node\n        ) {\n            promise = loadWasmModule().then(\n                (Module) =>\n                    new Promise((resolve) => {\n                        Module.postRun = () => resolve(Module);\n                    })\n            );\n        } else {\n            promise = loadWasmBinary().then((wasmBinary) => {\n                const wasmMemory = mem ? createWasmMemory(mem) : undefined;\n                return initWasm(wasmBinary, wasmMemory);\n            });\n        }\n        loadModule._promise = promise;\n        return promise.then((Module) => {\n            loadModule._module = Module;\n            delete loadModule._promise;\n            return Module;\n        });\n    }\n\n    function initWasm(wasmBinary, wasmMemory) {\n        return new Promise((resolve) => {\n            global.Module = {\n                wasmBinary,\n                wasmMemory,\n                postRun() {\n                    resolve(Module);\n                },\n            };\n            return loadWasmModule();\n        });\n    }\n\n    function loadWasmModule() {\n        if (global.loadArgon2WasmModule) {\n            return global.loadArgon2WasmModule();\n        }\n        if (typeof require === 'function') {\n            return Promise.resolve(require('../dist/argon2.js'));\n        }\n        return import('../dist/argon2.js');\n    }\n\n    function loadWasmBinary() {\n        if (global.loadArgon2WasmBinary) {\n            return global.loadArgon2WasmBinary();\n        }\n        if (typeof require === 'function') {\n            return Promise.resolve(require('../dist/argon2.wasm')).then(\n                (wasmModule) => {\n                    return decodeWasmBinary(wasmModule);\n                }\n            );\n        }\n        const wasmPath =\n            global.argon2WasmPath ||\n            'node_modules/argon2-browser/dist/argon2.wasm';\n        return fetch(wasmPath)\n            .then((response) => response.arrayBuffer())\n            .then((ab) => new Uint8Array(ab));\n    }\n\n    function decodeWasmBinary(base64) {\n        const text = atob(base64);\n        const binary = new Uint8Array(new ArrayBuffer(text.length));\n        for (let i = 0; i < text.length; i++) {\n            binary[i] = text.charCodeAt(i);\n        }\n        return binary;\n    }\n\n    function createWasmMemory(mem) {\n        const KB = 1024;\n        const MB = 1024 * KB;\n        const GB = 1024 * MB;\n        const WASM_PAGE_SIZE = 64 * KB;\n\n        const totalMemory = (2 * GB - 64 * KB) / WASM_PAGE_SIZE;\n        const initialMemory = Math.min(\n            Math.max(Math.ceil((mem * KB) / WASM_PAGE_SIZE), 256) + 256,\n            totalMemory\n        );\n\n        return new WebAssembly.Memory({\n            initial: initialMemory,\n            maximum: totalMemory,\n        });\n    }\n\n    function allocateArray(Module, arr) {\n        return Module.allocate(arr, 'i8', Module.ALLOC_NORMAL);\n    }\n\n    function allocateArrayStr(Module, arr) {\n        const nullTerminatedArray = new Uint8Array([...arr, 0]);\n        return allocateArray(Module, nullTerminatedArray);\n    }\n\n    function encodeUtf8(str) {\n        if (typeof str !== 'string') {\n            return str;\n        }\n        if (typeof TextEncoder === 'function') {\n            return new TextEncoder().encode(str);\n        } else if (typeof Buffer === 'function') {\n            return Buffer.from(str);\n        } else {\n            throw new Error(\"Don't know how to encode UTF8\");\n        }\n    }\n\n    /**\n     * Argon2 hash\n     * @param {string|Uint8Array} params.pass - password string\n     * @param {string|Uint8Array} params.salt - salt string\n     * @param {number} [params.time=1] - the number of iterations\n     * @param {number} [params.mem=1024] - used memory, in KiB\n     * @param {number} [params.hashLen=24] - desired hash length\n     * @param {number} [params.parallelism=1] - desired parallelism\n     * @param {number} [params.type=argon2.ArgonType.Argon2d] - hash type:\n     *      argon2.ArgonType.Argon2d\n     *      argon2.ArgonType.Argon2i\n     *      argon2.ArgonType.Argon2id\n     *\n     * @return Promise\n     *\n     * @example\n     *  argon2.hash({ pass: 'password', salt: 'somesalt' })\n     *      .then(h => console.log(h.hash, h.hashHex, h.encoded))\n     *      .catch(e => console.error(e.message, e.code))\n     */\n    function argon2Hash(params) {\n        const mCost = params.mem || 1024;\n        return loadModule(mCost).then((Module) => {\n            const tCost = params.time || 1;\n            const parallelism = params.parallelism || 1;\n            const pwdEncoded = encodeUtf8(params.pass);\n            const pwd = allocateArrayStr(Module, pwdEncoded);\n            const pwdlen = pwdEncoded.length;\n            const saltEncoded = encodeUtf8(params.salt);\n            const salt = allocateArrayStr(Module, saltEncoded);\n            const saltlen = saltEncoded.length;\n            const argon2Type = params.type || ArgonType.Argon2d;\n            const hash = Module.allocate(\n                new Array(params.hashLen || 24),\n                'i8',\n                Module.ALLOC_NORMAL\n            );\n            const secret = params.secret\n                ? allocateArray(Module, params.secret)\n                : 0;\n            const secretlen = params.secret ? params.secret.byteLength : 0;\n            const ad = params.ad ? allocateArray(Module, params.ad) : 0;\n            const adlen = params.ad ? params.ad.byteLength : 0;\n            const hashlen = params.hashLen || 24;\n            const encodedlen = Module._argon2_encodedlen(\n                tCost,\n                mCost,\n                parallelism,\n                saltlen,\n                hashlen,\n                argon2Type\n            );\n            const encoded = Module.allocate(\n                new Array(encodedlen + 1),\n                'i8',\n                Module.ALLOC_NORMAL\n            );\n            const version = 0x13;\n            let err;\n            let res;\n            try {\n                res = Module._argon2_hash_ext(\n                    tCost,\n                    mCost,\n                    parallelism,\n                    pwd,\n                    pwdlen,\n                    salt,\n                    saltlen,\n                    hash,\n                    hashlen,\n                    encoded,\n                    encodedlen,\n                    argon2Type,\n                    secret,\n                    secretlen,\n                    ad,\n                    adlen,\n                    version\n                );\n            } catch (e) {\n                err = e;\n            }\n            let result;\n            if (res === 0 && !err) {\n                let hashStr = '';\n                const hashArr = new Uint8Array(hashlen);\n                for (let i = 0; i < hashlen; i++) {\n                    const byte = Module.HEAP8[hash + i];\n                    hashArr[i] = byte;\n                    hashStr += ('0' + (0xff & byte).toString(16)).slice(-2);\n                }\n                const encodedStr = Module.UTF8ToString(encoded);\n                result = {\n                    hash: hashArr,\n                    hashHex: hashStr,\n                    encoded: encodedStr,\n                };\n            } else {\n                try {\n                    if (!err) {\n                        err = Module.UTF8ToString(\n                            Module._argon2_error_message(res)\n                        );\n                    }\n                } catch (e) {}\n                result = { message: err, code: res };\n            }\n            try {\n                Module._free(pwd);\n                Module._free(salt);\n                Module._free(hash);\n                Module._free(encoded);\n                if (ad) {\n                    Module._free(ad);\n                }\n                if (secret) {\n                    Module._free(secret);\n                }\n            } catch (e) {}\n            if (err) {\n                throw result;\n            } else {\n                return result;\n            }\n        });\n    }\n\n    /**\n     * Argon2 verify function\n     * @param {string} params.pass - password string\n     * @param {string|Uint8Array} params.encoded - encoded hash\n     * @param {number} [params.type=argon2.ArgonType.Argon2d] - hash type:\n     *      argon2.ArgonType.Argon2d\n     *      argon2.ArgonType.Argon2i\n     *      argon2.ArgonType.Argon2id\n     *\n     * @returns Promise\n     *\n     * @example\n     *  argon2.verify({ pass: 'password', encoded: 'encoded-hash' })\n     *      .then(() => console.log('OK'))\n     *      .catch(e => console.error(e.message, e.code))\n     */\n    function argon2Verify(params) {\n        return loadModule().then((Module) => {\n            const pwdEncoded = encodeUtf8(params.pass);\n            const pwd = allocateArrayStr(Module, pwdEncoded);\n            const pwdlen = pwdEncoded.length;\n            const secret = params.secret\n                ? allocateArray(Module, params.secret)\n                : 0;\n            const secretlen = params.secret ? params.secret.byteLength : 0;\n            const ad = params.ad ? allocateArray(Module, params.ad) : 0;\n            const adlen = params.ad ? params.ad.byteLength : 0;\n            const encEncoded = encodeUtf8(params.encoded);\n            const enc = allocateArrayStr(Module, encEncoded);\n            let argon2Type = params.type;\n            if (argon2Type === undefined) {\n                let typeStr = params.encoded.split('$')[1];\n                if (typeStr) {\n                    typeStr = typeStr.replace('a', 'A');\n                    argon2Type = ArgonType[typeStr] || ArgonType.Argon2d;\n                }\n            }\n            let err;\n            let res;\n            try {\n                res = Module._argon2_verify_ext(\n                    enc,\n                    pwd,\n                    pwdlen,\n                    secret,\n                    secretlen,\n                    ad,\n                    adlen,\n                    argon2Type\n                );\n            } catch (e) {\n                err = e;\n            }\n            let result;\n            if (res || err) {\n                try {\n                    if (!err) {\n                        err = Module.UTF8ToString(\n                            Module._argon2_error_message(res)\n                        );\n                    }\n                } catch (e) {}\n                result = { message: err, code: res };\n            }\n            try {\n                Module._free(pwd);\n                Module._free(enc);\n            } catch (e) {}\n            if (err) {\n                throw result;\n            } else {\n                return result;\n            }\n        });\n    }\n\n    function unloadRuntime() {\n        if (loadModule._module) {\n            loadModule._module.unloadRuntime();\n            delete loadModule._promise;\n            delete loadModule._module;\n        }\n    }\n\n    return {\n        ArgonType,\n        hash: argon2Hash,\n        verify: argon2Verify,\n        unloadRuntime,\n    };\n});\n",
    "const idRegex = /^[a-z0-9-]{1,32}$/;\nconst nameRegex = /^[a-z0-9-]{1,32}$/;\nconst valueRegex = /^[a-zA-Z0-9/+.-]+$/;\nconst b64Regex = /^([a-zA-Z0-9/+.-]+|)$/;\nconst decimalRegex = /^((-)?[1-9]\\d*|0)$/;\nconst versionRegex = /^v=(\\d+)$/;\n\nfunction objToKeyVal(obj) {\n  return objectKeys(obj)\n    .map(k => [k, obj[k]].join('='))\n    .join(',');\n}\n\nfunction keyValtoObj(str) {\n  const obj = {};\n  str.split(',').forEach(ps => {\n    const pss = ps.split('=');\n    if (pss.length < 2) {\n      throw new TypeError(`params must be in the format name=value`);\n    }\n\n    obj[pss.shift()] = pss.join('=');\n  });\n  return obj;\n}\n\nfunction objectKeys(object) {\n  /* istanbul ignore next */\n  return Object.keys(object);\n}\n\nfunction objectValues(object) {\n  /* istanbul ignore next */\n  if (typeof Object.values === 'function') return Object.values(object);\n  /* istanbul ignore next */\n  return objectKeys(object).map(k => object[k]);\n}\n\n/**\n * Generates a PHC string using the data provided.\n * @param  {Object} opts Object that holds the data needed to generate the PHC\n * string.\n * @param  {string} opts.id Symbolic name for the function.\n * @param  {Number} [opts.version] The version of the function.\n * @param  {Object} [opts.params] Parameters of the function.\n * @param  {Buffer} [opts.salt] The salt as a binary buffer.\n * @param  {Buffer} [opts.hash] The hash as a binary buffer.\n * @return {string} The hash string adhering to the PHC format.\n */\nfunction serialize(opts) {\n  const fields = [''];\n\n  if (typeof opts !== 'object' || opts === null) {\n    throw new TypeError('opts must be an object');\n  }\n\n  // Identifier Validation\n  if (typeof opts.id !== 'string') {\n    throw new TypeError('id must be a string');\n  }\n\n  if (!idRegex.test(opts.id)) {\n    throw new TypeError(`id must satisfy ${idRegex}`);\n  }\n\n  fields.push(opts.id);\n\n  if (typeof opts.version !== 'undefined') {\n    if (\n      typeof opts.version !== 'number' ||\n      opts.version < 0 ||\n      !Number.isInteger(opts.version)\n    ) {\n      throw new TypeError('version must be a positive integer number');\n    }\n\n    fields.push(`v=${opts.version}`);\n  }\n\n  // Parameters Validation\n  if (typeof opts.params !== 'undefined') {\n    if (typeof opts.params !== 'object' || opts.params === null) {\n      throw new TypeError('params must be an object');\n    }\n\n    const pk = objectKeys(opts.params);\n    if (!pk.every(p => nameRegex.test(p))) {\n      throw new TypeError(`params names must satisfy ${nameRegex}`);\n    }\n\n    // Convert Numbers into Numeric Strings and Buffers into B64 encoded strings.\n    pk.forEach(k => {\n      if (typeof opts.params[k] === 'number') {\n        opts.params[k] = opts.params[k].toString();\n      } else if (Buffer.isBuffer(opts.params[k])) {\n        opts.params[k] = opts.params[k].toString('base64').split('=')[0];\n      }\n    });\n    const pv = objectValues(opts.params);\n    if (!pv.every(v => typeof v === 'string')) {\n      throw new TypeError('params values must be strings');\n    }\n\n    if (!pv.every(v => valueRegex.test(v))) {\n      throw new TypeError(`params values must satisfy ${valueRegex}`);\n    }\n\n    const strpar = objToKeyVal(opts.params);\n    fields.push(strpar);\n  }\n\n  if (typeof opts.salt !== 'undefined') {\n    // Salt Validation\n    if (!Buffer.isBuffer(opts.salt)) {\n      throw new TypeError('salt must be a Buffer');\n    }\n\n    fields.push(opts.salt.toString('base64').split('=')[0]);\n\n    if (typeof opts.hash !== 'undefined') {\n      // Hash Validation\n      if (!Buffer.isBuffer(opts.hash)) {\n        throw new TypeError('hash must be a Buffer');\n      }\n\n      fields.push(opts.hash.toString('base64').split('=')[0]);\n    }\n  }\n\n  // Create the PHC formatted string\n  const phcstr = fields.join('$');\n\n  return phcstr;\n}\n\n/**\n * Parses data from a PHC string.\n * @param  {string} phcstr A PHC string to parse.\n * @return {Object} The object containing the data parsed from the PHC string.\n */\nfunction deserialize(phcstr) {\n  if (typeof phcstr !== 'string' || phcstr === '') {\n    throw new TypeError('pchstr must be a non-empty string');\n  }\n\n  if (phcstr[0] !== '$') {\n    throw new TypeError('pchstr must contain a $ as first char');\n  }\n\n  const fields = phcstr.split('$');\n  // Remove first empty $\n  fields.shift();\n\n  // Parse Fields\n  let maxf = 5;\n  if (!versionRegex.test(fields[1])) maxf--;\n  if (fields.length > maxf) {\n    throw new TypeError(\n      `pchstr contains too many fileds: ${fields.length}/${maxf}`\n    );\n  }\n\n  // Parse Identifier\n  const id = fields.shift();\n  if (!idRegex.test(id)) {\n    throw new TypeError(`id must satisfy ${idRegex}`);\n  }\n\n  let version;\n  // Parse Version\n  if (versionRegex.test(fields[0])) {\n    version = parseInt(fields.shift().match(versionRegex)[1], 10);\n  }\n\n  let hash;\n  let salt;\n  if (b64Regex.test(fields[fields.length - 1])) {\n    if (fields.length > 1 && b64Regex.test(fields[fields.length - 2])) {\n      // Parse Hash\n      hash = Buffer.from(fields.pop(), 'base64');\n      // Parse Salt\n      salt = Buffer.from(fields.pop(), 'base64');\n    } else {\n      // Parse Salt\n      salt = Buffer.from(fields.pop(), 'base64');\n    }\n  }\n\n  // Parse Parameters\n  let params;\n  if (fields.length > 0) {\n    const parstr = fields.pop();\n    params = keyValtoObj(parstr);\n    if (!objectKeys(params).every(p => nameRegex.test(p))) {\n      throw new TypeError(`params names must satisfy ${nameRegex}`);\n    }\n\n    const pv = objectValues(params);\n    if (!pv.every(v => valueRegex.test(v))) {\n      throw new TypeError(`params values must satisfy ${valueRegex}`);\n    }\n\n    const pk = objectKeys(params);\n    // Convert Decimal Strings into Numbers\n    pk.forEach(k => {\n      params[k] = decimalRegex.test(params[k])\n        ? parseInt(params[k], 10)\n        : params[k];\n    });\n  }\n\n  if (fields.length > 0) {\n    throw new TypeError(`pchstr contains unrecognized fileds: ${fields}`);\n  }\n\n  // Build the output object\n  const phcobj = {id};\n  if (version) phcobj.version = version;\n  if (params) phcobj.params = params;\n  if (salt) phcobj.salt = salt;\n  if (hash) phcobj.hash = hash;\n\n  return phcobj;\n}\n\nmodule.exports = {\n  serialize,\n  deserialize\n};\n",
    "var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi && tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n",
    "const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\nif (typeof runtimeRequire.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = runtimeRequire.addon.bind(runtimeRequire)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n",
    "const assert = require(\"node:assert\");\nconst { randomBytes, timingSafeEqual } = require(\"node:crypto\");\nconst { promisify } = require(\"node:util\");\nconst { deserialize, serialize } = require(\"@phc/format\");\nconst gypBuild = require(\"node-gyp-build\");\n\nconst { hash: bindingsHash } = gypBuild(__dirname);\n\n/** @type {(size: number) => Promise<Buffer>} */\nconst generateSalt = promisify(randomBytes);\n\nconst argon2d = 0;\nconst argon2i = 1;\nconst argon2id = 2;\n\nmodule.exports.argon2d = argon2d;\nmodule.exports.argon2i = argon2i;\nmodule.exports.argon2id = argon2id;\n\n/** @enum {argon2i | argon2d | argon2id} */\nconst types = Object.freeze({ argon2d, argon2i, argon2id });\n\n/** @enum {'argon2d' | 'argon2i' | 'argon2id'} */\nconst names = Object.freeze({\n  [types.argon2d]: \"argon2d\",\n  [types.argon2i]: \"argon2i\",\n  [types.argon2id]: \"argon2id\",\n});\n\nconst defaults = {\n  hashLength: 32,\n  timeCost: 3,\n  memoryCost: 1 << 16,\n  parallelism: 4,\n  type: argon2id,\n  version: 0x13,\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [hashLength=32]\n * @property {number} [timeCost=3]\n * @property {number} [memoryCost=65536]\n * @property {number} [parallelism=4]\n * @property {keyof typeof names} [type=argon2id]\n * @property {number} [version=19]\n * @property {Buffer} [salt]\n * @property {Buffer} [associatedData]\n * @property {Buffer} [secret]\n */\n\n/**\n * Hashes a password with Argon2, producing a raw hash\n *\n * @overload\n * @param {Buffer | string} password The plaintext password to be hashed\n * @param {Options & { raw: true }} options The parameters for Argon2\n * @returns {Promise<Buffer>} The raw hash generated from `password`\n */\n/**\n * Hashes a password with Argon2, producing an encoded hash\n *\n * @overload\n * @param {Buffer | string} password The plaintext password to be hashed\n * @param {Options & { raw?: boolean }} [options] The parameters for Argon2\n * @returns {Promise<string>} The encoded hash generated from `password`\n */\n/**\n * @param {Buffer | string} password The plaintext password to be hashed\n * @param {Options & { raw?: boolean }} [options] The parameters for Argon2\n */\nasync function hash(password, options) {\n  let { raw, salt, ...rest } = { ...defaults, ...options };\n\n  if (rest.hashLength > 2 ** 32 - 1) {\n    throw new RangeError(\"Hash length is too large\");\n  }\n\n  if (rest.memoryCost > 2 ** 32 - 1) {\n    throw new RangeError(\"Memory cost is too large\");\n  }\n\n  if (rest.timeCost > 2 ** 32 - 1) {\n    throw new RangeError(\"Time cost is too large\");\n  }\n\n  if (rest.parallelism > 2 ** 24 - 1) {\n    throw new RangeError(\"Parallelism is too large\");\n  }\n\n  salt = salt ?? (await generateSalt(16));\n\n  const {\n    hashLength,\n    secret = Buffer.alloc(0),\n    type,\n    version,\n    memoryCost: m,\n    timeCost: t,\n    parallelism: p,\n    associatedData: data = Buffer.alloc(0),\n  } = rest;\n\n  const hash = await bindingsHash({\n    password: Buffer.from(password),\n    salt,\n    secret,\n    data,\n    hashLength,\n    m,\n    t,\n    p,\n    version,\n    type,\n  });\n  if (raw) {\n    return hash;\n  }\n\n  return serialize({\n    id: names[type],\n    version,\n    params: { m, t, p, ...(data.byteLength > 0 ? { data } : {}) },\n    salt,\n    hash,\n  });\n}\nmodule.exports.hash = hash;\n\n/**\n * @param {string} digest The digest to be checked\n * @param {Object} [options] The current parameters for Argon2\n * @param {number} [options.timeCost=3]\n * @param {number} [options.memoryCost=65536]\n * @param {number} [options.parallelism=4]\n * @param {number} [options.version=0x13]\n * @returns {boolean} `true` if the digest parameters do not match the parameters in `options`, otherwise `false`\n */\nfunction needsRehash(digest, options = {}) {\n  const { memoryCost, timeCost, parallelism, version } = {\n    ...defaults,\n    ...options,\n  };\n\n  const {\n    version: v,\n    params: { m, t, p },\n  } = deserialize(digest);\n\n  return (\n    +v !== +version ||\n    +m !== +memoryCost ||\n    +t !== +timeCost ||\n    +p !== +parallelism\n  );\n}\nmodule.exports.needsRehash = needsRehash;\n\n/**\n * @param {string} digest The digest to be checked\n * @param {Buffer | string} password The plaintext password to be verified\n * @param {Object} [options] The current parameters for Argon2\n * @param {Buffer} [options.secret]\n * @returns {Promise<boolean>} `true` if the digest parameters matches the hash generated from `password`, otherwise `false`\n */\nasync function verify(digest, password, options = {}) {\n  const { id, ...rest } = deserialize(digest);\n  if (!(id in types)) {\n    return false;\n  }\n\n  const {\n    version = 0x10,\n    params: { m, t, p, data = \"\" },\n    salt,\n    hash,\n  } = rest;\n\n  const { secret = Buffer.alloc(0) } = options;\n\n  return timingSafeEqual(\n    await bindingsHash({\n      password: Buffer.from(password),\n      salt,\n      secret,\n      data: Buffer.from(data, \"base64\"),\n      hashLength: hash.byteLength,\n      m: +m,\n      t: +t,\n      p: +p,\n      version: +version,\n      type: types[id],\n    }),\n    hash,\n  );\n}\nmodule.exports.verify = verify;\n",
    "// packages/core/src/config/VersionRegistry.ts\nimport { VersionDescriptor } from \"../types/index.js\";\n\nexport class VersionRegistry {\n  private static readonly byId = new Map<number, VersionDescriptor>();\n\n  /** register at app‑start (or dynamically for plug‑ins) */\n  static register(v: VersionDescriptor): void {\n    if (this.byId.has(v.id)) throw new Error(`Version ${v.id} already registered`);\n    this.byId.set(v.id, v);\n  }\n  static get(id: number): VersionDescriptor {\n    const v = this.byId.get(id);\n    if (!v) throw new Error(`Unknown version: ${id}`);\n    return v;\n  }\n  /** default (current) version – convenience */\n  static get current(): VersionDescriptor { return this.get(0); }\n}",
    "\nimport { CryptoProvider } from '../../../providers/CryptoProvider.js';\nimport { EncryptionAlgorithm } from '../../../types/index.js';\n\nexport class AESGCM implements EncryptionAlgorithm {\n  private key!: CryptoKey;\n\n  constructor(private readonly p: CryptoProvider) {}\n\n  setKey(k: CryptoKey) { this.key = k; }     // simple setter (ISP)\n  // or expose through a common mix‑in helper to avoid repetition\n\n  async encryptChunk(plain: Uint8Array): Promise<Uint8Array> {\n    const iv = this.p.getRandomValues(new Uint8Array(12));\n    const cipher = new Uint8Array(\n      await this.p.subtle.encrypt({ name: 'AES-GCM', iv }, this.key, plain),\n    );\n    const out = new Uint8Array(iv.length + cipher.length);\n    out.set(iv);\n    out.set(cipher, iv.length);\n    return out;\n  }\n  async decryptChunk(data: Uint8Array): Promise<Uint8Array> {\n    const iv     = data.slice(0, 12);\n    const cipher = data.slice(12);\n    const plain  = await this.p.subtle.decrypt({ name: 'AES-GCM', iv }, this.key, cipher);\n    return new Uint8Array(plain);\n  }\n}",
    "// packages/core/src/algorithms/argon2.ts\n/**\n * Environment-agnostic Argon2-id wrapper.\n *  • Node / Bun  → native `argon2` addon (fastest)\n *  • Browser     → antelle/argon2-browser (WASM)\n */\n\nimport * as Argon2Browser from \"argon2-browser\";\n\n/** Minimal subset of tuning parameters we expose */\nexport interface Argon2Tuning {\n  time: number;        // iterations\n  mem: number;         // kibibytes\n  parallelism: number; // lanes\n}\n\nexport type ArgonHash = { hash: Uint8Array };\n\n/**\n * Derive a 32-byte hash with Argon2-id.\n *\n * @param password   UTF-8 string or raw bytes\n * @param salt       random salt\n * @param opts       memory/time/parallelism\n * @param env        'node' (incl. Bun) or 'browser'\n */\nexport async function argon2id(\n  password: Uint8Array | string,\n  salt: Uint8Array,\n  opts: Argon2Tuning,\n  env: \"node\" | \"browser\",\n): Promise<ArgonHash> {\n  // ————————————————————————————  Node / Bun  ————————————————————————————\n  if (env === \"node\") {\n    const argon2 = await import(\"argon2\");\n    const pwdBuf =\n      typeof password === \"string\" ? Buffer.from(password, \"utf8\")\n                                   : Buffer.from(password);\n\n    const saltBuf = Buffer.from(salt);\n\n    const raw: Buffer = await argon2.hash(pwdBuf, {\n      salt       : saltBuf,\n      timeCost    : opts.time,\n      memoryCost  : opts.mem,\n      parallelism : opts.parallelism,\n      hashLength  : 32,\n      raw         : true,\n      type        : argon2.argon2id,\n    });\n\n    return { hash: new Uint8Array(raw) };\n\n  }\n\n  // ————————————————————————————  Browser  ————————————————————————————\n  if (env === \"browser\") {\n    const { hash } = await Argon2Browser.hash({\n      pass: password,\n      salt,\n      time: opts.time,\n      mem: opts.mem,\n      parallelism: opts.parallelism,\n      hashLen: 32,\n      type: Argon2Browser.ArgonType.Argon2id,\n    });\n    return { hash };\n  }\n\n  throw new Error(`Unsupported environment: ${env}`);\n}",
    "// packages/core/src/algorithms/kdf/Argon2.ts\nimport type { KeyDerivation } from '../../types/index.js';\nimport { argon2id, type Argon2Tuning } from './argon2-wrapper.js';\nimport type { CryptoProvider } from '../../providers/CryptoProvider.js';\n\n/**\n * Argon2-id Key-Derivation Function\n */\nexport class Argon2KDF implements KeyDerivation<'low' | 'middle' | 'high'> {\n  readonly name = 'argon2id';\n\n  constructor(\n    private readonly presets: Readonly<Record<'low' | 'middle' | 'high', Argon2Tuning>>\n  ) {}\n\n  async derive(\n    passphrase: Uint8Array | string,\n    salt: Uint8Array,\n    difficulty: 'low' | 'middle' | 'high',\n    provider: CryptoProvider\n  ): Promise<CryptoKey> {\n    const { hash } = await argon2id(\n      passphrase,\n      salt,\n      this.presets[difficulty],\n      provider.isNode ? 'node' : 'browser'\n    );\n    return provider.subtle.importKey(\n      'raw',\n      hash,\n      { name: 'AES-GCM', length: 256 },\n      false,\n      ['encrypt', 'decrypt']\n    );\n  }\n}",
    "import { VersionRegistry } from './VersionRegistry.js';\nimport { AESGCM } from '../algorithms/encryption/aes-gmc/AESGCM.js';\nimport { Argon2KDF } from '../algorithms/kdf/Argon2.js';\nimport { VersionDescriptor } from '../types/index.js';\n\nexport const DEFAULT_DIFFICULTIES = {\n  low   : { time:  5, mem:  64 * 1024, parallelism: 1 },\n  middle: { time: 20, mem:  64 * 1024, parallelism: 1 },\n  high  : { time: 40, mem:  64 * 1024, parallelism: 1 },\n} as const;\n\nconst v0: VersionDescriptor = {\n  id: 0,\n  cipher: AESGCM,\n  kdf: new Argon2KDF(DEFAULT_DIFFICULTIES),\n  saltLengths: { low: 12, high: 16 },\n  difficulties: DEFAULT_DIFFICULTIES,\n  defaultChunkSize: 512 * 1024,\n};\n\nVersionRegistry.register(v0);\n\nexport type SaltStrength = 'low' | 'high';\nexport type Difficulty = keyof typeof DEFAULT_DIFFICULTIES;",
    "// packages/core/src/header/constants.ts\nexport const HEADER_START_BYTE = 0x01;          // magic",
    "export function concat(...chunks: Uint8Array[]): Uint8Array {\n  const total = chunks.reduce((n, c) => n + c.byteLength, 0);\n  const out   = new Uint8Array(total);\n  let offset  = 0;\n  for (const c of chunks) {\n    out.set(c, offset);\n    offset += c.byteLength;\n  }\n  return out;\n}\n\n/**\n * Base64-encode one or more Uint8Arrays without intermediate copies.\n */\nexport function base64Encode(...chunks: Uint8Array[]): string {\n  return Buffer.from(concat(...chunks)).toString('base64');\n}\n\n/** Reverse of `base64Encode` */\nexport function base64Decode(b64: string): Uint8Array {\n  return Uint8Array.from(Buffer.from(b64, 'base64'));\n}",
    "// packages/core/src/header/encoder.ts\nimport { HEADER_START_BYTE } from './constants.js';\nimport { concat } from '../util/bytes.js';\n\nexport function encodeHeader(\n  version: number,\n  difficulty: string,\n  saltStrength: 'low' | 'high',\n  salt: Uint8Array,\n): Uint8Array {\n  const diffCode = { low: 0, middle: 1, high: 2 }[difficulty] ?? 0;\n  const infoByte = (version << 5) | ((saltStrength === 'high' ? 1 : 0) << 2) | diffCode;\n  return concat(new Uint8Array([HEADER_START_BYTE, infoByte]), salt);\n}",
    "import {  HEADER_START_BYTE } from './constants.js';\nimport { VersionRegistry } from '../config/VersionRegistry.js';\n\nexport function decodeHeader(buf: Uint8Array) {\n  if (buf[0] !== HEADER_START_BYTE) throw new Error('INVALID_HEADER');\n  const info = buf[1];\n  const version      = info >> 5;\n  const saltStrength = ((info >> 2) & 1) ? 'high' : 'low';\n  const diffCode     = info & 0b11;\n  const difficulty   = (['low', 'middle', 'high'] as const)[diffCode];\n  const saltLen      = VersionRegistry.get(version).saltLengths[saltStrength];\n  const salt         = buf.slice(2, 2 + saltLen);\n  return { version, difficulty, saltStrength, salt, headerLen: 2 + saltLen };\n}",
    "// packages/core/src/stream/EncryptTransform.ts\nimport type { EncryptionAlgorithm } from '../types/index.js';\n\n/**\n * TransformStream that:\n *   • collects plaintext into fixed‐size blocks\n *   • encrypts each block\n *   • emits: [4-byte length ‖ encryptedBlock]\n */\nexport class EncryptTransform {\n  private buffer = new Uint8Array(0);\n\n  constructor(\n    private readonly engine: EncryptionAlgorithm,\n    private readonly chunkSize = 512 * 1024,\n  ) {}\n\n  toTransformStream(): TransformStream<Uint8Array | ArrayBuffer | Blob, Uint8Array> {\n    return new TransformStream({\n      transform: async (chunk, ctl) => {\n        await this.transform(\n          await this.asUint8Array(chunk),\n          ctl,\n        );\n      },\n      flush: async ctl => this.flush(ctl),\n    });\n  }\n\n  private async transform(\n    bytes: Uint8Array,\n    ctl: TransformStreamDefaultController<Uint8Array>,\n  ) {\n    const combined = new Uint8Array(this.buffer.length + bytes.length);\n    combined.set(this.buffer);\n    combined.set(bytes, this.buffer.length);\n\n    let offset = 0;\n    while (combined.length - offset >= this.chunkSize) {\n      const block = combined.slice(offset, offset + this.chunkSize);\n      offset += this.chunkSize;\n\n      const encrypted = await this.engine.encryptChunk(block);\n\n      const header = new Uint8Array(4);\n      new DataView(header.buffer).setUint32(0, encrypted.length, false);\n\n      const out = new Uint8Array(4 + encrypted.length);\n      out.set(header);\n      out.set(encrypted, header.length);\n\n      ctl.enqueue(out);\n    }\n\n    this.buffer = combined.slice(offset);\n  }\n\n  private async flush(ctl: TransformStreamDefaultController<Uint8Array>) {\n    if (!this.buffer.length) return;\n    const encrypted = await this.engine.encryptChunk(this.buffer);\n\n    const header = new Uint8Array(4);\n    new DataView(header.buffer).setUint32(0, encrypted.length, false);\n\n    const out = new Uint8Array(4 + encrypted.length);\n    out.set(header);\n    out.set(encrypted, 4);\n\n    ctl.enqueue(out);\n    this.buffer = new Uint8Array(0);\n  }\n\n  private async asUint8Array(\n    input: Uint8Array | ArrayBuffer | Blob,\n  ): Promise<Uint8Array> {\n    if (input instanceof Uint8Array) return input;\n    if (input instanceof ArrayBuffer) return new Uint8Array(input);\n    return new Uint8Array(await input.arrayBuffer());\n  }\n}",
    "// packages/core/src/stream/DecryptTransform.ts\nimport type { EncryptionAlgorithm } from '../types/index.js';\n\n/**\n * Counterpart to EncryptTransform.\n * Streams framed ciphertext → raw plaintext.\n */\nexport class DecryptTransform {\n  private buffer = new Uint8Array(0);\n\n  constructor(\n    private readonly engine: EncryptionAlgorithm,\n    private readonly chunkSize = 512 * 1024,\n  ) {}\n\n  toTransformStream(): TransformStream<Uint8Array | ArrayBuffer | Blob, Uint8Array> {\n    return new TransformStream({\n      transform: async (chunk, ctl) => {\n        await this.transform(\n          await this.asUint8Array(chunk),\n          ctl,\n        );\n      },\n      flush: async ctl => this.flush(ctl),\n    });\n  }\n\n  private async transform(\n    bytes: Uint8Array,\n    ctl: TransformStreamDefaultController<Uint8Array>,\n  ) {\n    const combined = new Uint8Array(this.buffer.length + bytes.length);\n    combined.set(this.buffer);\n    combined.set(bytes, this.buffer.length);\n\n    let offset = 0;\n    while (true) {\n      if (combined.length - offset < 4) break;\n      const cipherLen = new DataView(\n        combined.buffer,\n        combined.byteOffset + offset,\n        4,\n      ).getUint32(0, false);\n      if (combined.length - offset - 4 < cipherLen) break;\n\n      offset += 4;\n      const cipher = combined.slice(offset, offset + cipherLen);\n      offset += cipherLen;\n\n      const plain = await this.engine.decryptChunk(cipher);\n      ctl.enqueue(plain);\n    }\n\n    this.buffer = combined.slice(offset);\n  }\n\n  private async flush(ctl: TransformStreamDefaultController<Uint8Array>) {\n    await this.transform(new Uint8Array(0), ctl);\n    this.buffer = new Uint8Array(0);\n  }\n\n  private async asUint8Array(\n    input: Uint8Array | ArrayBuffer | Blob,\n  ): Promise<Uint8Array> {\n    if (input instanceof Uint8Array) return input;\n    if (input instanceof ArrayBuffer) return new Uint8Array(input);\n    return new Uint8Array(await input.arrayBuffer());\n  }\n}",
    "// packages/core/src/stream/StreamProcessor.ts\nimport { EncryptTransform } from './EncryptTransform.js';\nimport { DecryptTransform } from './DecryptTransform.js';\nimport type { EncryptionAlgorithm } from '../types/index.js';\n\nexport class StreamProcessor {\n  constructor(\n    private readonly engine: EncryptionAlgorithm,\n    private readonly chunkSize = 512 * 1024,\n  ) {}\n\n  encryptionStream(): TransformStream<Uint8Array, Uint8Array> {\n    const enc = new EncryptTransform(this.engine, this.chunkSize)\n                  .toTransformStream();\n    return {\n      writable: enc.writable,\n      readable: enc.readable,\n    } as TransformStream<Uint8Array, Uint8Array>;\n  }\n\n  decryptionStream(headerLen: number): TransformStream<Uint8Array, Uint8Array> {\n    let skip = headerLen;\n    const strip = new TransformStream<Uint8Array, Uint8Array>({\n      transform(chunk, ctl) {\n        if (skip === 0) {\n          ctl.enqueue(chunk);\n          return;\n        }\n        if (chunk.byteLength <= skip) {\n          skip -= chunk.byteLength;\n          return;\n        }\n        ctl.enqueue(chunk.slice(skip));\n        skip = 0;\n      },\n    });\n\n    const decryptTs = new DecryptTransform(this.engine, this.chunkSize)\n                        .toTransformStream();\n\n    return {\n      writable: strip.writable,\n      readable: strip.readable.pipeThrough(decryptTs),\n    } as TransformStream<Uint8Array, Uint8Array>;\n  }\n\n  async collect(\n    readable: ReadableStream<Uint8Array>,\n    transform: TransformStream<Uint8Array, Uint8Array>,\n    prefix: Uint8Array | null = null,\n  ): Promise<Uint8Array> {\n    const reader = readable.pipeThrough(transform).getReader();\n    const chunks: Uint8Array[] = [];\n    if (prefix?.length) chunks.push(prefix);\n\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) break;\n      chunks.push(value);\n    }\n\n    const total = chunks.reduce((n, c) => n + c.byteLength, 0);\n    const out   = new Uint8Array(total);\n    let offset  = 0;\n    for (const c of chunks) {\n      out.set(c, offset);\n      offset += c.byteLength;\n    }\n    return out;\n  }\n}",
    "// packages/core/src/index.ts\n\nimport './config/defaults.js';\n\nimport type { CryptoProvider } from \"./providers/CryptoProvider.js\";\n\nimport { Difficulty, SaltStrength } from './config/defaults.js';\n\nimport { encodeHeader } from \"./header/encoder.js\";\nimport { decodeHeader } from \"./header/decoder.js\";\n\nimport {\n  EncryptionAlgorithm,\n  KeyDerivation,\n  VersionDescriptor,\n} from './types/index.js';\n\nimport { VersionRegistry } from \"./config/VersionRegistry.js\";\n\nimport { base64Encode, base64Decode } from \"./util/bytes.js\";\n\nimport { StreamProcessor }  from \"./stream/StreamProcessor.js\";\nimport { EncryptTransform } from \"./stream/EncryptTransform.js\";\nimport { DecryptTransform } from \"./stream/DecryptTransform.js\";\n\n// ────────────────────────────────────────────────────────────────────────────\n//  Public configuration shape\n// ────────────────────────────────────────────────────────────────────────────\n\nexport interface EncryptStreamResult {\n  header: Uint8Array;\n  writable: WritableStream<Uint8Array>;\n  readable: ReadableStream<Uint8Array>;\n}\n\n\nexport interface CryptitOptions {\n  /** 0 … 7 – defaults to the registry’s *current* version */\n  version?: number;\n  /** ‘low’ | ‘middle’ | ‘high’; defaults to descriptor’s middle/high */\n  saltStrength?: SaltStrength;\n  difficulty?: Difficulty;\n  chunkSize?: number;\n}\n\nexport class Cryptit {\n  private readonly v: VersionDescriptor;\n  private readonly cipher: EncryptionAlgorithm;\n  private readonly kdf: KeyDerivation;\n  private readonly chunkSize: number;\n  private readonly stream: StreamProcessor;\n  \n  private readonly difficulty: Difficulty;\n  private readonly saltStrength: SaltStrength;\n\n  constructor(\n    private readonly provider: CryptoProvider,\n    opt: CryptitOptions = {},\n  ) {\n    this.v = VersionRegistry.get(opt.version ?? VersionRegistry.current.id);\n    this.cipher = new this.v.cipher(provider);\n    this.kdf    = this.v.kdf;\n    this.chunkSize = opt.chunkSize ?? this.v.defaultChunkSize;\n    this.stream = new StreamProcessor(this.cipher, this.chunkSize);\n\n    this.difficulty   = opt.difficulty   ?? 'middle';\n    this.saltStrength = opt.saltStrength ?? 'high';\n  }\n\n  // ------------------------------------------------------------------------------------------------\n  //  TEXT\n  // ------------------------------------------------------------------------------------------------\n  async encryptText(plain: string | Uint8Array, pass: string): Promise<string> {\n    const salt = this.genSalt();\n    await this.deriveKey(pass, salt);\n\n    const cipher = await this.cipher.encryptChunk(\n      typeof plain === 'string' ? new TextEncoder().encode(plain) : plain,\n    );\n    const header = encodeHeader(this.v.id, this.difficulty, this.saltStrength, salt);\n    return base64Encode(header, cipher);\n  }\n\n  async decryptText(b64: string, pass: string): Promise<string> {\n    const data = base64Decode(b64);\n    const hdr  = decodeHeader(data);\n    const v    = VersionRegistry.get(hdr.version);\n\n    this.ensureSameVersion(v);                // LSP – never mix engines\n    await this.deriveKey(pass, hdr.salt, hdr.difficulty);\n\n    const plain = await this.cipher.decryptChunk(data.slice(hdr.headerLen));\n    return new TextDecoder().decode(plain);\n  }\n\n\n  /* ──────────────────────────────────────────────────────────\n   Encrypt a whole Blob and return an opaque binary Blob\n   ────────────────────────────────────────────────────────── */\nasync encryptFile(file: Blob, pass: string): Promise<Blob> {\n  const salt = this.genSalt();\n  await this.deriveKey(pass, salt);                       // difficulty defaulted\n\n  const header = encodeHeader(this.v.id, this.difficulty, this.saltStrength, salt);\n\n  const cipher = await this.stream.collect(\n    file.stream() as ReadableStream<Uint8Array>,\n    new EncryptTransform(this.cipher, this.chunkSize).toTransformStream(),\n    header,                                               // prepend once\n  );\n\n  return new Blob([cipher], { type: 'application/octet-stream' });\n}\n\n/* ──────────────────────────────────────────────────────────\n   Decrypt a Blob that carries its own header (any version)\n   ────────────────────────────────────────────────────────── */\nasync decryptFile(file: Blob, pass: string): Promise<Blob> {\n  /* peek first 2 bytes → work out version & saltStrength      */\n  const info          = new Uint8Array(await file.slice(0, 2).arrayBuffer());\n  const version       = info[1] >> 5;\n  const saltStrength  = ((info[1] >> 2) & 1) ? 'high' : 'low';\n  const saltLen       = VersionRegistry.get(version).saltLengths[saltStrength];\n  const headerLen     = 2 + saltLen;\n\n  const header = new Uint8Array(await file.slice(0, headerLen).arrayBuffer());\n  const parsed = decodeHeader(header);                    // gives salt & difficulty\n\n  await this.deriveKey(pass, parsed.salt, parsed.difficulty);\n\n  const plain = await this.stream.collect(\n    file.slice(headerLen).stream() as ReadableStream<Uint8Array>,\n    new DecryptTransform(this.cipher, this.chunkSize).toTransformStream(),\n  );\n\n  return new Blob([plain], { type: 'application/octet-stream' });\n}\n\n/* ──────────────────────────────────────────────────────────\n   Streaming encryption: returns header + TransformStream\n   ────────────────────────────────────────────────────────── */\nasync createEncryptionStream(pass: string): Promise<EncryptStreamResult> {\n  const salt = this.genSalt();\n  await this.deriveKey(pass, salt);\n\n  const header = encodeHeader(this.v.id, this.difficulty, this.saltStrength, salt);\n  const tf     = this.stream.encryptionStream();          // headerless pipeline\n\n  return { header, writable: tf.writable, readable: tf.readable };\n}\n\n/* ──────────────────────────────────────────────────────────\n   Streaming decryption (auto-detect header, any version)\n   ────────────────────────────────────────────────────────── */\nasync createDecryptionStream(\n  passphrase: string,\n): Promise<TransformStream<Uint8Array, Uint8Array>> {\n\n  const self       = this;\n  let   buf        = new Uint8Array(0);\n  let   derived    = false;\n  let   downstream!: TransformStream<Uint8Array, Uint8Array>;\n\n  function concat(a: Uint8Array, b: Uint8Array) {\n    const out = new Uint8Array(a.length + b.length);\n    out.set(a); out.set(b, a.length);\n    return out;\n  }\n\n  async function pump(\n    readable: ReadableStream<Uint8Array>,\n    ctl: TransformStreamDefaultController<Uint8Array>,\n  ) {\n    const reader = readable.getReader();\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) break;\n      ctl.enqueue(value);\n    }\n  }\n\n  return new TransformStream<Uint8Array, Uint8Array>({\n    async transform(chunk, ctl) {\n      if (!derived) {\n        buf = concat(buf, chunk);\n        if (buf.length < 2) return;\n\n        const version       = buf[1] >> 5;\n        const saltStrength  = ((buf[1] >> 2) & 1) ? 'high' : 'low';\n        const saltLen       = VersionRegistry.get(version).saltLengths[saltStrength];\n        const hdrLen        = 2 + saltLen;\n        if (buf.length < hdrLen) return;\n\n        const header                  = buf.slice(0, hdrLen);\n        const { salt, difficulty }    = decodeHeader(header);\n\n        /* Safety: ensure stream version matches this instance */\n        if (version !== self.v.id)\n          throw new Error(`Ciphertext v${version} but Cryptit instance is v${self.v.id}`);\n\n        await self.deriveKey(passphrase, salt, difficulty);\n\n        downstream = new DecryptTransform(self.cipher, self.chunkSize).toTransformStream();\n        pump(downstream.readable, ctl);                   // fire-and-forget\n\n        const remainder = buf.slice(hdrLen);\n        if (remainder.length) {\n          const w = downstream.writable.getWriter();\n          await w.write(remainder);\n          w.releaseLock();\n        }\n        derived = true;\n        return;\n      }\n\n      const w = downstream.writable.getWriter();\n      await w.write(chunk);\n      w.releaseLock();\n    },\n\n    async flush() {\n      if (derived) {\n        const w = downstream.writable.getWriter();\n        await w.close();\n        w.releaseLock();\n      }\n    },\n  });\n}\n\n  // ──────────────────────────────────────────────────\n  //  Helpers\n  // ──────────────────────────────────────────────────\n  private async deriveKey(\n    pass: string,\n    salt: Uint8Array,\n    diff: Difficulty = this.difficulty,   // ← default so callers may omit\n  ): Promise<void> {\n    const key = await this.kdf.derive(pass, salt, diff, this.provider);\n    (this.cipher as any).key = key;       // AES-GCM (and other engines) expect it\n  }\n\n  concat(a: Uint8Array, b: Uint8Array): Uint8Array {\n    const out = new Uint8Array(a.length + b.length);\n    out.set(a, 0);\n    out.set(b, a.length);\n    return out;\n  }\n\n  private genSalt(): Uint8Array {\n    const len = this.v.saltLengths[this.saltStrength];\n    return this.provider.getRandomValues(new Uint8Array(len));\n  }\n\n  private ensureSameVersion(v: VersionDescriptor): void {\n    if (v.id !== this.v.id)\n      throw new Error(\n        `This Cryptit instance was created for v${this.v.id} but ciphertext is v${v.id}`,\n      );\n  }\n}\n",
    "import { webcrypto, randomFillSync } from 'node:crypto';\nimport type { CryptoProvider } from '../../core/src/providers/CryptoProvider.js';\n\nexport const nodeProvider: CryptoProvider = {\n  // cast is safe: Node’s SubtleCrypto is a superset of the browser spec\n  subtle: webcrypto.subtle as unknown as SubtleCrypto,\n  getRandomValues(buf) {\n    randomFillSync(buf);\n    return buf;\n  },\n  isNode: true,\n};\n",
    "// packages/node-runtime/src/index.ts\nimport { Cryptit, type CryptitOptions } from '../../core/src/index.js';\nimport { nodeProvider } from './provider.js';\n\n/**\n * Factory for Node.js (and Bun) environments.\n *\n * Usage:\n *   import { createCryptit } from '@your-org/cryptit/node';\n *   const crypt = createCryptit({ saltStrength: 'low' });\n */\nexport function createCryptit(cfg?: CryptitOptions): Cryptit {\n  return new Cryptit(nodeProvider, cfg);\n}\n\nexport type { CryptitOptions } from '../../core/src/index.js';"
  ],
  "mappings": "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",
  "debugId": "3BAD3DAA76E1B3AE64756E2164756E21",
  "names": []
}