{
  "version": 3,
  "sources": ["../../node_modules/commander/lib/error.js", "../../node_modules/commander/lib/argument.js", "../../node_modules/commander/lib/help.js", "../../node_modules/commander/lib/option.js", "../../node_modules/commander/lib/suggestSimilar.js", "../../node_modules/commander/lib/command.js", "../../node_modules/commander/index.js", "../../node_modules/@phc/format/index.js", "../../node_modules/node-gyp-build/node-gyp-build.js", "../../node_modules/node-gyp-build/index.js", "../../node_modules/argon2/argon2.cjs", "../../node_modules/commander/esm.mjs", "../../packages/node-runtime/src/cli.ts", "../../packages/core/src/errors/index.ts", "../../packages/core/src/util/bytes.ts", "../../packages/core/src/util/range.ts", "../../packages/core/src/util/ByteSource.ts", "../../packages/core/src/config/SchemeRegistry.ts", "../../packages/core/src/algorithms/encryption/aes-gcm/AESGCM.ts", "../../node_modules/@noble/ciphers/esm/utils.js", "../../node_modules/@noble/ciphers/esm/_arx.js", "../../node_modules/@noble/ciphers/esm/_poly1305.js", "../../node_modules/@noble/ciphers/esm/chacha.js", "../../packages/core/src/algorithms/encryption/xchacha20poly1305/XChaCha20-Poly1305.ts", "../../packages/core/src/algorithms/kdf/argon2-wrapper.ts", "../../packages/core/src/algorithms/kdf/Argon2.ts", "../../packages/core/src/config/defaults.ts", "../../packages/core/src/header/constants.ts", "../../packages/core/src/header/encoder.ts", "../../packages/core/src/header/decoder.ts", "../../packages/core/src/util/convert.ts", "../../packages/core/src/util/frame.ts", "../../packages/core/src/stream/EncryptTransform.ts", "../../packages/core/src/stream/DecryptTransform.ts", "../../packages/core/src/util/stream.ts", "../../packages/core/src/stream/StreamProcessor.ts", "../../packages/core/src/util/Convertible.ts", "../../packages/core/src/util/logger.ts", "../../packages/core/src/engine/EngineManager.ts", "../../packages/core/src/index.ts", "../../packages/node-runtime/src/provider.ts", "../../packages/node-runtime/src/index.ts", "../../packages/node-runtime/src/streamAdapter.ts"],
  "sourcesContent": [
    "/**\n * CommanderError class\n * @class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @constructor\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n * @class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   * @constructor\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n",
    "const { InvalidArgumentError } = require('./error.js');\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n",
    "const { humanReadableArgName } = require('./argument.js');\n\n/**\n * TypeScript import types for JSDoc, used by Visual Studio Code IntelliSense and `npm run typescript-checkJS`\n * https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html#import-types\n * @typedef { import(\"./argument.js\").Argument } Argument\n * @typedef { import(\"./command.js\").Command } Command\n * @typedef { import(\"./option.js\").Option } Option\n */\n\n// Although this is a class, methods are static in style to allow override using subclass or just functions.\nclass Help {\n  constructor() {\n    this.helpWidth = undefined;\n    this.sortSubcommands = false;\n    this.sortOptions = false;\n    this.showGlobalOptions = false;\n  }\n\n  /**\n   * Get an array of the visible subcommands. Includes a placeholder for the implicit help command, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Command[]}\n   */\n\n  visibleCommands(cmd) {\n    const visibleCommands = cmd.commands.filter(cmd => !cmd._hidden);\n    if (cmd._hasImplicitHelpCommand()) {\n      // Create a command matching the implicit help command.\n      const [, helpName, helpArgs] = cmd._helpCommandnameAndArgs.match(/([^ ]+) *(.*)/);\n      const helpCommand = cmd.createCommand(helpName)\n        .helpOption(false);\n      helpCommand.description(cmd._helpCommandDescription);\n      if (helpArgs) helpCommand.arguments(helpArgs);\n      visibleCommands.push(helpCommand);\n    }\n    if (this.sortSubcommands) {\n      visibleCommands.sort((a, b) => {\n        // @ts-ignore: overloaded return type\n        return a.name().localeCompare(b.name());\n      });\n    }\n    return visibleCommands;\n  }\n\n  /**\n   * Compare options for sort.\n   *\n   * @param {Option} a\n   * @param {Option} b\n   * @returns number\n   */\n  compareOptions(a, b) {\n    const getSortKey = (option) => {\n      // WYSIWYG for order displayed in help. Short used for comparison if present. No special handling for negated.\n      return option.short ? option.short.replace(/^-/, '') : option.long.replace(/^--/, '');\n    };\n    return getSortKey(a).localeCompare(getSortKey(b));\n  }\n\n  /**\n   * Get an array of the visible options. Includes a placeholder for the implicit help option, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleOptions(cmd) {\n    const visibleOptions = cmd.options.filter((option) => !option.hidden);\n    // Implicit help\n    const showShortHelpFlag = cmd._hasHelpOption && cmd._helpShortFlag && !cmd._findOption(cmd._helpShortFlag);\n    const showLongHelpFlag = cmd._hasHelpOption && !cmd._findOption(cmd._helpLongFlag);\n    if (showShortHelpFlag || showLongHelpFlag) {\n      let helpOption;\n      if (!showShortHelpFlag) {\n        helpOption = cmd.createOption(cmd._helpLongFlag, cmd._helpDescription);\n      } else if (!showLongHelpFlag) {\n        helpOption = cmd.createOption(cmd._helpShortFlag, cmd._helpDescription);\n      } else {\n        helpOption = cmd.createOption(cmd._helpFlags, cmd._helpDescription);\n      }\n      visibleOptions.push(helpOption);\n    }\n    if (this.sortOptions) {\n      visibleOptions.sort(this.compareOptions);\n    }\n    return visibleOptions;\n  }\n\n  /**\n   * Get an array of the visible global options. (Not including help.)\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleGlobalOptions(cmd) {\n    if (!this.showGlobalOptions) return [];\n\n    const globalOptions = [];\n    for (let ancestorCmd = cmd.parent; ancestorCmd; ancestorCmd = ancestorCmd.parent) {\n      const visibleOptions = ancestorCmd.options.filter((option) => !option.hidden);\n      globalOptions.push(...visibleOptions);\n    }\n    if (this.sortOptions) {\n      globalOptions.sort(this.compareOptions);\n    }\n    return globalOptions;\n  }\n\n  /**\n   * Get an array of the arguments if any have a description.\n   *\n   * @param {Command} cmd\n   * @returns {Argument[]}\n   */\n\n  visibleArguments(cmd) {\n    // Side effect! Apply the legacy descriptions before the arguments are displayed.\n    if (cmd._argsDescription) {\n      cmd.registeredArguments.forEach(argument => {\n        argument.description = argument.description || cmd._argsDescription[argument.name()] || '';\n      });\n    }\n\n    // If there are any arguments with a description then return all the arguments.\n    if (cmd.registeredArguments.find(argument => argument.description)) {\n      return cmd.registeredArguments;\n    }\n    return [];\n  }\n\n  /**\n   * Get the command term to show in the list of subcommands.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandTerm(cmd) {\n    // Legacy. Ignores custom usage string, and nested commands.\n    const args = cmd.registeredArguments.map(arg => humanReadableArgName(arg)).join(' ');\n    return cmd._name +\n      (cmd._aliases[0] ? '|' + cmd._aliases[0] : '') +\n      (cmd.options.length ? ' [options]' : '') + // simplistic check for non-help option\n      (args ? ' ' + args : '');\n  }\n\n  /**\n   * Get the option term to show in the list of options.\n   *\n   * @param {Option} option\n   * @returns {string}\n   */\n\n  optionTerm(option) {\n    return option.flags;\n  }\n\n  /**\n   * Get the argument term to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @returns {string}\n   */\n\n  argumentTerm(argument) {\n    return argument.name();\n  }\n\n  /**\n   * Get the longest command term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestSubcommandTermLength(cmd, helper) {\n    return helper.visibleCommands(cmd).reduce((max, command) => {\n      return Math.max(max, helper.subcommandTerm(command).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestOptionTermLength(cmd, helper) {\n    return helper.visibleOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest global option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestGlobalOptionTermLength(cmd, helper) {\n    return helper.visibleGlobalOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest argument term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestArgumentTermLength(cmd, helper) {\n    return helper.visibleArguments(cmd).reduce((max, argument) => {\n      return Math.max(max, helper.argumentTerm(argument).length);\n    }, 0);\n  }\n\n  /**\n   * Get the command usage to be displayed at the top of the built-in help.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandUsage(cmd) {\n    // Usage\n    let cmdName = cmd._name;\n    if (cmd._aliases[0]) {\n      cmdName = cmdName + '|' + cmd._aliases[0];\n    }\n    let ancestorCmdNames = '';\n    for (let ancestorCmd = cmd.parent; ancestorCmd; ancestorCmd = ancestorCmd.parent) {\n      ancestorCmdNames = ancestorCmd.name() + ' ' + ancestorCmdNames;\n    }\n    return ancestorCmdNames + cmdName + ' ' + cmd.usage();\n  }\n\n  /**\n   * Get the description for the command.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandDescription(cmd) {\n    // @ts-ignore: overloaded return type\n    return cmd.description();\n  }\n\n  /**\n   * Get the subcommand summary to show in the list of subcommands.\n   * (Fallback to description for backwards compatibility.)\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandDescription(cmd) {\n    // @ts-ignore: overloaded return type\n    return cmd.summary() || cmd.description();\n  }\n\n  /**\n   * Get the option description to show in the list of options.\n   *\n   * @param {Option} option\n   * @return {string}\n   */\n\n  optionDescription(option) {\n    const extraInfo = [];\n\n    if (option.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`);\n    }\n    if (option.defaultValue !== undefined) {\n      // default for boolean and negated more for programmer than end user,\n      // but show true/false for boolean option as may be for hand-rolled env or config processing.\n      const showDefault = option.required || option.optional ||\n        (option.isBoolean() && typeof option.defaultValue === 'boolean');\n      if (showDefault) {\n        extraInfo.push(`default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`);\n      }\n    }\n    // preset for boolean and negated are more for programmer than end user\n    if (option.presetArg !== undefined && option.optional) {\n      extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);\n    }\n    if (option.envVar !== undefined) {\n      extraInfo.push(`env: ${option.envVar}`);\n    }\n    if (extraInfo.length > 0) {\n      return `${option.description} (${extraInfo.join(', ')})`;\n    }\n\n    return option.description;\n  }\n\n  /**\n   * Get the argument description to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @return {string}\n   */\n\n  argumentDescription(argument) {\n    const extraInfo = [];\n    if (argument.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`);\n    }\n    if (argument.defaultValue !== undefined) {\n      extraInfo.push(`default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`);\n    }\n    if (extraInfo.length > 0) {\n      const extraDescripton = `(${extraInfo.join(', ')})`;\n      if (argument.description) {\n        return `${argument.description} ${extraDescripton}`;\n      }\n      return extraDescripton;\n    }\n    return argument.description;\n  }\n\n  /**\n   * Generate the built-in help text.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {string}\n   */\n\n  formatHelp(cmd, helper) {\n    const termWidth = helper.padWidth(cmd, helper);\n    const helpWidth = helper.helpWidth || 80;\n    const itemIndentWidth = 2;\n    const itemSeparatorWidth = 2; // between term and description\n    function formatItem(term, description) {\n      if (description) {\n        const fullText = `${term.padEnd(termWidth + itemSeparatorWidth)}${description}`;\n        return helper.wrap(fullText, helpWidth - itemIndentWidth, termWidth + itemSeparatorWidth);\n      }\n      return term;\n    }\n    function formatList(textArray) {\n      return textArray.join('\\n').replace(/^/gm, ' '.repeat(itemIndentWidth));\n    }\n\n    // Usage\n    let output = [`Usage: ${helper.commandUsage(cmd)}`, ''];\n\n    // Description\n    const commandDescription = helper.commandDescription(cmd);\n    if (commandDescription.length > 0) {\n      output = output.concat([helper.wrap(commandDescription, helpWidth, 0), '']);\n    }\n\n    // Arguments\n    const argumentList = helper.visibleArguments(cmd).map((argument) => {\n      return formatItem(helper.argumentTerm(argument), helper.argumentDescription(argument));\n    });\n    if (argumentList.length > 0) {\n      output = output.concat(['Arguments:', formatList(argumentList), '']);\n    }\n\n    // Options\n    const optionList = helper.visibleOptions(cmd).map((option) => {\n      return formatItem(helper.optionTerm(option), helper.optionDescription(option));\n    });\n    if (optionList.length > 0) {\n      output = output.concat(['Options:', formatList(optionList), '']);\n    }\n\n    if (this.showGlobalOptions) {\n      const globalOptionList = helper.visibleGlobalOptions(cmd).map((option) => {\n        return formatItem(helper.optionTerm(option), helper.optionDescription(option));\n      });\n      if (globalOptionList.length > 0) {\n        output = output.concat(['Global Options:', formatList(globalOptionList), '']);\n      }\n    }\n\n    // Commands\n    const commandList = helper.visibleCommands(cmd).map((cmd) => {\n      return formatItem(helper.subcommandTerm(cmd), helper.subcommandDescription(cmd));\n    });\n    if (commandList.length > 0) {\n      output = output.concat(['Commands:', formatList(commandList), '']);\n    }\n\n    return output.join('\\n');\n  }\n\n  /**\n   * Calculate the pad width from the maximum term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  padWidth(cmd, helper) {\n    return Math.max(\n      helper.longestOptionTermLength(cmd, helper),\n      helper.longestGlobalOptionTermLength(cmd, helper),\n      helper.longestSubcommandTermLength(cmd, helper),\n      helper.longestArgumentTermLength(cmd, helper)\n    );\n  }\n\n  /**\n   * Wrap the given string to width characters per line, with lines after the first indented.\n   * Do not wrap if insufficient room for wrapping (minColumnWidth), or string is manually formatted.\n   *\n   * @param {string} str\n   * @param {number} width\n   * @param {number} indent\n   * @param {number} [minColumnWidth=40]\n   * @return {string}\n   *\n   */\n\n  wrap(str, width, indent, minColumnWidth = 40) {\n    // Full \\s characters, minus the linefeeds.\n    const indents = ' \\\\f\\\\t\\\\v\\u00a0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff';\n    // Detect manually wrapped and indented strings by searching for line break followed by spaces.\n    const manualIndent = new RegExp(`[\\\\n][${indents}]+`);\n    if (str.match(manualIndent)) return str;\n    // Do not wrap if not enough room for a wrapped column of text (as could end up with a word per line).\n    const columnWidth = width - indent;\n    if (columnWidth < minColumnWidth) return str;\n\n    const leadingStr = str.slice(0, indent);\n    const columnText = str.slice(indent).replace('\\r\\n', '\\n');\n    const indentString = ' '.repeat(indent);\n    const zeroWidthSpace = '\\u200B';\n    const breaks = `\\\\s${zeroWidthSpace}`;\n    // Match line end (so empty lines don't collapse),\n    // or as much text as will fit in column, or excess text up to first break.\n    const regex = new RegExp(`\\n|.{1,${columnWidth - 1}}([${breaks}]|$)|[^${breaks}]+?([${breaks}]|$)`, 'g');\n    const lines = columnText.match(regex) || [];\n    return leadingStr + lines.map((line, i) => {\n      if (line === '\\n') return ''; // preserve empty lines\n      return ((i > 0) ? indentString : '') + line.trimEnd();\n    }).join('\\n');\n  }\n}\n\nexports.Help = Help;\n",
    "const { InvalidArgumentError } = require('./error.js');\n\nclass Option {\n  /**\n   * Initialize a new `Option` with the given `flags` and `description`.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   */\n\n  constructor(flags, description) {\n    this.flags = flags;\n    this.description = description || '';\n\n    this.required = flags.includes('<'); // A value must be supplied when the option is specified.\n    this.optional = flags.includes('['); // A value is optional when the option is specified.\n    // variadic test ignores <value,...> et al which might be used to describe custom splitting of single argument\n    this.variadic = /\\w\\.\\.\\.[>\\]]$/.test(flags); // The option can take multiple values.\n    this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n    const optionFlags = splitOptionFlags(flags);\n    this.short = optionFlags.shortFlag;\n    this.long = optionFlags.longFlag;\n    this.negate = false;\n    if (this.long) {\n      this.negate = this.long.startsWith('--no-');\n    }\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.presetArg = undefined;\n    this.envVar = undefined;\n    this.parseArg = undefined;\n    this.hidden = false;\n    this.argChoices = undefined;\n    this.conflictsWith = [];\n    this.implied = undefined;\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Option}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Preset to use when option used without option-argument, especially optional but also boolean and negated.\n   * The custom processing (parseArg) is called.\n   *\n   * @example\n   * new Option('--color').default('GREYSCALE').preset('RGB');\n   * new Option('--donate [amount]').preset('20').argParser(parseFloat);\n   *\n   * @param {*} arg\n   * @return {Option}\n   */\n\n  preset(arg) {\n    this.presetArg = arg;\n    return this;\n  }\n\n  /**\n   * Add option name(s) that conflict with this option.\n   * An error will be displayed if conflicting options are found during parsing.\n   *\n   * @example\n   * new Option('--rgb').conflicts('cmyk');\n   * new Option('--js').conflicts(['ts', 'jsx']);\n   *\n   * @param {string | string[]} names\n   * @return {Option}\n   */\n\n  conflicts(names) {\n    this.conflictsWith = this.conflictsWith.concat(names);\n    return this;\n  }\n\n  /**\n   * Specify implied option values for when this option is set and the implied options are not.\n   *\n   * The custom processing (parseArg) is not called on the implied values.\n   *\n   * @example\n   * program\n   *   .addOption(new Option('--log', 'write logging information to file'))\n   *   .addOption(new Option('--trace', 'log extra details').implies({ log: 'trace.txt' }));\n   *\n   * @param {Object} impliedOptionValues\n   * @return {Option}\n   */\n  implies(impliedOptionValues) {\n    let newImplied = impliedOptionValues;\n    if (typeof impliedOptionValues === 'string') {\n      // string is not documented, but easy mistake and we can do what user probably intended.\n      newImplied = { [impliedOptionValues]: true };\n    }\n    this.implied = Object.assign(this.implied || {}, newImplied);\n    return this;\n  }\n\n  /**\n   * Set environment variable to check for option value.\n   *\n   * An environment variable is only used if when processed the current option value is\n   * undefined, or the source of the current value is 'default' or 'config' or 'env'.\n   *\n   * @param {string} name\n   * @return {Option}\n   */\n\n  env(name) {\n    this.envVar = name;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI option arguments into option values.\n   *\n   * @param {Function} [fn]\n   * @return {Option}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Whether the option is mandatory and must have a value after parsing.\n   *\n   * @param {boolean} [mandatory=true]\n   * @return {Option}\n   */\n\n  makeOptionMandatory(mandatory = true) {\n    this.mandatory = !!mandatory;\n    return this;\n  }\n\n  /**\n   * Hide option in help.\n   *\n   * @param {boolean} [hide=true]\n   * @return {Option}\n   */\n\n  hideHelp(hide = true) {\n    this.hidden = !!hide;\n    return this;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Only allow option value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Option}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Return option name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    if (this.long) {\n      return this.long.replace(/^--/, '');\n    }\n    return this.short.replace(/^-/, '');\n  }\n\n  /**\n   * Return option name, in a camelcase format that can be used\n   * as a object attribute key.\n   *\n   * @return {string}\n   * @api private\n   */\n\n  attributeName() {\n    return camelcase(this.name().replace(/^no-/, ''));\n  }\n\n  /**\n   * Check if `arg` matches the short or long flag.\n   *\n   * @param {string} arg\n   * @return {boolean}\n   * @api private\n   */\n\n  is(arg) {\n    return this.short === arg || this.long === arg;\n  }\n\n  /**\n   * Return whether a boolean option.\n   *\n   * Options are one of boolean, negated, required argument, or optional argument.\n   *\n   * @return {boolean}\n   * @api private\n   */\n\n  isBoolean() {\n    return !this.required && !this.optional && !this.negate;\n  }\n}\n\n/**\n * This class is to make it easier to work with dual options, without changing the existing\n * implementation. We support separate dual options for separate positive and negative options,\n * like `--build` and `--no-build`, which share a single option value. This works nicely for some\n * use cases, but is tricky for others where we want separate behaviours despite\n * the single shared option value.\n */\nclass DualOptions {\n  /**\n   * @param {Option[]} options\n   */\n  constructor(options) {\n    this.positiveOptions = new Map();\n    this.negativeOptions = new Map();\n    this.dualOptions = new Set();\n    options.forEach(option => {\n      if (option.negate) {\n        this.negativeOptions.set(option.attributeName(), option);\n      } else {\n        this.positiveOptions.set(option.attributeName(), option);\n      }\n    });\n    this.negativeOptions.forEach((value, key) => {\n      if (this.positiveOptions.has(key)) {\n        this.dualOptions.add(key);\n      }\n    });\n  }\n\n  /**\n   * Did the value come from the option, and not from possible matching dual option?\n   *\n   * @param {*} value\n   * @param {Option} option\n   * @returns {boolean}\n   */\n  valueFromOption(value, option) {\n    const optionKey = option.attributeName();\n    if (!this.dualOptions.has(optionKey)) return true;\n\n    // Use the value to deduce if (probably) came from the option.\n    const preset = this.negativeOptions.get(optionKey).presetArg;\n    const negativeValue = (preset !== undefined) ? preset : false;\n    return option.negate === (negativeValue === value);\n  }\n}\n\n/**\n * Convert string from kebab-case to camelCase.\n *\n * @param {string} str\n * @return {string}\n * @api private\n */\n\nfunction camelcase(str) {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Split the short and long flag out of something like '-m,--mixed <value>'\n *\n * @api private\n */\n\nfunction splitOptionFlags(flags) {\n  let shortFlag;\n  let longFlag;\n  // Use original very loose parsing to maintain backwards compatibility for now,\n  // which allowed for example unintended `-sw, --short-word` [sic].\n  const flagParts = flags.split(/[ |,]+/);\n  if (flagParts.length > 1 && !/^[[<]/.test(flagParts[1])) shortFlag = flagParts.shift();\n  longFlag = flagParts.shift();\n  // Add support for lone short flag without significantly changing parsing!\n  if (!shortFlag && /^-[^-]$/.test(longFlag)) {\n    shortFlag = longFlag;\n    longFlag = undefined;\n  }\n  return { shortFlag, longFlag };\n}\n\nexports.Option = Option;\nexports.splitOptionFlags = splitOptionFlags;\nexports.DualOptions = DualOptions;\n",
    "const maxDistance = 3;\n\nfunction editDistance(a, b) {\n  // https://en.wikipedia.org/wiki/Damerau–Levenshtein_distance\n  // Calculating optimal string alignment distance, no substring is edited more than once.\n  // (Simple implementation.)\n\n  // Quick early exit, return worst case.\n  if (Math.abs(a.length - b.length) > maxDistance) return Math.max(a.length, b.length);\n\n  // distance between prefix substrings of a and b\n  const d = [];\n\n  // pure deletions turn a into empty string\n  for (let i = 0; i <= a.length; i++) {\n    d[i] = [i];\n  }\n  // pure insertions turn empty string into b\n  for (let j = 0; j <= b.length; j++) {\n    d[0][j] = j;\n  }\n\n  // fill matrix\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      let cost = 1;\n      if (a[i - 1] === b[j - 1]) {\n        cost = 0;\n      } else {\n        cost = 1;\n      }\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost // substitution\n      );\n      // transposition\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n      }\n    }\n  }\n\n  return d[a.length][b.length];\n}\n\n/**\n * Find close matches, restricted to same number of edits.\n *\n * @param {string} word\n * @param {string[]} candidates\n * @returns {string}\n */\n\nfunction suggestSimilar(word, candidates) {\n  if (!candidates || candidates.length === 0) return '';\n  // remove possible duplicates\n  candidates = Array.from(new Set(candidates));\n\n  const searchingOptions = word.startsWith('--');\n  if (searchingOptions) {\n    word = word.slice(2);\n    candidates = candidates.map(candidate => candidate.slice(2));\n  }\n\n  let similar = [];\n  let bestDistance = maxDistance;\n  const minSimilarity = 0.4;\n  candidates.forEach((candidate) => {\n    if (candidate.length <= 1) return; // no one character guesses\n\n    const distance = editDistance(word, candidate);\n    const length = Math.max(word.length, candidate.length);\n    const similarity = (length - distance) / length;\n    if (similarity > minSimilarity) {\n      if (distance < bestDistance) {\n        // better edit distance, throw away previous worse matches\n        bestDistance = distance;\n        similar = [candidate];\n      } else if (distance === bestDistance) {\n        similar.push(candidate);\n      }\n    }\n  });\n\n  similar.sort((a, b) => a.localeCompare(b));\n  if (searchingOptions) {\n    similar = similar.map(candidate => `--${candidate}`);\n  }\n\n  if (similar.length > 1) {\n    return `\\n(Did you mean one of ${similar.join(', ')}?)`;\n  }\n  if (similar.length === 1) {\n    return `\\n(Did you mean ${similar[0]}?)`;\n  }\n  return '';\n}\n\nexports.suggestSimilar = suggestSimilar;\n",
    "const EventEmitter = require('events').EventEmitter;\nconst childProcess = require('child_process');\nconst path = require('path');\nconst fs = require('fs');\nconst process = require('process');\n\nconst { Argument, humanReadableArgName } = require('./argument.js');\nconst { CommanderError } = require('./error.js');\nconst { Help } = require('./help.js');\nconst { Option, splitOptionFlags, DualOptions } = require('./option.js');\nconst { suggestSimilar } = require('./suggestSimilar');\n\nclass Command extends EventEmitter {\n  /**\n   * Initialize a new `Command`.\n   *\n   * @param {string} [name]\n   */\n\n  constructor(name) {\n    super();\n    /** @type {Command[]} */\n    this.commands = [];\n    /** @type {Option[]} */\n    this.options = [];\n    this.parent = null;\n    this._allowUnknownOption = false;\n    this._allowExcessArguments = true;\n    /** @type {Argument[]} */\n    this.registeredArguments = [];\n    this._args = this.registeredArguments; // deprecated old name\n    /** @type {string[]} */\n    this.args = []; // cli args with options removed\n    this.rawArgs = [];\n    this.processedArgs = []; // like .args but after custom processing and collecting variadic\n    this._scriptPath = null;\n    this._name = name || '';\n    this._optionValues = {};\n    this._optionValueSources = {}; // default, env, cli etc\n    this._storeOptionsAsProperties = false;\n    this._actionHandler = null;\n    this._executableHandler = false;\n    this._executableFile = null; // custom name for executable\n    this._executableDir = null; // custom search directory for subcommands\n    this._defaultCommandName = null;\n    this._exitCallback = null;\n    this._aliases = [];\n    this._combineFlagAndOptionalValue = true;\n    this._description = '';\n    this._summary = '';\n    this._argsDescription = undefined; // legacy\n    this._enablePositionalOptions = false;\n    this._passThroughOptions = false;\n    this._lifeCycleHooks = {}; // a hash of arrays\n    /** @type {boolean | string} */\n    this._showHelpAfterError = false;\n    this._showSuggestionAfterError = true;\n\n    // see .configureOutput() for docs\n    this._outputConfiguration = {\n      writeOut: (str) => process.stdout.write(str),\n      writeErr: (str) => process.stderr.write(str),\n      getOutHelpWidth: () => process.stdout.isTTY ? process.stdout.columns : undefined,\n      getErrHelpWidth: () => process.stderr.isTTY ? process.stderr.columns : undefined,\n      outputError: (str, write) => write(str)\n    };\n\n    this._hidden = false;\n    this._hasHelpOption = true;\n    this._helpFlags = '-h, --help';\n    this._helpDescription = 'display help for command';\n    this._helpShortFlag = '-h';\n    this._helpLongFlag = '--help';\n    this._addImplicitHelpCommand = undefined; // Deliberately undefined, not decided whether true or false\n    this._helpCommandName = 'help';\n    this._helpCommandnameAndArgs = 'help [command]';\n    this._helpCommandDescription = 'display help for command';\n    this._helpConfiguration = {};\n  }\n\n  /**\n   * Copy settings that are useful to have in common across root command and subcommands.\n   *\n   * (Used internally when adding a command using `.command()` so subcommands inherit parent settings.)\n   *\n   * @param {Command} sourceCommand\n   * @return {Command} `this` command for chaining\n   */\n  copyInheritedSettings(sourceCommand) {\n    this._outputConfiguration = sourceCommand._outputConfiguration;\n    this._hasHelpOption = sourceCommand._hasHelpOption;\n    this._helpFlags = sourceCommand._helpFlags;\n    this._helpDescription = sourceCommand._helpDescription;\n    this._helpShortFlag = sourceCommand._helpShortFlag;\n    this._helpLongFlag = sourceCommand._helpLongFlag;\n    this._helpCommandName = sourceCommand._helpCommandName;\n    this._helpCommandnameAndArgs = sourceCommand._helpCommandnameAndArgs;\n    this._helpCommandDescription = sourceCommand._helpCommandDescription;\n    this._helpConfiguration = sourceCommand._helpConfiguration;\n    this._exitCallback = sourceCommand._exitCallback;\n    this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;\n    this._combineFlagAndOptionalValue = sourceCommand._combineFlagAndOptionalValue;\n    this._allowExcessArguments = sourceCommand._allowExcessArguments;\n    this._enablePositionalOptions = sourceCommand._enablePositionalOptions;\n    this._showHelpAfterError = sourceCommand._showHelpAfterError;\n    this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;\n\n    return this;\n  }\n\n  /**\n   * @returns {Command[]}\n   * @api private\n   */\n\n  _getCommandAndAncestors() {\n    const result = [];\n    for (let command = this; command; command = command.parent) {\n      result.push(command);\n    }\n    return result;\n  }\n\n  /**\n   * Define a command.\n   *\n   * There are two styles of command: pay attention to where to put the description.\n   *\n   * @example\n   * // Command implemented using action handler (description is supplied separately to `.command`)\n   * program\n   *   .command('clone <source> [destination]')\n   *   .description('clone a repository into a newly created directory')\n   *   .action((source, destination) => {\n   *     console.log('clone command called');\n   *   });\n   *\n   * // Command implemented using separate executable file (description is second parameter to `.command`)\n   * program\n   *   .command('start <service>', 'start named service')\n   *   .command('stop [service]', 'stop named service, or all if no name supplied');\n   *\n   * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n   * @param {Object|string} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n   * @param {Object} [execOpts] - configuration options (for executable)\n   * @return {Command} returns new command for action handler, or `this` for executable command\n   */\n\n  command(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n    let desc = actionOptsOrExecDesc;\n    let opts = execOpts;\n    if (typeof desc === 'object' && desc !== null) {\n      opts = desc;\n      desc = null;\n    }\n    opts = opts || {};\n    const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);\n\n    const cmd = this.createCommand(name);\n    if (desc) {\n      cmd.description(desc);\n      cmd._executableHandler = true;\n    }\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    cmd._hidden = !!(opts.noHelp || opts.hidden); // noHelp is deprecated old name for hidden\n    cmd._executableFile = opts.executableFile || null; // Custom name for executable file, set missing to null to match constructor\n    if (args) cmd.arguments(args);\n    this.commands.push(cmd);\n    cmd.parent = this;\n    cmd.copyInheritedSettings(this);\n\n    if (desc) return this;\n    return cmd;\n  }\n\n  /**\n   * Factory routine to create a new unattached command.\n   *\n   * See .command() for creating an attached subcommand, which uses this routine to\n   * create the command. You can override createCommand to customise subcommands.\n   *\n   * @param {string} [name]\n   * @return {Command} new command\n   */\n\n  createCommand(name) {\n    return new Command(name);\n  }\n\n  /**\n   * You can customise the help with a subclass of Help by overriding createHelp,\n   * or by overriding Help properties using configureHelp().\n   *\n   * @return {Help}\n   */\n\n  createHelp() {\n    return Object.assign(new Help(), this.configureHelp());\n  }\n\n  /**\n   * You can customise the help by overriding Help properties using configureHelp(),\n   * or with a subclass of Help by overriding createHelp().\n   *\n   * @param {Object} [configuration] - configuration options\n   * @return {Command|Object} `this` command for chaining, or stored configuration\n   */\n\n  configureHelp(configuration) {\n    if (configuration === undefined) return this._helpConfiguration;\n\n    this._helpConfiguration = configuration;\n    return this;\n  }\n\n  /**\n   * The default output goes to stdout and stderr. You can customise this for special\n   * applications. You can also customise the display of errors by overriding outputError.\n   *\n   * The configuration properties are all functions:\n   *\n   *     // functions to change where being written, stdout and stderr\n   *     writeOut(str)\n   *     writeErr(str)\n   *     // matching functions to specify width for wrapping help\n   *     getOutHelpWidth()\n   *     getErrHelpWidth()\n   *     // functions based on what is being written out\n   *     outputError(str, write) // used for displaying errors, and not used for displaying help\n   *\n   * @param {Object} [configuration] - configuration options\n   * @return {Command|Object} `this` command for chaining, or stored configuration\n   */\n\n  configureOutput(configuration) {\n    if (configuration === undefined) return this._outputConfiguration;\n\n    Object.assign(this._outputConfiguration, configuration);\n    return this;\n  }\n\n  /**\n   * Display the help or a custom message after an error occurs.\n   *\n   * @param {boolean|string} [displayHelp]\n   * @return {Command} `this` command for chaining\n   */\n  showHelpAfterError(displayHelp = true) {\n    if (typeof displayHelp !== 'string') displayHelp = !!displayHelp;\n    this._showHelpAfterError = displayHelp;\n    return this;\n  }\n\n  /**\n   * Display suggestion of similar commands for unknown commands, or options for unknown options.\n   *\n   * @param {boolean} [displaySuggestion]\n   * @return {Command} `this` command for chaining\n   */\n  showSuggestionAfterError(displaySuggestion = true) {\n    this._showSuggestionAfterError = !!displaySuggestion;\n    return this;\n  }\n\n  /**\n   * Add a prepared subcommand.\n   *\n   * See .command() for creating an attached subcommand which inherits settings from its parent.\n   *\n   * @param {Command} cmd - new subcommand\n   * @param {Object} [opts] - configuration options\n   * @return {Command} `this` command for chaining\n   */\n\n  addCommand(cmd, opts) {\n    if (!cmd._name) {\n      throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);\n    }\n\n    opts = opts || {};\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    if (opts.noHelp || opts.hidden) cmd._hidden = true; // modifying passed command due to existing implementation\n\n    this.commands.push(cmd);\n    cmd.parent = this;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached argument.\n   *\n   * See .argument() for creating an attached argument, which uses this routine to\n   * create the argument. You can override createArgument to return a custom argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @return {Argument} new argument\n   */\n\n  createArgument(name, description) {\n    return new Argument(name, description);\n  }\n\n  /**\n   * Define argument syntax for command.\n   *\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @example\n   * program.argument('<input-file>');\n   * program.argument('[output-file]');\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @param {Function|*} [fn] - custom argument processing function\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n  argument(name, description, fn, defaultValue) {\n    const argument = this.createArgument(name, description);\n    if (typeof fn === 'function') {\n      argument.default(defaultValue).argParser(fn);\n    } else {\n      argument.default(fn);\n    }\n    this.addArgument(argument);\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding multiple at once (without descriptions).\n   *\n   * See also .argument().\n   *\n   * @example\n   * program.arguments('<cmd> [env]');\n   *\n   * @param {string} names\n   * @return {Command} `this` command for chaining\n   */\n\n  arguments(names) {\n    names.trim().split(/ +/).forEach((detail) => {\n      this.argument(detail);\n    });\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding a prepared argument.\n   *\n   * @param {Argument} argument\n   * @return {Command} `this` command for chaining\n   */\n  addArgument(argument) {\n    const previousArgument = this.registeredArguments.slice(-1)[0];\n    if (previousArgument && previousArgument.variadic) {\n      throw new Error(`only the last argument can be variadic '${previousArgument.name()}'`);\n    }\n    if (argument.required && argument.defaultValue !== undefined && argument.parseArg === undefined) {\n      throw new Error(`a default value for a required argument is never used: '${argument.name()}'`);\n    }\n    this.registeredArguments.push(argument);\n    return this;\n  }\n\n  /**\n   * Override default decision whether to add implicit help command.\n   *\n   *    addHelpCommand() // force on\n   *    addHelpCommand(false); // force off\n   *    addHelpCommand('help [cmd]', 'display help for [cmd]'); // force on with custom details\n   *\n   * @return {Command} `this` command for chaining\n   */\n\n  addHelpCommand(enableOrNameAndArgs, description) {\n    if (enableOrNameAndArgs === false) {\n      this._addImplicitHelpCommand = false;\n    } else {\n      this._addImplicitHelpCommand = true;\n      if (typeof enableOrNameAndArgs === 'string') {\n        this._helpCommandName = enableOrNameAndArgs.split(' ')[0];\n        this._helpCommandnameAndArgs = enableOrNameAndArgs;\n      }\n      this._helpCommandDescription = description || this._helpCommandDescription;\n    }\n    return this;\n  }\n\n  /**\n   * @return {boolean}\n   * @api private\n   */\n\n  _hasImplicitHelpCommand() {\n    if (this._addImplicitHelpCommand === undefined) {\n      return this.commands.length && !this._actionHandler && !this._findCommand('help');\n    }\n    return this._addImplicitHelpCommand;\n  }\n\n  /**\n   * Add hook for life cycle event.\n   *\n   * @param {string} event\n   * @param {Function} listener\n   * @return {Command} `this` command for chaining\n   */\n\n  hook(event, listener) {\n    const allowedValues = ['preSubcommand', 'preAction', 'postAction'];\n    if (!allowedValues.includes(event)) {\n      throw new Error(`Unexpected value for event passed to hook : '${event}'.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    if (this._lifeCycleHooks[event]) {\n      this._lifeCycleHooks[event].push(listener);\n    } else {\n      this._lifeCycleHooks[event] = [listener];\n    }\n    return this;\n  }\n\n  /**\n   * Register callback to use as replacement for calling process.exit.\n   *\n   * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n   * @return {Command} `this` command for chaining\n   */\n\n  exitOverride(fn) {\n    if (fn) {\n      this._exitCallback = fn;\n    } else {\n      this._exitCallback = (err) => {\n        if (err.code !== 'commander.executeSubCommandAsync') {\n          throw err;\n        } else {\n          // Async callback from spawn events, not useful to throw.\n        }\n      };\n    }\n    return this;\n  }\n\n  /**\n   * Call process.exit, and _exitCallback if defined.\n   *\n   * @param {number} exitCode exit code for using with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @return never\n   * @api private\n   */\n\n  _exit(exitCode, code, message) {\n    if (this._exitCallback) {\n      this._exitCallback(new CommanderError(exitCode, code, message));\n      // Expecting this line is not reached.\n    }\n    process.exit(exitCode);\n  }\n\n  /**\n   * Register callback `fn` for the command.\n   *\n   * @example\n   * program\n   *   .command('serve')\n   *   .description('start service')\n   *   .action(function() {\n   *      // do work here\n   *   });\n   *\n   * @param {Function} fn\n   * @return {Command} `this` command for chaining\n   */\n\n  action(fn) {\n    const listener = (args) => {\n      // The .action callback takes an extra parameter which is the command or options.\n      const expectedArgsCount = this.registeredArguments.length;\n      const actionArgs = args.slice(0, expectedArgsCount);\n      if (this._storeOptionsAsProperties) {\n        actionArgs[expectedArgsCount] = this; // backwards compatible \"options\"\n      } else {\n        actionArgs[expectedArgsCount] = this.opts();\n      }\n      actionArgs.push(this);\n\n      return fn.apply(this, actionArgs);\n    };\n    this._actionHandler = listener;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached option.\n   *\n   * See .option() for creating an attached option, which uses this routine to\n   * create the option. You can override createOption to return a custom option.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @return {Option} new option\n   */\n\n  createOption(flags, description) {\n    return new Option(flags, description);\n  }\n\n  /**\n   * Wrap parseArgs to catch 'commander.invalidArgument'.\n   *\n   * @param {Option | Argument} target\n   * @param {string} value\n   * @param {*} previous\n   * @param {string} invalidArgumentMessage\n   * @api private\n   */\n\n  _callParseArg(target, value, previous, invalidArgumentMessage) {\n    try {\n      return target.parseArg(value, previous);\n    } catch (err) {\n      if (err.code === 'commander.invalidArgument') {\n        const message = `${invalidArgumentMessage} ${err.message}`;\n        this.error(message, { exitCode: err.exitCode, code: err.code });\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Add an option.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addOption(option) {\n    const oname = option.name();\n    const name = option.attributeName();\n\n    // store default value\n    if (option.negate) {\n      // --no-foo is special and defaults foo to true, unless a --foo option is already defined\n      const positiveLongFlag = option.long.replace(/^--no-/, '--');\n      if (!this._findOption(positiveLongFlag)) {\n        this.setOptionValueWithSource(name, option.defaultValue === undefined ? true : option.defaultValue, 'default');\n      }\n    } else if (option.defaultValue !== undefined) {\n      this.setOptionValueWithSource(name, option.defaultValue, 'default');\n    }\n\n    // register the option\n    this.options.push(option);\n\n    // handler for cli and env supplied values\n    const handleOptionValue = (val, invalidValueMessage, valueSource) => {\n      // val is null for optional option used without an optional-argument.\n      // val is undefined for boolean and negated option.\n      if (val == null && option.presetArg !== undefined) {\n        val = option.presetArg;\n      }\n\n      // custom processing\n      const oldValue = this.getOptionValue(name);\n      if (val !== null && option.parseArg) {\n        val = this._callParseArg(option, val, oldValue, invalidValueMessage);\n      } else if (val !== null && option.variadic) {\n        val = option._concatValue(val, oldValue);\n      }\n\n      // Fill-in appropriate missing values. Long winded but easy to follow.\n      if (val == null) {\n        if (option.negate) {\n          val = false;\n        } else if (option.isBoolean() || option.optional) {\n          val = true;\n        } else {\n          val = ''; // not normal, parseArg might have failed or be a mock function for testing\n        }\n      }\n      this.setOptionValueWithSource(name, val, valueSource);\n    };\n\n    this.on('option:' + oname, (val) => {\n      const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;\n      handleOptionValue(val, invalidValueMessage, 'cli');\n    });\n\n    if (option.envVar) {\n      this.on('optionEnv:' + oname, (val) => {\n        const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;\n        handleOptionValue(val, invalidValueMessage, 'env');\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Internal implementation shared by .option() and .requiredOption()\n   *\n   * @api private\n   */\n  _optionEx(config, flags, description, fn, defaultValue) {\n    if (typeof flags === 'object' && flags instanceof Option) {\n      throw new Error('To add an Option object use addOption() instead of option() or requiredOption()');\n    }\n    const option = this.createOption(flags, description);\n    option.makeOptionMandatory(!!config.mandatory);\n    if (typeof fn === 'function') {\n      option.default(defaultValue).argParser(fn);\n    } else if (fn instanceof RegExp) {\n      // deprecated\n      const regex = fn;\n      fn = (val, def) => {\n        const m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n      option.default(defaultValue).argParser(fn);\n    } else {\n      option.default(fn);\n    }\n\n    return this.addOption(option);\n  }\n\n  /**\n   * Define option with `flags`, `description`, and optional argument parsing function or `defaultValue` or both.\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space. A required\n   * option-argument is indicated by `<>` and an optional option-argument by `[]`.\n   *\n   * See the README for more details, and see also addOption() and requiredOption().\n   *\n   * @example\n   * program\n   *     .option('-p, --pepper', 'add pepper')\n   *     .option('-p, --pizza-type <TYPE>', 'type of pizza') // required option-argument\n   *     .option('-c, --cheese [CHEESE]', 'add extra cheese', 'mozzarella') // optional option-argument with default\n   *     .option('-t, --tip <VALUE>', 'add tip to purchase cost', parseFloat) // custom parse function\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {Function|*} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  option(flags, description, parseArg, defaultValue) {\n    return this._optionEx({}, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n  * Add a required option which must have a value after parsing. This usually means\n  * the option must be specified on the command line. (Otherwise the same as .option().)\n  *\n  * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space.\n  *\n  * @param {string} flags\n  * @param {string} [description]\n  * @param {Function|*} [parseArg] - custom option processing function or default value\n  * @param {*} [defaultValue]\n  * @return {Command} `this` command for chaining\n  */\n\n  requiredOption(flags, description, parseArg, defaultValue) {\n    return this._optionEx({ mandatory: true }, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n   * Alter parsing of short flags with optional values.\n   *\n   * @example\n   * // for `.option('-f,--flag [value]'):\n   * program.combineFlagAndOptionalValue(true);  // `-f80` is treated like `--flag=80`, this is the default behaviour\n   * program.combineFlagAndOptionalValue(false) // `-fb` is treated like `-f -b`\n   *\n   * @param {Boolean} [combine=true] - if `true` or omitted, an optional value can be specified directly after the flag.\n   */\n  combineFlagAndOptionalValue(combine = true) {\n    this._combineFlagAndOptionalValue = !!combine;\n    return this;\n  }\n\n  /**\n   * Allow unknown options on the command line.\n   *\n   * @param {Boolean} [allowUnknown=true] - if `true` or omitted, no error will be thrown\n   * for unknown options.\n   */\n  allowUnknownOption(allowUnknown = true) {\n    this._allowUnknownOption = !!allowUnknown;\n    return this;\n  }\n\n  /**\n   * Allow excess command-arguments on the command line. Pass false to make excess arguments an error.\n   *\n   * @param {Boolean} [allowExcess=true] - if `true` or omitted, no error will be thrown\n   * for excess arguments.\n   */\n  allowExcessArguments(allowExcess = true) {\n    this._allowExcessArguments = !!allowExcess;\n    return this;\n  }\n\n  /**\n   * Enable positional options. Positional means global options are specified before subcommands which lets\n   * subcommands reuse the same option names, and also enables subcommands to turn on passThroughOptions.\n   * The default behaviour is non-positional and global options may appear anywhere on the command line.\n   *\n   * @param {Boolean} [positional=true]\n   */\n  enablePositionalOptions(positional = true) {\n    this._enablePositionalOptions = !!positional;\n    return this;\n  }\n\n  /**\n   * Pass through options that come after command-arguments rather than treat them as command-options,\n   * so actual command-options come before command-arguments. Turning this on for a subcommand requires\n   * positional options to have been enabled on the program (parent commands).\n   * The default behaviour is non-positional and options may appear before or after command-arguments.\n   *\n   * @param {Boolean} [passThrough=true]\n   * for unknown options.\n   */\n  passThroughOptions(passThrough = true) {\n    this._passThroughOptions = !!passThrough;\n    if (!!this.parent && passThrough && !this.parent._enablePositionalOptions) {\n      throw new Error('passThroughOptions can not be used without turning on enablePositionalOptions for parent command(s)');\n    }\n    return this;\n  }\n\n  /**\n    * Whether to store option values as properties on command object,\n    * or store separately (specify false). In both cases the option values can be accessed using .opts().\n    *\n    * @param {boolean} [storeAsProperties=true]\n    * @return {Command} `this` command for chaining\n    */\n\n  storeOptionsAsProperties(storeAsProperties = true) {\n    if (this.options.length) {\n      throw new Error('call .storeOptionsAsProperties() before adding options');\n    }\n    // if (Object.keys(this._optionValues).length) {\n    //   throw new Error('call .storeOptionsAsProperties() before setting option values');\n    // }\n    this._storeOptionsAsProperties = !!storeAsProperties;\n    return this;\n  }\n\n  /**\n   * Retrieve option value.\n   *\n   * @param {string} key\n   * @return {Object} value\n   */\n\n  getOptionValue(key) {\n    if (this._storeOptionsAsProperties) {\n      return this[key];\n    }\n    return this._optionValues[key];\n  }\n\n  /**\n   * Store option value.\n   *\n   * @param {string} key\n   * @param {Object} value\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValue(key, value) {\n    return this.setOptionValueWithSource(key, value, undefined);\n  }\n\n  /**\n    * Store option value and where the value came from.\n    *\n    * @param {string} key\n    * @param {Object} value\n    * @param {string} source - expected values are default/config/env/cli/implied\n    * @return {Command} `this` command for chaining\n    */\n\n  setOptionValueWithSource(key, value, source) {\n    if (this._storeOptionsAsProperties) {\n      this[key] = value;\n    } else {\n      this._optionValues[key] = value;\n    }\n    this._optionValueSources[key] = source;\n    return this;\n  }\n\n  /**\n    * Get source of option value.\n    * Expected values are default | config | env | cli | implied\n    *\n    * @param {string} key\n    * @return {string}\n    */\n\n  getOptionValueSource(key) {\n    return this._optionValueSources[key];\n  }\n\n  /**\n    * Get source of option value. See also .optsWithGlobals().\n    * Expected values are default | config | env | cli | implied\n    *\n    * @param {string} key\n    * @return {string}\n    */\n\n  getOptionValueSourceWithGlobals(key) {\n    // global overwrites local, like optsWithGlobals\n    let source;\n    this._getCommandAndAncestors().forEach((cmd) => {\n      if (cmd.getOptionValueSource(key) !== undefined) {\n        source = cmd.getOptionValueSource(key);\n      }\n    });\n    return source;\n  }\n\n  /**\n   * Get user arguments from implied or explicit arguments.\n   * Side-effects: set _scriptPath if args included script. Used for default program name, and subcommand searches.\n   *\n   * @api private\n   */\n\n  _prepareUserArgs(argv, parseOptions) {\n    if (argv !== undefined && !Array.isArray(argv)) {\n      throw new Error('first parameter to parse must be array or undefined');\n    }\n    parseOptions = parseOptions || {};\n\n    // Default to using process.argv\n    if (argv === undefined) {\n      argv = process.argv;\n      // @ts-ignore: unknown property\n      if (process.versions && process.versions.electron) {\n        parseOptions.from = 'electron';\n      }\n    }\n    this.rawArgs = argv.slice();\n\n    // make it a little easier for callers by supporting various argv conventions\n    let userArgs;\n    switch (parseOptions.from) {\n      case undefined:\n      case 'node':\n        this._scriptPath = argv[1];\n        userArgs = argv.slice(2);\n        break;\n      case 'electron':\n        // @ts-ignore: unknown property\n        if (process.defaultApp) {\n          this._scriptPath = argv[1];\n          userArgs = argv.slice(2);\n        } else {\n          userArgs = argv.slice(1);\n        }\n        break;\n      case 'user':\n        userArgs = argv.slice(0);\n        break;\n      default:\n        throw new Error(`unexpected parse option { from: '${parseOptions.from}' }`);\n    }\n\n    // Find default name for program from arguments.\n    if (!this._name && this._scriptPath) this.nameFromFilename(this._scriptPath);\n    this._name = this._name || 'program';\n\n    return userArgs;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * The default expectation is that the arguments are from node and have the application as argv[0]\n   * and the script being run in argv[1], with user parameters after that.\n   *\n   * @example\n   * program.parse(process.argv);\n   * program.parse(); // implicitly use process.argv and auto-detect node vs electron conventions\n   * program.parse(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv] - optional, defaults to process.argv\n   * @param {Object} [parseOptions] - optionally specify style of options with from: node/user/electron\n   * @param {string} [parseOptions.from] - where the args are from: 'node', 'user', 'electron'\n   * @return {Command} `this` command for chaining\n   */\n\n  parse(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Use parseAsync instead of parse if any of your action handlers are async. Returns a Promise.\n   *\n   * The default expectation is that the arguments are from node and have the application as argv[0]\n   * and the script being run in argv[1], with user parameters after that.\n   *\n   * @example\n   * await program.parseAsync(process.argv);\n   * await program.parseAsync(); // implicitly use process.argv and auto-detect node vs electron conventions\n   * await program.parseAsync(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv]\n   * @param {Object} [parseOptions]\n   * @param {string} parseOptions.from - where the args are from: 'node', 'user', 'electron'\n   * @return {Promise}\n   */\n\n  async parseAsync(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    await this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Execute a sub-command executable.\n   *\n   * @api private\n   */\n\n  _executeSubCommand(subcommand, args) {\n    args = args.slice();\n    let launchWithNode = false; // Use node for source targets so do not need to get permissions correct, and on Windows.\n    const sourceExt = ['.js', '.ts', '.tsx', '.mjs', '.cjs'];\n\n    function findFile(baseDir, baseName) {\n      // Look for specified file\n      const localBin = path.resolve(baseDir, baseName);\n      if (fs.existsSync(localBin)) return localBin;\n\n      // Stop looking if candidate already has an expected extension.\n      if (sourceExt.includes(path.extname(baseName))) return undefined;\n\n      // Try all the extensions.\n      const foundExt = sourceExt.find(ext => fs.existsSync(`${localBin}${ext}`));\n      if (foundExt) return `${localBin}${foundExt}`;\n\n      return undefined;\n    }\n\n    // Not checking for help first. Unlikely to have mandatory and executable, and can't robustly test for help flags in external command.\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // executableFile and executableDir might be full path, or just a name\n    let executableFile = subcommand._executableFile || `${this._name}-${subcommand._name}`;\n    let executableDir = this._executableDir || '';\n    if (this._scriptPath) {\n      let resolvedScriptPath; // resolve possible symlink for installed npm binary\n      try {\n        resolvedScriptPath = fs.realpathSync(this._scriptPath);\n      } catch (err) {\n        resolvedScriptPath = this._scriptPath;\n      }\n      executableDir = path.resolve(path.dirname(resolvedScriptPath), executableDir);\n    }\n\n    // Look for a local file in preference to a command in PATH.\n    if (executableDir) {\n      let localFile = findFile(executableDir, executableFile);\n\n      // Legacy search using prefix of script name instead of command name\n      if (!localFile && !subcommand._executableFile && this._scriptPath) {\n        const legacyName = path.basename(this._scriptPath, path.extname(this._scriptPath));\n        if (legacyName !== this._name) {\n          localFile = findFile(executableDir, `${legacyName}-${subcommand._name}`);\n        }\n      }\n      executableFile = localFile || executableFile;\n    }\n\n    launchWithNode = sourceExt.includes(path.extname(executableFile));\n\n    let proc;\n    if (process.platform !== 'win32') {\n      if (launchWithNode) {\n        args.unshift(executableFile);\n        // add executable arguments to spawn\n        args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n        proc = childProcess.spawn(process.argv[0], args, { stdio: 'inherit' });\n      } else {\n        proc = childProcess.spawn(executableFile, args, { stdio: 'inherit' });\n      }\n    } else {\n      args.unshift(executableFile);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n      proc = childProcess.spawn(process.execPath, args, { stdio: 'inherit' });\n    }\n\n    if (!proc.killed) { // testing mainly to avoid leak warnings during unit tests with mocked spawn\n      const signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n      signals.forEach((signal) => {\n        // @ts-ignore\n        process.on(signal, () => {\n          if (proc.killed === false && proc.exitCode === null) {\n            proc.kill(signal);\n          }\n        });\n      });\n    }\n\n    // By default terminate process when spawned process terminates.\n    // Suppressing the exit if exitCallback defined is a bit messy and of limited use, but does allow process to stay running!\n    const exitCallback = this._exitCallback;\n    if (!exitCallback) {\n      proc.on('close', process.exit.bind(process));\n    } else {\n      proc.on('close', () => {\n        exitCallback(new CommanderError(process.exitCode || 0, 'commander.executeSubCommandAsync', '(close)'));\n      });\n    }\n    proc.on('error', (err) => {\n      // @ts-ignore\n      if (err.code === 'ENOENT') {\n        const executableDirMessage = executableDir\n          ? `searched for local subcommand relative to directory '${executableDir}'`\n          : 'no directory for search for local subcommand, use .executableDir() to supply a custom directory';\n        const executableMissing = `'${executableFile}' does not exist\n - if '${subcommand._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${executableDirMessage}`;\n        throw new Error(executableMissing);\n      // @ts-ignore\n      } else if (err.code === 'EACCES') {\n        throw new Error(`'${executableFile}' not executable`);\n      }\n      if (!exitCallback) {\n        process.exit(1);\n      } else {\n        const wrappedError = new CommanderError(1, 'commander.executeSubCommandAsync', '(error)');\n        wrappedError.nestedError = err;\n        exitCallback(wrappedError);\n      }\n    });\n\n    // Store the reference to the child process\n    this.runningCommand = proc;\n  }\n\n  /**\n   * @api private\n   */\n\n  _dispatchSubcommand(commandName, operands, unknown) {\n    const subCommand = this._findCommand(commandName);\n    if (!subCommand) this.help({ error: true });\n\n    let promiseChain;\n    promiseChain = this._chainOrCallSubCommandHook(promiseChain, subCommand, 'preSubcommand');\n    promiseChain = this._chainOrCall(promiseChain, () => {\n      if (subCommand._executableHandler) {\n        this._executeSubCommand(subCommand, operands.concat(unknown));\n      } else {\n        return subCommand._parseCommand(operands, unknown);\n      }\n    });\n    return promiseChain;\n  }\n\n  /**\n   * Invoke help directly if possible, or dispatch if necessary.\n   * e.g. help foo\n   *\n   * @api private\n   */\n\n  _dispatchHelpCommand(subcommandName) {\n    if (!subcommandName) {\n      this.help();\n    }\n    const subCommand = this._findCommand(subcommandName);\n    if (subCommand && !subCommand._executableHandler) {\n      subCommand.help();\n    }\n\n    // Fallback to parsing the help flag to invoke the help.\n    return this._dispatchSubcommand(subcommandName, [], [\n      this._helpLongFlag || this._helpShortFlag\n    ]);\n  }\n\n  /**\n   * Check this.args against expected this.registeredArguments.\n   *\n   * @api private\n   */\n\n  _checkNumberOfArguments() {\n    // too few\n    this.registeredArguments.forEach((arg, i) => {\n      if (arg.required && this.args[i] == null) {\n        this.missingArgument(arg.name());\n      }\n    });\n    // too many\n    if (this.registeredArguments.length > 0 && this.registeredArguments[this.registeredArguments.length - 1].variadic) {\n      return;\n    }\n    if (this.args.length > this.registeredArguments.length) {\n      this._excessArguments(this.args);\n    }\n  }\n\n  /**\n   * Process this.args using this.registeredArguments and save as this.processedArgs!\n   *\n   * @api private\n   */\n\n  _processArguments() {\n    const myParseArg = (argument, value, previous) => {\n      // Extra processing for nice error message on parsing failure.\n      let parsedValue = value;\n      if (value !== null && argument.parseArg) {\n        const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;\n        parsedValue = this._callParseArg(argument, value, previous, invalidValueMessage);\n      }\n      return parsedValue;\n    };\n\n    this._checkNumberOfArguments();\n\n    const processedArgs = [];\n    this.registeredArguments.forEach((declaredArg, index) => {\n      let value = declaredArg.defaultValue;\n      if (declaredArg.variadic) {\n        // Collect together remaining arguments for passing together as an array.\n        if (index < this.args.length) {\n          value = this.args.slice(index);\n          if (declaredArg.parseArg) {\n            value = value.reduce((processed, v) => {\n              return myParseArg(declaredArg, v, processed);\n            }, declaredArg.defaultValue);\n          }\n        } else if (value === undefined) {\n          value = [];\n        }\n      } else if (index < this.args.length) {\n        value = this.args[index];\n        if (declaredArg.parseArg) {\n          value = myParseArg(declaredArg, value, declaredArg.defaultValue);\n        }\n      }\n      processedArgs[index] = value;\n    });\n    this.processedArgs = processedArgs;\n  }\n\n  /**\n   * Once we have a promise we chain, but call synchronously until then.\n   *\n   * @param {Promise|undefined} promise\n   * @param {Function} fn\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCall(promise, fn) {\n    // thenable\n    if (promise && promise.then && typeof promise.then === 'function') {\n      // already have a promise, chain callback\n      return promise.then(() => fn());\n    }\n    // callback might return a promise\n    return fn();\n  }\n\n  /**\n   *\n   * @param {Promise|undefined} promise\n   * @param {string} event\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCallHooks(promise, event) {\n    let result = promise;\n    const hooks = [];\n    this._getCommandAndAncestors()\n      .reverse()\n      .filter(cmd => cmd._lifeCycleHooks[event] !== undefined)\n      .forEach(hookedCommand => {\n        hookedCommand._lifeCycleHooks[event].forEach((callback) => {\n          hooks.push({ hookedCommand, callback });\n        });\n      });\n    if (event === 'postAction') {\n      hooks.reverse();\n    }\n\n    hooks.forEach((hookDetail) => {\n      result = this._chainOrCall(result, () => {\n        return hookDetail.callback(hookDetail.hookedCommand, this);\n      });\n    });\n    return result;\n  }\n\n  /**\n   *\n   * @param {Promise|undefined} promise\n   * @param {Command} subCommand\n   * @param {string} event\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCallSubCommandHook(promise, subCommand, event) {\n    let result = promise;\n    if (this._lifeCycleHooks[event] !== undefined) {\n      this._lifeCycleHooks[event].forEach((hook) => {\n        result = this._chainOrCall(result, () => {\n          return hook(this, subCommand);\n        });\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Process arguments in context of this command.\n   * Returns action result, in case it is a promise.\n   *\n   * @api private\n   */\n\n  _parseCommand(operands, unknown) {\n    const parsed = this.parseOptions(unknown);\n    this._parseOptionsEnv(); // after cli, so parseArg not called on both cli and env\n    this._parseOptionsImplied();\n    operands = operands.concat(parsed.operands);\n    unknown = parsed.unknown;\n    this.args = operands.concat(unknown);\n\n    if (operands && this._findCommand(operands[0])) {\n      return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);\n    }\n    if (this._hasImplicitHelpCommand() && operands[0] === this._helpCommandName) {\n      return this._dispatchHelpCommand(operands[1]);\n    }\n    if (this._defaultCommandName) {\n      outputHelpIfRequested(this, unknown); // Run the help for default command from parent rather than passing to default command\n      return this._dispatchSubcommand(this._defaultCommandName, operands, unknown);\n    }\n    if (this.commands.length && this.args.length === 0 && !this._actionHandler && !this._defaultCommandName) {\n      // probably missing subcommand and no handler, user needs help (and exit)\n      this.help({ error: true });\n    }\n\n    outputHelpIfRequested(this, parsed.unknown);\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // We do not always call this check to avoid masking a \"better\" error, like unknown command.\n    const checkForUnknownOptions = () => {\n      if (parsed.unknown.length > 0) {\n        this.unknownOption(parsed.unknown[0]);\n      }\n    };\n\n    const commandEvent = `command:${this.name()}`;\n    if (this._actionHandler) {\n      checkForUnknownOptions();\n      this._processArguments();\n\n      let promiseChain;\n      promiseChain = this._chainOrCallHooks(promiseChain, 'preAction');\n      promiseChain = this._chainOrCall(promiseChain, () => this._actionHandler(this.processedArgs));\n      if (this.parent) {\n        promiseChain = this._chainOrCall(promiseChain, () => {\n          this.parent.emit(commandEvent, operands, unknown); // legacy\n        });\n      }\n      promiseChain = this._chainOrCallHooks(promiseChain, 'postAction');\n      return promiseChain;\n    }\n    if (this.parent && this.parent.listenerCount(commandEvent)) {\n      checkForUnknownOptions();\n      this._processArguments();\n      this.parent.emit(commandEvent, operands, unknown); // legacy\n    } else if (operands.length) {\n      if (this._findCommand('*')) { // legacy default command\n        return this._dispatchSubcommand('*', operands, unknown);\n      }\n      if (this.listenerCount('command:*')) {\n        // skip option check, emit event for possible misspelling suggestion\n        this.emit('command:*', operands, unknown);\n      } else if (this.commands.length) {\n        this.unknownCommand();\n      } else {\n        checkForUnknownOptions();\n        this._processArguments();\n      }\n    } else if (this.commands.length) {\n      checkForUnknownOptions();\n      // This command has subcommands and nothing hooked up at this level, so display help (and exit).\n      this.help({ error: true });\n    } else {\n      checkForUnknownOptions();\n      this._processArguments();\n      // fall through for caller to handle after calling .parse()\n    }\n  }\n\n  /**\n   * Find matching command.\n   *\n   * @api private\n   */\n  _findCommand(name) {\n    if (!name) return undefined;\n    return this.commands.find(cmd => cmd._name === name || cmd._aliases.includes(name));\n  }\n\n  /**\n   * Return an option matching `arg` if any.\n   *\n   * @param {string} arg\n   * @return {Option}\n   * @api private\n   */\n\n  _findOption(arg) {\n    return this.options.find(option => option.is(arg));\n  }\n\n  /**\n   * Display an error message if a mandatory option does not have a value.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @api private\n   */\n\n  _checkForMissingMandatoryOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd.options.forEach((anOption) => {\n        if (anOption.mandatory && (cmd.getOptionValue(anOption.attributeName()) === undefined)) {\n          cmd.missingMandatoryOptionValue(anOption);\n        }\n      });\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together in this.\n   *\n   * @api private\n   */\n  _checkForConflictingLocalOptions() {\n    const definedNonDefaultOptions = this.options.filter(\n      (option) => {\n        const optionKey = option.attributeName();\n        if (this.getOptionValue(optionKey) === undefined) {\n          return false;\n        }\n        return this.getOptionValueSource(optionKey) !== 'default';\n      }\n    );\n\n    const optionsWithConflicting = definedNonDefaultOptions.filter(\n      (option) => option.conflictsWith.length > 0\n    );\n\n    optionsWithConflicting.forEach((option) => {\n      const conflictingAndDefined = definedNonDefaultOptions.find((defined) =>\n        option.conflictsWith.includes(defined.attributeName())\n      );\n      if (conflictingAndDefined) {\n        this._conflictingOption(option, conflictingAndDefined);\n      }\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @api private\n   */\n  _checkForConflictingOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd._checkForConflictingLocalOptions();\n    });\n  }\n\n  /**\n   * Parse options from `argv` removing known options,\n   * and return argv split into operands and unknown arguments.\n   *\n   * Examples:\n   *\n   *     argv => operands, unknown\n   *     --known kkk op => [op], []\n   *     op --known kkk => [op], []\n   *     sub --unknown uuu op => [sub], [--unknown uuu op]\n   *     sub -- --unknown uuu op => [sub --unknown uuu op], []\n   *\n   * @param {String[]} argv\n   * @return {{operands: String[], unknown: String[]}}\n   */\n\n  parseOptions(argv) {\n    const operands = []; // operands, not options or values\n    const unknown = []; // first unknown option and remaining unknown args\n    let dest = operands;\n    const args = argv.slice();\n\n    function maybeOption(arg) {\n      return arg.length > 1 && arg[0] === '-';\n    }\n\n    // parse options\n    let activeVariadicOption = null;\n    while (args.length) {\n      const arg = args.shift();\n\n      // literal\n      if (arg === '--') {\n        if (dest === unknown) dest.push(arg);\n        dest.push(...args);\n        break;\n      }\n\n      if (activeVariadicOption && !maybeOption(arg)) {\n        this.emit(`option:${activeVariadicOption.name()}`, arg);\n        continue;\n      }\n      activeVariadicOption = null;\n\n      if (maybeOption(arg)) {\n        const option = this._findOption(arg);\n        // recognised option, call listener to assign value with possible custom processing\n        if (option) {\n          if (option.required) {\n            const value = args.shift();\n            if (value === undefined) this.optionMissingArgument(option);\n            this.emit(`option:${option.name()}`, value);\n          } else if (option.optional) {\n            let value = null;\n            // historical behaviour is optional value is following arg unless an option\n            if (args.length > 0 && !maybeOption(args[0])) {\n              value = args.shift();\n            }\n            this.emit(`option:${option.name()}`, value);\n          } else { // boolean flag\n            this.emit(`option:${option.name()}`);\n          }\n          activeVariadicOption = option.variadic ? option : null;\n          continue;\n        }\n      }\n\n      // Look for combo options following single dash, eat first one if known.\n      if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n        const option = this._findOption(`-${arg[1]}`);\n        if (option) {\n          if (option.required || (option.optional && this._combineFlagAndOptionalValue)) {\n            // option with value following in same argument\n            this.emit(`option:${option.name()}`, arg.slice(2));\n          } else {\n            // boolean option, emit and put back remainder of arg for further processing\n            this.emit(`option:${option.name()}`);\n            args.unshift(`-${arg.slice(2)}`);\n          }\n          continue;\n        }\n      }\n\n      // Look for known long flag with value, like --foo=bar\n      if (/^--[^=]+=/.test(arg)) {\n        const index = arg.indexOf('=');\n        const option = this._findOption(arg.slice(0, index));\n        if (option && (option.required || option.optional)) {\n          this.emit(`option:${option.name()}`, arg.slice(index + 1));\n          continue;\n        }\n      }\n\n      // Not a recognised option by this command.\n      // Might be a command-argument, or subcommand option, or unknown option, or help command or option.\n\n      // An unknown option means further arguments also classified as unknown so can be reprocessed by subcommands.\n      if (maybeOption(arg)) {\n        dest = unknown;\n      }\n\n      // If using positionalOptions, stop processing our options at subcommand.\n      if ((this._enablePositionalOptions || this._passThroughOptions) && operands.length === 0 && unknown.length === 0) {\n        if (this._findCommand(arg)) {\n          operands.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        } else if (arg === this._helpCommandName && this._hasImplicitHelpCommand()) {\n          operands.push(arg);\n          if (args.length > 0) operands.push(...args);\n          break;\n        } else if (this._defaultCommandName) {\n          unknown.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        }\n      }\n\n      // If using passThroughOptions, stop processing options at first command-argument.\n      if (this._passThroughOptions) {\n        dest.push(arg);\n        if (args.length > 0) dest.push(...args);\n        break;\n      }\n\n      // add arg\n      dest.push(arg);\n    }\n\n    return { operands, unknown };\n  }\n\n  /**\n   * Return an object containing local option values as key-value pairs.\n   *\n   * @return {Object}\n   */\n  opts() {\n    if (this._storeOptionsAsProperties) {\n      // Preserve original behaviour so backwards compatible when still using properties\n      const result = {};\n      const len = this.options.length;\n\n      for (let i = 0; i < len; i++) {\n        const key = this.options[i].attributeName();\n        result[key] = key === this._versionOptionName ? this._version : this[key];\n      }\n      return result;\n    }\n\n    return this._optionValues;\n  }\n\n  /**\n   * Return an object containing merged local and global option values as key-value pairs.\n   *\n   * @return {Object}\n   */\n  optsWithGlobals() {\n    // globals overwrite locals\n    return this._getCommandAndAncestors().reduce(\n      (combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()),\n      {}\n    );\n  }\n\n  /**\n   * Display error message and exit (or call exitOverride).\n   *\n   * @param {string} message\n   * @param {Object} [errorOptions]\n   * @param {string} [errorOptions.code] - an id string representing the error\n   * @param {number} [errorOptions.exitCode] - used with process.exit\n   */\n  error(message, errorOptions) {\n    // output handling\n    this._outputConfiguration.outputError(`${message}\\n`, this._outputConfiguration.writeErr);\n    if (typeof this._showHelpAfterError === 'string') {\n      this._outputConfiguration.writeErr(`${this._showHelpAfterError}\\n`);\n    } else if (this._showHelpAfterError) {\n      this._outputConfiguration.writeErr('\\n');\n      this.outputHelp({ error: true });\n    }\n\n    // exit handling\n    const config = errorOptions || {};\n    const exitCode = config.exitCode || 1;\n    const code = config.code || 'commander.error';\n    this._exit(exitCode, code, message);\n  }\n\n  /**\n   * Apply any option related environment variables, if option does\n   * not have a value from cli or client code.\n   *\n   * @api private\n   */\n  _parseOptionsEnv() {\n    this.options.forEach((option) => {\n      if (option.envVar && option.envVar in process.env) {\n        const optionKey = option.attributeName();\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n        if (this.getOptionValue(optionKey) === undefined || ['default', 'config', 'env'].includes(this.getOptionValueSource(optionKey))) {\n          if (option.required || option.optional) { // option can take a value\n            // keep very simple, optional always takes value\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n          } else { // boolean\n            // keep very simple, only care that envVar defined and not the value\n            this.emit(`optionEnv:${option.name()}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply any implied option values, if option is undefined or default value.\n   *\n   * @api private\n   */\n  _parseOptionsImplied() {\n    const dualHelper = new DualOptions(this.options);\n    const hasCustomOptionValue = (optionKey) => {\n      return this.getOptionValue(optionKey) !== undefined && !['default', 'implied'].includes(this.getOptionValueSource(optionKey));\n    };\n    this.options\n      .filter(option => (option.implied !== undefined) &&\n        hasCustomOptionValue(option.attributeName()) &&\n        dualHelper.valueFromOption(this.getOptionValue(option.attributeName()), option))\n      .forEach((option) => {\n        Object.keys(option.implied)\n          .filter(impliedKey => !hasCustomOptionValue(impliedKey))\n          .forEach(impliedKey => {\n            this.setOptionValueWithSource(impliedKey, option.implied[impliedKey], 'implied');\n          });\n      });\n  }\n\n  /**\n   * Argument `name` is missing.\n   *\n   * @param {string} name\n   * @api private\n   */\n\n  missingArgument(name) {\n    const message = `error: missing required argument '${name}'`;\n    this.error(message, { code: 'commander.missingArgument' });\n  }\n\n  /**\n   * `Option` is missing an argument.\n   *\n   * @param {Option} option\n   * @api private\n   */\n\n  optionMissingArgument(option) {\n    const message = `error: option '${option.flags}' argument missing`;\n    this.error(message, { code: 'commander.optionMissingArgument' });\n  }\n\n  /**\n   * `Option` does not have a value, and is a mandatory option.\n   *\n   * @param {Option} option\n   * @api private\n   */\n\n  missingMandatoryOptionValue(option) {\n    const message = `error: required option '${option.flags}' not specified`;\n    this.error(message, { code: 'commander.missingMandatoryOptionValue' });\n  }\n\n  /**\n   * `Option` conflicts with another option.\n   *\n   * @param {Option} option\n   * @param {Option} conflictingOption\n   * @api private\n   */\n  _conflictingOption(option, conflictingOption) {\n    // The calling code does not know whether a negated option is the source of the\n    // value, so do some work to take an educated guess.\n    const findBestOptionFromValue = (option) => {\n      const optionKey = option.attributeName();\n      const optionValue = this.getOptionValue(optionKey);\n      const negativeOption = this.options.find(target => target.negate && optionKey === target.attributeName());\n      const positiveOption = this.options.find(target => !target.negate && optionKey === target.attributeName());\n      if (negativeOption && (\n        (negativeOption.presetArg === undefined && optionValue === false) ||\n        (negativeOption.presetArg !== undefined && optionValue === negativeOption.presetArg)\n      )) {\n        return negativeOption;\n      }\n      return positiveOption || option;\n    };\n\n    const getErrorMessage = (option) => {\n      const bestOption = findBestOptionFromValue(option);\n      const optionKey = bestOption.attributeName();\n      const source = this.getOptionValueSource(optionKey);\n      if (source === 'env') {\n        return `environment variable '${bestOption.envVar}'`;\n      }\n      return `option '${bestOption.flags}'`;\n    };\n\n    const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;\n    this.error(message, { code: 'commander.conflictingOption' });\n  }\n\n  /**\n   * Unknown option `flag`.\n   *\n   * @param {string} flag\n   * @api private\n   */\n\n  unknownOption(flag) {\n    if (this._allowUnknownOption) return;\n    let suggestion = '';\n\n    if (flag.startsWith('--') && this._showSuggestionAfterError) {\n      // Looping to pick up the global options too\n      let candidateFlags = [];\n      let command = this;\n      do {\n        const moreFlags = command.createHelp().visibleOptions(command)\n          .filter(option => option.long)\n          .map(option => option.long);\n        candidateFlags = candidateFlags.concat(moreFlags);\n        command = command.parent;\n      } while (command && !command._enablePositionalOptions);\n      suggestion = suggestSimilar(flag, candidateFlags);\n    }\n\n    const message = `error: unknown option '${flag}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownOption' });\n  }\n\n  /**\n   * Excess arguments, more than expected.\n   *\n   * @param {string[]} receivedArgs\n   * @api private\n   */\n\n  _excessArguments(receivedArgs) {\n    if (this._allowExcessArguments) return;\n\n    const expected = this.registeredArguments.length;\n    const s = (expected === 1) ? '' : 's';\n    const forSubcommand = this.parent ? ` for '${this.name()}'` : '';\n    const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s} but got ${receivedArgs.length}.`;\n    this.error(message, { code: 'commander.excessArguments' });\n  }\n\n  /**\n   * Unknown command.\n   *\n   * @api private\n   */\n\n  unknownCommand() {\n    const unknownName = this.args[0];\n    let suggestion = '';\n\n    if (this._showSuggestionAfterError) {\n      const candidateNames = [];\n      this.createHelp().visibleCommands(this).forEach((command) => {\n        candidateNames.push(command.name());\n        // just visible alias\n        if (command.alias()) candidateNames.push(command.alias());\n      });\n      suggestion = suggestSimilar(unknownName, candidateNames);\n    }\n\n    const message = `error: unknown command '${unknownName}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownCommand' });\n  }\n\n  /**\n   * Get or set the program version.\n   *\n   * This method auto-registers the \"-V, --version\" option which will print the version number.\n   *\n   * You can optionally supply the flags and description to override the defaults.\n   *\n   * @param {string} [str]\n   * @param {string} [flags]\n   * @param {string} [description]\n   * @return {this | string | undefined} `this` command for chaining, or version string if no arguments\n   */\n\n  version(str, flags, description) {\n    if (str === undefined) return this._version;\n    this._version = str;\n    flags = flags || '-V, --version';\n    description = description || 'output the version number';\n    const versionOption = this.createOption(flags, description);\n    this._versionOptionName = versionOption.attributeName(); // [sic] not defined in constructor, partly legacy, partly only needed at root\n    this.options.push(versionOption);\n    this.on('option:' + versionOption.name(), () => {\n      this._outputConfiguration.writeOut(`${str}\\n`);\n      this._exit(0, 'commander.version', str);\n    });\n    return this;\n  }\n\n  /**\n   * Set the description.\n   *\n   * @param {string} [str]\n   * @param {Object} [argsDescription]\n   * @return {string|Command}\n   */\n  description(str, argsDescription) {\n    if (str === undefined && argsDescription === undefined) return this._description;\n    this._description = str;\n    if (argsDescription) {\n      this._argsDescription = argsDescription;\n    }\n    return this;\n  }\n\n  /**\n   * Set the summary. Used when listed as subcommand of parent.\n   *\n   * @param {string} [str]\n   * @return {string|Command}\n   */\n  summary(str) {\n    if (str === undefined) return this._summary;\n    this._summary = str;\n    return this;\n  }\n\n  /**\n   * Set an alias for the command.\n   *\n   * You may call more than once to add multiple aliases. Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string} [alias]\n   * @return {string|Command}\n   */\n\n  alias(alias) {\n    if (alias === undefined) return this._aliases[0]; // just return first, for backwards compatibility\n\n    /** @type {Command} */\n    let command = this;\n    if (this.commands.length !== 0 && this.commands[this.commands.length - 1]._executableHandler) {\n      // assume adding alias for last added executable subcommand, rather than this\n      command = this.commands[this.commands.length - 1];\n    }\n\n    if (alias === command._name) throw new Error('Command alias can\\'t be the same as its name');\n\n    command._aliases.push(alias);\n    return this;\n  }\n\n  /**\n   * Set aliases for the command.\n   *\n   * Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string[]} [aliases]\n   * @return {string[]|Command}\n   */\n\n  aliases(aliases) {\n    // Getter for the array of aliases is the main reason for having aliases() in addition to alias().\n    if (aliases === undefined) return this._aliases;\n\n    aliases.forEach((alias) => this.alias(alias));\n    return this;\n  }\n\n  /**\n   * Set / get the command usage `str`.\n   *\n   * @param {string} [str]\n   * @return {String|Command}\n   */\n\n  usage(str) {\n    if (str === undefined) {\n      if (this._usage) return this._usage;\n\n      const args = this.registeredArguments.map((arg) => {\n        return humanReadableArgName(arg);\n      });\n      return [].concat(\n        (this.options.length || this._hasHelpOption ? '[options]' : []),\n        (this.commands.length ? '[command]' : []),\n        (this.registeredArguments.length ? args : [])\n      ).join(' ');\n    }\n\n    this._usage = str;\n    return this;\n  }\n\n  /**\n   * Get or set the name of the command.\n   *\n   * @param {string} [str]\n   * @return {string|Command}\n   */\n\n  name(str) {\n    if (str === undefined) return this._name;\n    this._name = str;\n    return this;\n  }\n\n  /**\n   * Set the name of the command from script filename, such as process.argv[1],\n   * or require.main.filename, or __filename.\n   *\n   * (Used internally and public although not documented in README.)\n   *\n   * @example\n   * program.nameFromFilename(require.main.filename);\n   *\n   * @param {string} filename\n   * @return {Command}\n   */\n\n  nameFromFilename(filename) {\n    this._name = path.basename(filename, path.extname(filename));\n\n    return this;\n  }\n\n  /**\n   * Get or set the directory for searching for executable subcommands of this command.\n   *\n   * @example\n   * program.executableDir(__dirname);\n   * // or\n   * program.executableDir('subcommands');\n   *\n   * @param {string} [path]\n   * @return {string|null|Command}\n   */\n\n  executableDir(path) {\n    if (path === undefined) return this._executableDir;\n    this._executableDir = path;\n    return this;\n  }\n\n  /**\n   * Return program help documentation.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to wrap for stderr instead of stdout\n   * @return {string}\n   */\n\n  helpInformation(contextOptions) {\n    const helper = this.createHelp();\n    if (helper.helpWidth === undefined) {\n      helper.helpWidth = (contextOptions && contextOptions.error) ? this._outputConfiguration.getErrHelpWidth() : this._outputConfiguration.getOutHelpWidth();\n    }\n    return helper.formatHelp(this, helper);\n  }\n\n  /**\n   * @api private\n   */\n\n  _getHelpContext(contextOptions) {\n    contextOptions = contextOptions || {};\n    const context = { error: !!contextOptions.error };\n    let write;\n    if (context.error) {\n      write = (arg) => this._outputConfiguration.writeErr(arg);\n    } else {\n      write = (arg) => this._outputConfiguration.writeOut(arg);\n    }\n    context.write = contextOptions.write || write;\n    context.command = this;\n    return context;\n  }\n\n  /**\n   * Output help information for this command.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean } | Function} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  outputHelp(contextOptions) {\n    let deprecatedCallback;\n    if (typeof contextOptions === 'function') {\n      deprecatedCallback = contextOptions;\n      contextOptions = undefined;\n    }\n    const context = this._getHelpContext(contextOptions);\n\n    this._getCommandAndAncestors().reverse().forEach(command => command.emit('beforeAllHelp', context));\n    this.emit('beforeHelp', context);\n\n    let helpInformation = this.helpInformation(context);\n    if (deprecatedCallback) {\n      helpInformation = deprecatedCallback(helpInformation);\n      if (typeof helpInformation !== 'string' && !Buffer.isBuffer(helpInformation)) {\n        throw new Error('outputHelp callback must return a string or a Buffer');\n      }\n    }\n    context.write(helpInformation);\n\n    if (this._helpLongFlag) {\n      this.emit(this._helpLongFlag); // deprecated\n    }\n    this.emit('afterHelp', context);\n    this._getCommandAndAncestors().forEach(command => command.emit('afterAllHelp', context));\n  }\n\n  /**\n   * You can pass in flags and a description to override the help\n   * flags and help description for your command. Pass in false to\n   * disable the built-in help option.\n   *\n   * @param {string | boolean} [flags]\n   * @param {string} [description]\n   * @return {Command} `this` command for chaining\n   */\n\n  helpOption(flags, description) {\n    if (typeof flags === 'boolean') {\n      this._hasHelpOption = flags;\n      return this;\n    }\n    this._helpFlags = flags || this._helpFlags;\n    this._helpDescription = description || this._helpDescription;\n\n    const helpFlags = splitOptionFlags(this._helpFlags);\n    this._helpShortFlag = helpFlags.shortFlag;\n    this._helpLongFlag = helpFlags.longFlag;\n\n    return this;\n  }\n\n  /**\n   * Output help information and exit.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  help(contextOptions) {\n    this.outputHelp(contextOptions);\n    let exitCode = process.exitCode || 0;\n    if (exitCode === 0 && contextOptions && typeof contextOptions !== 'function' && contextOptions.error) {\n      exitCode = 1;\n    }\n    // message: do not have all displayed text available so only passing placeholder.\n    this._exit(exitCode, 'commander.help', '(outputHelp)');\n  }\n\n  /**\n   * Add additional text to be displayed with the built-in help.\n   *\n   * Position is 'before' or 'after' to affect just this command,\n   * and 'beforeAll' or 'afterAll' to affect this command and all its subcommands.\n   *\n   * @param {string} position - before or after built-in help\n   * @param {string | Function} text - string to add, or a function returning a string\n   * @return {Command} `this` command for chaining\n   */\n  addHelpText(position, text) {\n    const allowedValues = ['beforeAll', 'before', 'after', 'afterAll'];\n    if (!allowedValues.includes(position)) {\n      throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    const helpEvent = `${position}Help`;\n    this.on(helpEvent, (context) => {\n      let helpStr;\n      if (typeof text === 'function') {\n        helpStr = text({ error: context.error, command: context.command });\n      } else {\n        helpStr = text;\n      }\n      // Ignore falsy value when nothing to output.\n      if (helpStr) {\n        context.write(`${helpStr}\\n`);\n      }\n    });\n    return this;\n  }\n}\n\n/**\n * Output help information if help flags specified\n *\n * @param {Command} cmd - command to output help for\n * @param {Array} args - array of options to search for help flags\n * @api private\n */\n\nfunction outputHelpIfRequested(cmd, args) {\n  const helpOption = cmd._hasHelpOption && args.find(arg => arg === cmd._helpLongFlag || arg === cmd._helpShortFlag);\n  if (helpOption) {\n    cmd.outputHelp();\n    // (Do not have all displayed text available so only passing placeholder.)\n    cmd._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @api private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    if (!arg.startsWith('--inspect')) {\n      return arg;\n    }\n    let debugOption;\n    let debugHost = '127.0.0.1';\n    let debugPort = '9229';\n    let match;\n    if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n      // e.g. --inspect\n      debugOption = match[1];\n    } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {\n      debugOption = match[1];\n      if (/^\\d+$/.test(match[3])) {\n        // e.g. --inspect=1234\n        debugPort = match[3];\n      } else {\n        // e.g. --inspect=localhost\n        debugHost = match[3];\n      }\n    } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null) {\n      // e.g. --inspect=localhost:1234\n      debugOption = match[1];\n      debugHost = match[3];\n      debugPort = match[4];\n    }\n\n    if (debugOption && debugPort !== '0') {\n      return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n    }\n    return arg;\n  });\n}\n\nexports.Command = Command;\n",
    "const { Argument } = require('./lib/argument.js');\nconst { Command } = require('./lib/command.js');\nconst { CommanderError, InvalidArgumentError } = require('./lib/error.js');\nconst { Help } = require('./lib/help.js');\nconst { Option } = require('./lib/option.js');\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\nexports.program = exports; // More explicit access to global command.\n// createArgument, createCommand, and createOption are implicitly available as they are methods on program.\n\n/**\n * Expose classes\n */\n\nexports.Command = Command;\nexports.Option = Option;\nexports.Argument = Argument;\nexports.Help = Help;\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\nexports.InvalidOptionArgumentError = InvalidArgumentError; // Deprecated\n",
    "const idRegex = /^[a-z0-9-]{1,32}$/;\nconst nameRegex = /^[a-z0-9-]{1,32}$/;\nconst valueRegex = /^[a-zA-Z0-9/+.-]+$/;\nconst b64Regex = /^([a-zA-Z0-9/+.-]+|)$/;\nconst decimalRegex = /^((-)?[1-9]\\d*|0)$/;\nconst versionRegex = /^v=(\\d+)$/;\n\nfunction objToKeyVal(obj) {\n  return objectKeys(obj)\n    .map(k => [k, obj[k]].join('='))\n    .join(',');\n}\n\nfunction keyValtoObj(str) {\n  const obj = {};\n  str.split(',').forEach(ps => {\n    const pss = ps.split('=');\n    if (pss.length < 2) {\n      throw new TypeError(`params must be in the format name=value`);\n    }\n\n    obj[pss.shift()] = pss.join('=');\n  });\n  return obj;\n}\n\nfunction objectKeys(object) {\n  /* istanbul ignore next */\n  return Object.keys(object);\n}\n\nfunction objectValues(object) {\n  /* istanbul ignore next */\n  if (typeof Object.values === 'function') return Object.values(object);\n  /* istanbul ignore next */\n  return objectKeys(object).map(k => object[k]);\n}\n\n/**\n * Generates a PHC string using the data provided.\n * @param  {Object} opts Object that holds the data needed to generate the PHC\n * string.\n * @param  {string} opts.id Symbolic name for the function.\n * @param  {Number} [opts.version] The version of the function.\n * @param  {Object} [opts.params] Parameters of the function.\n * @param  {Buffer} [opts.salt] The salt as a binary buffer.\n * @param  {Buffer} [opts.hash] The hash as a binary buffer.\n * @return {string} The hash string adhering to the PHC format.\n */\nfunction serialize(opts) {\n  const fields = [''];\n\n  if (typeof opts !== 'object' || opts === null) {\n    throw new TypeError('opts must be an object');\n  }\n\n  // Identifier Validation\n  if (typeof opts.id !== 'string') {\n    throw new TypeError('id must be a string');\n  }\n\n  if (!idRegex.test(opts.id)) {\n    throw new TypeError(`id must satisfy ${idRegex}`);\n  }\n\n  fields.push(opts.id);\n\n  if (typeof opts.version !== 'undefined') {\n    if (\n      typeof opts.version !== 'number' ||\n      opts.version < 0 ||\n      !Number.isInteger(opts.version)\n    ) {\n      throw new TypeError('version must be a positive integer number');\n    }\n\n    fields.push(`v=${opts.version}`);\n  }\n\n  // Parameters Validation\n  if (typeof opts.params !== 'undefined') {\n    if (typeof opts.params !== 'object' || opts.params === null) {\n      throw new TypeError('params must be an object');\n    }\n\n    const pk = objectKeys(opts.params);\n    if (!pk.every(p => nameRegex.test(p))) {\n      throw new TypeError(`params names must satisfy ${nameRegex}`);\n    }\n\n    // Convert Numbers into Numeric Strings and Buffers into B64 encoded strings.\n    pk.forEach(k => {\n      if (typeof opts.params[k] === 'number') {\n        opts.params[k] = opts.params[k].toString();\n      } else if (Buffer.isBuffer(opts.params[k])) {\n        opts.params[k] = opts.params[k].toString('base64').split('=')[0];\n      }\n    });\n    const pv = objectValues(opts.params);\n    if (!pv.every(v => typeof v === 'string')) {\n      throw new TypeError('params values must be strings');\n    }\n\n    if (!pv.every(v => valueRegex.test(v))) {\n      throw new TypeError(`params values must satisfy ${valueRegex}`);\n    }\n\n    const strpar = objToKeyVal(opts.params);\n    fields.push(strpar);\n  }\n\n  if (typeof opts.salt !== 'undefined') {\n    // Salt Validation\n    if (!Buffer.isBuffer(opts.salt)) {\n      throw new TypeError('salt must be a Buffer');\n    }\n\n    fields.push(opts.salt.toString('base64').split('=')[0]);\n\n    if (typeof opts.hash !== 'undefined') {\n      // Hash Validation\n      if (!Buffer.isBuffer(opts.hash)) {\n        throw new TypeError('hash must be a Buffer');\n      }\n\n      fields.push(opts.hash.toString('base64').split('=')[0]);\n    }\n  }\n\n  // Create the PHC formatted string\n  const phcstr = fields.join('$');\n\n  return phcstr;\n}\n\n/**\n * Parses data from a PHC string.\n * @param  {string} phcstr A PHC string to parse.\n * @return {Object} The object containing the data parsed from the PHC string.\n */\nfunction deserialize(phcstr) {\n  if (typeof phcstr !== 'string' || phcstr === '') {\n    throw new TypeError('pchstr must be a non-empty string');\n  }\n\n  if (phcstr[0] !== '$') {\n    throw new TypeError('pchstr must contain a $ as first char');\n  }\n\n  const fields = phcstr.split('$');\n  // Remove first empty $\n  fields.shift();\n\n  // Parse Fields\n  let maxf = 5;\n  if (!versionRegex.test(fields[1])) maxf--;\n  if (fields.length > maxf) {\n    throw new TypeError(\n      `pchstr contains too many fileds: ${fields.length}/${maxf}`\n    );\n  }\n\n  // Parse Identifier\n  const id = fields.shift();\n  if (!idRegex.test(id)) {\n    throw new TypeError(`id must satisfy ${idRegex}`);\n  }\n\n  let version;\n  // Parse Version\n  if (versionRegex.test(fields[0])) {\n    version = parseInt(fields.shift().match(versionRegex)[1], 10);\n  }\n\n  let hash;\n  let salt;\n  if (b64Regex.test(fields[fields.length - 1])) {\n    if (fields.length > 1 && b64Regex.test(fields[fields.length - 2])) {\n      // Parse Hash\n      hash = Buffer.from(fields.pop(), 'base64');\n      // Parse Salt\n      salt = Buffer.from(fields.pop(), 'base64');\n    } else {\n      // Parse Salt\n      salt = Buffer.from(fields.pop(), 'base64');\n    }\n  }\n\n  // Parse Parameters\n  let params;\n  if (fields.length > 0) {\n    const parstr = fields.pop();\n    params = keyValtoObj(parstr);\n    if (!objectKeys(params).every(p => nameRegex.test(p))) {\n      throw new TypeError(`params names must satisfy ${nameRegex}`);\n    }\n\n    const pv = objectValues(params);\n    if (!pv.every(v => valueRegex.test(v))) {\n      throw new TypeError(`params values must satisfy ${valueRegex}`);\n    }\n\n    const pk = objectKeys(params);\n    // Convert Decimal Strings into Numbers\n    pk.forEach(k => {\n      params[k] = decimalRegex.test(params[k])\n        ? parseInt(params[k], 10)\n        : params[k];\n    });\n  }\n\n  if (fields.length > 0) {\n    throw new TypeError(`pchstr contains unrecognized fileds: ${fields}`);\n  }\n\n  // Build the output object\n  const phcobj = {id};\n  if (version) phcobj.version = version;\n  if (params) phcobj.params = params;\n  if (salt) phcobj.salt = salt;\n  if (hash) phcobj.hash = hash;\n\n  return phcobj;\n}\n\nmodule.exports = {\n  serialize,\n  deserialize\n};\n",
    "var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi && tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n",
    "const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\nif (typeof runtimeRequire.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = runtimeRequire.addon.bind(runtimeRequire)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n",
    "const assert = require(\"node:assert\");\nconst { randomBytes, timingSafeEqual } = require(\"node:crypto\");\nconst { promisify } = require(\"node:util\");\nconst { deserialize, serialize } = require(\"@phc/format\");\nconst gypBuild = require(\"node-gyp-build\");\n\nconst { hash: bindingsHash } = gypBuild(__dirname);\n\n/** @type {(size: number) => Promise<Buffer>} */\nconst generateSalt = promisify(randomBytes);\n\nconst argon2d = 0;\nconst argon2i = 1;\nconst argon2id = 2;\n\nmodule.exports.argon2d = argon2d;\nmodule.exports.argon2i = argon2i;\nmodule.exports.argon2id = argon2id;\n\n/** @enum {argon2i | argon2d | argon2id} */\nconst types = Object.freeze({ argon2d, argon2i, argon2id });\n\n/** @enum {'argon2d' | 'argon2i' | 'argon2id'} */\nconst names = Object.freeze({\n  [types.argon2d]: \"argon2d\",\n  [types.argon2i]: \"argon2i\",\n  [types.argon2id]: \"argon2id\",\n});\n\nconst defaults = {\n  hashLength: 32,\n  timeCost: 3,\n  memoryCost: 1 << 16,\n  parallelism: 4,\n  type: argon2id,\n  version: 0x13,\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [hashLength=32]\n * @property {number} [timeCost=3]\n * @property {number} [memoryCost=65536]\n * @property {number} [parallelism=4]\n * @property {keyof typeof names} [type=argon2id]\n * @property {number} [version=19]\n * @property {Buffer} [salt]\n * @property {Buffer} [associatedData]\n * @property {Buffer} [secret]\n */\n\n/**\n * Hashes a password with Argon2, producing a raw hash\n *\n * @overload\n * @param {Buffer | string} password The plaintext password to be hashed\n * @param {Options & { raw: true }} options The parameters for Argon2\n * @returns {Promise<Buffer>} The raw hash generated from `password`\n */\n/**\n * Hashes a password with Argon2, producing an encoded hash\n *\n * @overload\n * @param {Buffer | string} password The plaintext password to be hashed\n * @param {Options & { raw?: boolean }} [options] The parameters for Argon2\n * @returns {Promise<string>} The encoded hash generated from `password`\n */\n/**\n * @param {Buffer | string} password The plaintext password to be hashed\n * @param {Options & { raw?: boolean }} [options] The parameters for Argon2\n */\nasync function hash(password, options) {\n  let { raw, salt, ...rest } = { ...defaults, ...options };\n\n  if (rest.hashLength > 2 ** 32 - 1) {\n    throw new RangeError(\"Hash length is too large\");\n  }\n\n  if (rest.memoryCost > 2 ** 32 - 1) {\n    throw new RangeError(\"Memory cost is too large\");\n  }\n\n  if (rest.timeCost > 2 ** 32 - 1) {\n    throw new RangeError(\"Time cost is too large\");\n  }\n\n  if (rest.parallelism > 2 ** 24 - 1) {\n    throw new RangeError(\"Parallelism is too large\");\n  }\n\n  salt = salt ?? (await generateSalt(16));\n\n  const {\n    hashLength,\n    secret = Buffer.alloc(0),\n    type,\n    version,\n    memoryCost: m,\n    timeCost: t,\n    parallelism: p,\n    associatedData: data = Buffer.alloc(0),\n  } = rest;\n\n  const hash = await bindingsHash({\n    password: Buffer.from(password),\n    salt,\n    secret,\n    data,\n    hashLength,\n    m,\n    t,\n    p,\n    version,\n    type,\n  });\n  if (raw) {\n    return hash;\n  }\n\n  return serialize({\n    id: names[type],\n    version,\n    params: { m, t, p, ...(data.byteLength > 0 ? { data } : {}) },\n    salt,\n    hash,\n  });\n}\nmodule.exports.hash = hash;\n\n/**\n * @param {string} digest The digest to be checked\n * @param {Object} [options] The current parameters for Argon2\n * @param {number} [options.timeCost=3]\n * @param {number} [options.memoryCost=65536]\n * @param {number} [options.parallelism=4]\n * @param {number} [options.version=0x13]\n * @returns {boolean} `true` if the digest parameters do not match the parameters in `options`, otherwise `false`\n */\nfunction needsRehash(digest, options = {}) {\n  const { memoryCost, timeCost, parallelism, version } = {\n    ...defaults,\n    ...options,\n  };\n\n  const {\n    version: v,\n    params: { m, t, p },\n  } = deserialize(digest);\n\n  return (\n    +v !== +version ||\n    +m !== +memoryCost ||\n    +t !== +timeCost ||\n    +p !== +parallelism\n  );\n}\nmodule.exports.needsRehash = needsRehash;\n\n/**\n * @param {string} digest The digest to be checked\n * @param {Buffer | string} password The plaintext password to be verified\n * @param {Object} [options] The current parameters for Argon2\n * @param {Buffer} [options.secret]\n * @returns {Promise<boolean>} `true` if the digest parameters matches the hash generated from `password`, otherwise `false`\n */\nasync function verify(digest, password, options = {}) {\n  const { id, ...rest } = deserialize(digest);\n  if (!(id in types)) {\n    return false;\n  }\n\n  const {\n    version = 0x10,\n    params: { m, t, p, data = \"\" },\n    salt,\n    hash,\n  } = rest;\n\n  const { secret = Buffer.alloc(0) } = options;\n\n  return timingSafeEqual(\n    await bindingsHash({\n      password: Buffer.from(password),\n      salt,\n      secret,\n      data: Buffer.from(data, \"base64\"),\n      hashLength: hash.byteLength,\n      m: +m,\n      t: +t,\n      p: +p,\n      version: +version,\n      type: types[id],\n    }),\n    hash,\n  );\n}\nmodule.exports.verify = verify;\n",
    "import commander from './index.js';\n\n// wrapper to provide named exports for ESM.\nexport const {\n  program,\n  createCommand,\n  createArgument,\n  createOption,\n  CommanderError,\n  InvalidArgumentError,\n  InvalidOptionArgumentError, // deprecated old name\n  Command,\n  Argument,\n  Option,\n  Help\n} = commander;\n",
    "#!/usr/bin/env node\n// packages/node-runtime/src/cli.ts\nimport { Command, Option } from 'commander';\nimport { existsSync, accessSync, constants as fsConstants, realpathSync} from 'node:fs';\nimport { createReadStream, createWriteStream } from 'node:fs';\nimport { stdin, stdout, stderr, exit as processExit } from 'node:process';\nimport { FilesystemError } from '../../core/src/errors/index.js';\nimport { FileByteSource } from '../../core/src/util/ByteSource.js';\nimport { createCryptit } from './index.js';\nimport { Cryptit } from '../../core/src/index.js';\nimport { dirname , resolve, sep, isAbsolute} from 'node:path';\nimport { toWebReadable, toWebWritable } from './streamAdapter.js';\n\n\nconst PKG_VERSION = '2.1.0'; // sync with root package.json\n\nconst DEFAULT_ROOT = process.cwd();\n\nasync function promptPass(): Promise<string> {\n  if (!stdin.isTTY) throw new Error('STDIN not a TTY; use --pass');\n  stderr.write('Passphrase: ');\n  stdin.setRawMode?.(true);\n  stdin.resume();\n  stdin.setEncoding('utf8');\n\n  let buf = '';\n  return new Promise(resolve => {\n    function done() {\n      stdin.setRawMode?.(false);\n      stdin.pause();\n      stderr.write('\\n');\n      stdin.off('data', onData);\n      resolve(buf);\n    }\n    function onData(ch: string) {\n      if (ch === '\\u0003') processExit(130);\n      if (ch === '\\r' || ch === '\\n') return done();\n      if (ch === '\\u0008' || ch === '\\u007F') {\n        buf = buf.slice(0, -1);\n        return;\n      }\n      buf += ch;\n    }\n    stdin.on('data', onData);\n  });\n}\n\n\n\nfunction assertWritable(out: string, root: string = DEFAULT_ROOT) {\n  if (out === '-') return;\n\n  const absRoot    = realpathSync(root);\n\n const absOut     = isAbsolute(out)\n                     ? resolve(out)\n                    : resolve(absRoot, out);\n\n  const targetDir  = dirname(absOut);\n  const realTarget = realpathSync(targetDir);\n\n  if (!realTarget.startsWith(absRoot + sep)) {\n    throw new FilesystemError('Refusing to write outside of root directory.');\n  }\n  if (!existsSync(targetDir)) {\n    throw new FilesystemError(`Output directory does not exist: ${targetDir}`);\n  }\n\n  try {\n    accessSync(targetDir, fsConstants.W_OK);\n  } catch {\n    throw new FilesystemError(`Output directory is not writeable`);\n  }\n  \n\n  return absOut;\n}\n\nasync function readAllFromStdin(): Promise<string> {\n  const chunks: Buffer[] = [];\n  for await (const c of stdin) chunks.push(c as Buffer);\n  return Buffer.concat(chunks).toString('utf8');\n}\n\nconst program = new Command();\n\nprogram\n  .name('cryptit')\n  .version(PKG_VERSION)\n  .description('Text and File Encryption Utility\\n' + 'Scheme 0: AES-GCM (Native) / Argon2id (Single Thread)\\n' +'Scheme 1: XChaCha20-Poly1305 (JS Engine) / Argon2id (Parallel)')\n\n  .addOption(\n    new Option('-S, --scheme <0-1>', 'encryption scheme version')\n      .argParser((v) => {\n        const n = Number(v);\n        if (!Number.isInteger(n) || n < 0 || n > 7) {\n          throw new Error('Version size must be a integer between 0 and 7');\n        }\n        return n;\n      })\n      .default(0, '0')\n  )\n\n  // passphrase (hidden from --help if you want)\n  .addOption(\n    new Option('-p, --pass <passphrase>', 'passphrase (prompt if omitted)')\n      .hideHelp()            // if you don’t want it listed in help\n      .argParser((v) => {\n        if (!v.trim()) throw new Error('Passphrase cannot be empty');\n        return v;\n      })\n  )\n\n  // difficulty\n  .addOption(\n    new Option('-d, --difficulty <level>', 'argon2 difficulty')\n      .choices(['low', 'middle', 'high'] as const)\n      .default('middle', 'middle')\n  )\n\n  // salt-strength\n  .addOption(\n    new Option('-s, --salt-strength <variant>', 'salt length variant')\n      .choices(['low', 'high'] as const)\n      .default('high', 'high')\n  )\n\n  // chunk-size\n  .addOption(\n    new Option('-c, --chunk-size <bytes>', 'chunk size in bytes')\n      .argParser((v) => {\n        const n = Number(v);\n        if (!Number.isInteger(n) || n <= 0) {\n          throw new Error('Chunk size must be a positive integer');\n        }\n        return n;\n      })\n      .default(512 * 1024, '512*1024')\n  )\n\n  // verbosity (repeatable)\n  .addOption(\n    new Option('-v, --verbose', 'increase verbosity (use multiple times)')\n      .default(0)\n      .argParser((_, previous) => {\n        // previous is typed as unknown, so cast to number\n        return (previous as number) + 1;\n      })\n  );\n\n\nprocess.on('uncaughtException', err => {\n  if (err instanceof Error) {\n    const name = err.constructor.name;\n    const msg = err.message;\n    stderr.write(`Error [${name}]: ${msg}\\n`);\n  } else {\n    stderr.write(`Error [Unknown]: ${String(err)}\\n`);\n  }\n  processExit(1);\n});\n\nprocess.on('unhandledRejection', (err: unknown) => {\n  if (err instanceof Error) {\n    const name = err.constructor.name;\n    const msg = err.message;\n    stderr.write(`Error [${name}]: ${msg}\\n`);\n  } else {\n    stderr.write(`Error [Unknown]: ${String(err)}\\n`);\n  }\n  processExit(1);\n});\n\n\n/* ------------------------------------------------------------------ */\n/*  Decode command (stream-safe)                                       */\n/* ------------------------------------------------------------------ */\n;\nimport { promises as fsp } from 'fs';\nimport * as os   from 'os';\nimport * as path from 'path';\n\nprogram\n  .command('decode [src]')\n  .description(\n    'Show Cryptit header information plus payload details; omit arg or use - to read from STDIN',\n  )\n  .action(async (src?: string) => {\n    const useStdin = !src || src === '-';\n\n    /* -------------------------------------------------------------- */\n    /*  Helpers                                                       */\n    /* -------------------------------------------------------------- */\n\n    /** Inspect an in-memory buffer or Base-64 string */\n    async function decodeBinary(buf: Uint8Array): Promise<Record<string, unknown>> {\n      if (buf.length < 2) throw new Error('Input too short for header');\n\n      const headSlice  = buf.subarray(0, Math.min(256, buf.length));\n      const headerMeta = await Cryptit.headerDecode(headSlice);\n\n      const dataMeta   = await Cryptit.decodeData(buf);\n\n      if (dataMeta.isChunked) {\n        const { chunkSize, count, totalPayload } = dataMeta.chunks;\n        return {\n          ...headerMeta,\n          isChunked: true,\n          chunks: { chunkSize, count, totalPayload },\n        };\n      }\n\n      const ivB64  = Buffer.from(dataMeta.params.iv).toString('base64');\n      const tagB64 = Buffer.from(dataMeta.params.tag).toString('base64');\n      return {\n        ...headerMeta,\n        isChunked: false,\n        payloadLength: dataMeta.payloadLength,\n        params: { iv: ivB64, ivLength: dataMeta.params.ivLength, tag: tagB64, tagLength: dataMeta.params.tagLength },\n      };\n    }\n\n    /** Decode via random-access source (file or temp file) */\n    async function decodeFromSource(src: FileByteSource): Promise<Record<string, unknown>> {\n      const head        = await src.read(0, Math.min(256, src.length));\n      const headerMeta  = await Cryptit.headerDecode(head);\n      const dataMeta    = await Cryptit.decodeData(src);\n\n      if (dataMeta.isChunked) {\n        const { chunkSize, count, totalPayload } = dataMeta.chunks;\n        return {\n          ...headerMeta,\n          isChunked: true,\n          chunks: { chunkSize, count, totalPayload },\n        };\n      }\n\n      const ivB64  = Buffer.from(dataMeta.params.iv).toString('base64');\n      const tagB64 = Buffer.from(dataMeta.params.tag).toString('base64');\n      return {\n        ...headerMeta,\n        isChunked: false,\n        payloadLength: dataMeta.payloadLength,\n        params: { iv: ivB64, tag: tagB64 },\n      };\n    }\n\n    /** Stream STDIN to a temporary file and return its absolute path */\n    async function stdinToTempFile(): Promise<string> {\n      // Default 1 GiB limit; allow override via env (bytes)\n      const envLimit = Number(process.env.CRYPTIT_STDIN_MAX_BYTES);\n      const MAX_BYTES = Number.isFinite(envLimit) && envLimit > 0\n        ? Math.floor(envLimit)\n        : 10_073_741_824; // 10 GiB\n\n      const dir     = await fsp.mkdtemp(path.join(os.tmpdir(), 'cryptit-'));\n      const tmpPath = path.join(dir, 'stdin.bin');\n      const out     = createWriteStream(tmpPath, { flags: 'w' });\n\n      let written = 0;\n\n      try {\n        for await (const chunk of process.stdin) {\n          const buf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk as any);\n          written += buf.length;\n\n          if (written > MAX_BYTES) {\n            // Stop writing, remove partial file/dir, and error out\n            out.destroy();\n            await fsp.rm(dir, { recursive: true, force: true }).catch(() => {});\n            throw new FilesystemError(\n              `STDIN exceeds maximum allowed size (${MAX_BYTES} bytes). Aborting.`\n            );\n          }\n\n          if (!out.write(buf)) {\n            await new Promise<void>(resolve => out.once('drain', resolve));\n          }\n        }\n\n        await new Promise<void>((resolve, reject) => {\n          out.end(() => resolve());\n          out.on('error', reject);\n        });\n\n        return tmpPath;\n      } catch (err) {\n        // Best-effort cleanup on any failure\n        out.destroy();\n        await fsp.rm(dir, { recursive: true, force: true }).catch(() => {});\n        throw err;\n      }\n    }\n\n    /* -------------------------------------------------------------- */\n    /*  File-path input (streamed)                                     */\n    /* -------------------------------------------------------------- */\n    if (!useStdin && src) {\n      const fileSrc = await FileByteSource.open(src);\n      try {\n        const meta = await decodeFromSource(fileSrc);\n        stdout.write(JSON.stringify(meta, null, 2) + '\\n');\n      } finally {\n        await fileSrc.close();\n      }\n      return;\n    }\n\n    /* -------------------------------------------------------------- */\n    /*  STDIN input (stream-to-temp, then decode)                      */\n    /* -------------------------------------------------------------- */\n    if (useStdin) {\n      const tmpPath = await stdinToTempFile();\n      const fileSrc = await FileByteSource.open(tmpPath);\n\n      try {\n        /* Attempt to parse as raw Cryptit binary first */\n        try {\n          const meta = await decodeFromSource(fileSrc);\n          stdout.write(JSON.stringify(meta, null, 2) + '\\n');\n          return;\n        } catch {\n          /* fall through – maybe it’s Base-64 text */\n        }\n      } finally {\n        await fileSrc.close();\n      }\n\n      /* Reload temp file as UTF-8 text and attempt Base-64 path */\n      const text = (await fsp.readFile(tmpPath, { encoding: 'utf8' })).trim();\n      await fsp.unlink(tmpPath);\n\n      const isB64 = /^[A-Za-z0-9+/]+={0,2}$/.test(text) && text.length % 4 === 0;\n      if (!isB64) {\n        stderr.write('Error: Input neither valid Cryptit binary nor Base-64 text\\n');\n        processExit(1);\n      }\n\n      const data = Buffer.from(text, 'base64');\n      const meta = await decodeBinary(new Uint8Array(data));\n      stdout.write(JSON.stringify(meta, null, 2) + '\\n');\n      return;\n    }\n\n    /* -------------------------------------------------------------- */\n    /*  Literal string argument (Base-64 or raw binary)                */\n    /* -------------------------------------------------------------- */\n    const buf   = Buffer.from(src!, 'utf8');\n    const text  = buf.toString('utf8').trim();\n    const isB64 = /^[A-Za-z0-9+/]+={0,2}$/.test(text) && text.length % 4 === 0;\n\n    try {\n      if (isB64) {\n        const data = Buffer.from(text, 'base64');\n        const meta = await decodeBinary(new Uint8Array(data));\n        stdout.write(JSON.stringify(meta, null, 2) + '\\n');\n      } else {\n        const meta = await decodeBinary(new Uint8Array(buf));\n        stdout.write(JSON.stringify(meta, null, 2) + '\\n');\n      }\n    } catch (err) {\n      const msg = err instanceof Error ? err.message : String(err);\n      stderr.write(`Error: ${msg}\\n`);\n      processExit(1);\n    }\n  });\n\nprogram\n  .command('encrypt <src>')\n  .description('Encrypt file; use - for STDIN, --out - for STDOUT')\n  .option('-o, --out <file>', 'output file (default STDOUT)', '-')\n  .action(async (src, cmd) => {\n    if (src !== '-' && !existsSync(src)) {\n      stderr.write(`Error: input file not found: ${src}\\n`);\n      processExit(1);\n    }\n    const opts = program.opts();\n    const crypt = createCryptit({\n      difficulty: opts.difficulty,\n      saltStrength: opts.saltStrength,\n      chunkSize: opts.chunkSize,\n      verbose: opts.verbose,\n      scheme: opts.scheme,\n    });\n    const pass =\n      opts.pass ??\n      (stdin.isTTY ? await promptPass() : (() => {\n        stderr.write('Use --pass when piping via STDIN\\n');\n        processExit(1);\n      })());\n    \n\n    try {\n      assertWritable(cmd.out);\n    } catch (err: any) {\n      stderr.write(`Error: ${err.message}\\n`);\n      processExit(1);\n    }\n\n    const inStream  = src  === '-' ? stdin  : createReadStream(src);\n    const outStream = cmd.out === '-' ? stdout : createWriteStream(cmd.out);\n\n    const { header, writable, readable } = await crypt.createEncryptionStream(pass);\n    const webIn  = toWebReadable(inStream);\n    const webOut = toWebWritable(outStream);\n\n    // 1) Write header\n    const w = webOut.getWriter();\n    await w.write(header);\n    w.releaseLock();\n\n    // 2) Pipe the rest\n    await Promise.all([\n      webIn.pipeTo(writable),\n      readable.pipeTo(webOut),\n    ]);\n  });\n\nprogram\n  .command('decrypt <src>')\n  .description('Decrypt file; use - for STDIN, --out - for STDOUT')\n  .option('-o, --out <file>', 'output file (default STDOUT)', '-')\n  .action(async (src, cmd) => {\n    \n    if (src !== '-' && !existsSync(src)) {\n      stderr.write(`Error: input file not found: ${src}\\n`);\n      processExit(1);\n    }\n\n    const opts = program.opts();\n    const crypt = createCryptit({\n      difficulty: opts.difficulty,\n      saltStrength: opts.saltStrength,\n      chunkSize: opts.chunkSize,\n      verbose: opts.verbose,\n      scheme: opts.scheme,\n    });\n\n    try {\n      assertWritable(cmd.out);\n    } catch (err: any) {\n      stderr.write(`Error: ${err.message}\\n`);\n      processExit(1);\n    }\n\n\n    const pass = opts.pass ?? await promptPass();\n    const inStream  = src  === '-' ? stdin  : createReadStream(src);\n    const outStream = cmd.out === '-' ? stdout : createWriteStream(cmd.out);\n\n    const webIn  = toWebReadable(inStream);\n    const webOut = toWebWritable(outStream);\n    const ts     = await crypt.createDecryptionStream(pass);\n\n    await Promise.all([\n      webIn.pipeTo(ts.writable),\n      ts.readable.pipeTo(webOut),\n    ]);\n  });\n\nprogram\n  .command('encrypt-text [text]')\n  .description('Encrypt plaintext; omit arg to read from STDIN')\n  .action(async (text) => {\n    const opts  = program.opts();\n    const crypt = createCryptit({\n      difficulty: opts.difficulty,\n      saltStrength: opts.saltStrength,\n      verbose: opts.verbose,\n      scheme: opts.scheme,\n    });\n    const pass =\n      opts.pass ??\n      (stdin.isTTY ? await promptPass() : (() => {\n        stderr.write('Use --pass when piping via STDIN\\n');\n        processExit(1);\n      })());\n    const plain = text ?? (await readAllFromStdin());\n    const cipher = await crypt.encryptText(plain, pass);\n    stdout.write(cipher.base64 + '\\n');\n  });\n\nprogram\n  .command('decrypt-text [b64]')\n  .description('Decrypt Base64 ciphertext; omit arg to read from STDIN')\n  .action(async (b64) => {\n    const opts  = program.opts();\n    const crypt = createCryptit({\n      difficulty: opts.difficulty,\n      saltStrength: opts.saltStrength,\n      verbose: opts.verbose,\n      scheme: opts.scheme,\n    });\n    const pass = opts.pass ?? await promptPass();\n    const data = b64 ?? (await readAllFromStdin()).trim();\n    if (!/^[A-Za-z0-9+/]+={0,2}$/.test(data)) {\n      stderr.write('Error: ciphertext does not look like Base64\\n');\n      processExit(1);\n    }\n    const plain = await crypt.decryptText(data, pass);\n    stdout.write(plain.text + '\\n');\n  });\n\nprogram.parse();",
    "/* ------------------------------------------------------------------\n   Centralised error hierarchy - keeps stack traces out of user-space\n   ------------------------------------------------------------------ */\n\nexport class CryptitError extends Error {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);   // fix instanceof\n    this.name  = new.target.name;\n    this.stack = undefined;                              // no stack traces\n  }\n}\n\nexport class InvalidHeaderError   extends CryptitError {}\nexport class DecodingError        extends CryptitError {}\nexport class EncodingError        extends CryptitError {}\nexport class SchemeError          extends CryptitError {}\nexport class HeaderDecodeError    extends CryptitError {}\nexport class KeyDerivationError   extends CryptitError {}\nexport class EncryptionError      extends CryptitError {}\nexport class DecryptionError      extends CryptitError {}\nexport class FilesystemError      extends CryptitError {}",
    "import { EncodingError, DecodingError } from \"../errors/index.js\";\n\n/**\n * Tiny run-time test - are we really in Node/Bun\n */\nfunction isNodeLike(): boolean {\n  return (\n    typeof process !== 'undefined' &&\n    typeof process.versions === 'object' &&\n    // `browserify` & friends set `process.browser = true`\n    (process as any).browser !== true\n  );\n}\n\n/* ------------------------------------------------------------------ */\n\nexport function concat(...chunks: Uint8Array[]): Uint8Array {\n  const total = chunks.reduce((n, c) => n + c.byteLength, 0);\n  const out   = new Uint8Array(total);\n  let offset  = 0;\n  for (const c of chunks) {\n    out.set(c, offset);\n    offset += c.byteLength;\n  }\n  return out;\n}\n\n/* ----------  Base64 encode  --------------------------------------- */\nexport function base64Encode(...chunks: Uint8Array[]): string {\n  try {\n    const data = concat(...chunks);\n\n    if (isNodeLike()) {\n      // genuine Node / Bun\n      return (Buffer as any).from(data).toString('base64');\n    }\n\n    // Browser (skip any injected Buffer polyfill)\n    let binary = '';\n    for (let i = 0; i < data.length; i++) binary += String.fromCharCode(data[i]);\n    return btoa(binary);\n  } catch {\n    const msg = \"Base64 Encoding Error\";\n    throw new EncodingError(msg);\n  }\n  \n}\n\n/* ----------  Base64 decode  --------------------------------------- */\nexport function base64Decode(b64: string): Uint8Array {\n  try {\n    if (!/^[A-Za-z0-9+/]+={0,2}$/.test(b64) || b64.length % 4 !== 0) {\n      throw new Error('Invalid Base64');\n    }\n    \n    if (isNodeLike()) {\n      return new Uint8Array((Buffer as any).from(b64, 'base64'));\n    }\n\n    const bin = atob(b64);\n    const out = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; i++) out[i] = bin.charCodeAt(i);\n    return out;\n  } catch {\n      throw new DecodingError(\n      `Invalid Base64: length=${b64.length}, content='${b64.slice(0,12)}…'`,\n    );\n  }  \n}\n\nexport function zeroizeString(ref: { value: string }): void {\n  /* Overwrite the existing string reference before GC kicks in */\n  const len  = ref.value.length;\n  const fill = new Array(len).fill('\\0').join('');\n  (ref as any).value = fill;            // in -place overwrite\n}",
    "export function assertSliceBounds(\n  total: number,\n  offset: number,\n  len: number,\n): void {\n  if (offset < 0 || len < 0 || offset + len > total) {\n    throw new RangeError('read() slice exceeds data bounds');\n  }\n}",
    "// packages/core/src/util/ByteSource.ts\nimport { base64Decode } from './bytes.js';\nimport { assertSliceBounds } from './range.js';\n\n/**\n * Unified, zero -copy accessor for Blob | Uint8Array | Base64 -encoded string.\n * Slices are read on -demand so even multi -gigabyte Blobs are handled\n * without loading them fully into memory.\n */\nexport class ByteSource {\n  #buf: Uint8Array | null = null;\n\n  constructor(private readonly src: Blob | Uint8Array | string) {}\n\n  /** Total byte length of the underlying data */\n  get length(): number {\n    if (this.src instanceof Uint8Array) return this.src.byteLength;\n    if (this.src instanceof Blob)      return this.src.size;\n    /* string (Base64) */\n    return this.ensureUint8().byteLength;\n  }\n\n  /**\n   * Read a slice *[offset, offset + len)* as Uint8Array.\n   * The returned view is a fresh copy — safe to mutate by caller.\n   */\n  async read(offset: number, len: number): Promise<Uint8Array> {\n    assertSliceBounds(this.length, offset, len);\n\n    // Uint8Array path - cheapest\n    if (this.src instanceof Uint8Array) {\n      return this.src.slice(offset, offset + len);\n    }\n\n    // Blob path - use slice() + arrayBuffer()\n    if (this.src instanceof Blob) {\n      const buf = await this.src.slice(offset, offset + len).arrayBuffer();\n      return new Uint8Array(buf);\n    }\n\n    // Base64 text path - decode once then reuse\n    return this.ensureUint8().slice(offset, offset + len);\n  }\n\n  /* ------------------------------------------------------------------ */\n  /*  Internals                                                          */\n  /* ------------------------------------------------------------------ */\n\n  /** lazily decode Base64 text into a Uint8Array (once) */\n  private ensureUint8(): Uint8Array {\n    if (!this.#buf) {\n      this.#buf = base64Decode(this.src as string);\n    }\n    return this.#buf;\n  }\n}\n\n// packages/core/src/util/bytes.ts\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { promises as fs } from 'fs';\n\n/* -------------------------------------------------- */\n/*  Generic random-access reader interface            */\n/* -------------------------------------------------- */\nexport interface RandomAccessSource {\n  /** total length in bytes */\n  readonly length: number;\n\n  /**\n   * return a copy of bytes `[offset, offset + len)`\n   * throws if the range is out of bounds\n   */\n  read(offset: number, len: number): Promise<Uint8Array>;\n}\n\n/* -------------------------------------------------- */\n/*  File-backed implementation (streams on-demand)    */\n/* -------------------------------------------------- */\nexport class FileByteSource implements RandomAccessSource {\n  private constructor(\n    private readonly fd: fs.FileHandle,\n    public readonly length: number,\n  ) {}\n\n  static async open(path: string): Promise<FileByteSource> {\n    const fd   = await fs.open(path, 'r');\n    const stat = await fd.stat();\n    return new FileByteSource(fd, stat.size);\n  }\n\n  async read(offset: number, len: number): Promise<Uint8Array> {\n    assertSliceBounds(this.length, offset, len);\n    const buf = Buffer.allocUnsafe(len);\n    await this.fd.read(buf, 0, len, offset);\n    return new Uint8Array(buf);\n  }\n\n  /** always call after finishing */\n  async close(): Promise<void> {\n    await this.fd.close();\n  }\n}",
    "// packages/core/src/config/SchemeRegistry.ts\nimport { SchemeDescriptor } from \"../types/index.js\";\nimport { SchemeError } from \"../errors/index.js\";\n\nexport class SchemeRegistry {\n  private static readonly byId = new Map<number, SchemeDescriptor>();\n\n  static register(s: SchemeDescriptor): void {\n    if (this.byId.has(s.id)) throw new SchemeError(`Scheme ${s.id} already registered`);\n    this.byId.set(s.id, s);\n  }\n  static get(id: number): SchemeDescriptor {\n    const v = this.byId.get(id);\n    if (!v) throw new SchemeError(`Unknown scheme: ${id}`);\n    return v;\n  }\n  // default current scheme\n  static get current(): SchemeDescriptor { return this.get(0); }\n}",
    "// packages/core/src/algorithms/encryption/aes-gcm/AESGCM.ts\nimport { CryptoProvider }      from '../../../providers/CryptoProvider.js';\nimport { EncryptionAlgorithm } from '../../../types/index.js';\nimport { DecryptionError }     from '../../../errors/index.js';\n\nexport class AESGCM implements EncryptionAlgorithm {\n  public static readonly IV_LENGTH: number = 12;\n  public static readonly TAG_LENGTH: number = 16;\n  public readonly IV_LENGTH = AESGCM.IV_LENGTH;\n  public readonly TAG_LENGTH = AESGCM.TAG_LENGTH;\n\n  private key!: CryptoKey | null;\n  private aad: Uint8Array = new Uint8Array(0);\n\n  constructor(private readonly p: CryptoProvider) {}\n\n  public async setKey(k: CryptoKey) { this.key = k; }\n\n  public async encryptChunk(plain: Uint8Array): Promise<Uint8Array> {\n\n    const iv = this.p.getRandomValues(new Uint8Array(AESGCM.IV_LENGTH));\n\n    const params: AesGcmParams = this.aad.length\n      ? { name: 'AES-GCM', iv: iv as BufferSource, additionalData: this.aad as BufferSource }\n      : { name: 'AES-GCM', iv: iv as BufferSource };\n\n    const cipherBuf = await this.p.subtle.encrypt(params, this.requireKey(), plain as BufferSource);\n    const cipher = new Uint8Array(cipherBuf);\n\n    // Zero plaintext after use\n    plain.fill(0);\n\n    // [iv | ciphertext+tag]\n    const out = new Uint8Array(iv.length + cipher.length);\n    out.set(iv, 0);\n    out.set(cipher, iv.length);\n    return out;\n  }\n\n  public async decryptChunk(data: Uint8Array): Promise<Uint8Array> {\n    const iv     = data.slice(0, AESGCM.IV_LENGTH);\n    const cipher = data.slice(AESGCM.IV_LENGTH);\n\n    const params: AesGcmParams = this.aad.length\n      ? { name: 'AES-GCM', iv: iv as BufferSource, additionalData: this.aad as BufferSource }\n      : { name: 'AES-GCM', iv: iv as BufferSource};\n\n    try {\n      const plain = await this.p.subtle.decrypt(params, this.requireKey(), cipher as BufferSource);\n      return new Uint8Array(plain);\n    } catch {\n      throw new DecryptionError(\n        'Decryption failed: wrong passphrase or corrupted ciphertext',\n      );\n    }\n  }\n\n  public zeroKey() {\n    this.key = null;\n  } // Non-extractable CryptoKey\n\n  // Set additional authenticated data\n  public setAAD(aadData: Uint8Array): void {\n    this.aad = aadData && aadData.byteLength\n      ? new Uint8Array(aadData) // copy to avoid caller mutations\n      : new Uint8Array(0);\n  }\n\n  private requireKey(): CryptoKey {\n    if (!this.key) {\n      throw new Error('Encryption key not set');\n    }\n    return this.key;\n  }\n\n}",
    "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is boolean. */\nexport function abool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/**\n * Asserts something is hash\n * TODO: remove\n * @deprecated\n */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// Used in micro\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return BigInt(hex === '' ? '0' : '0x' + hex); // Big Endian\n}\n// Used in ff1\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\n// Used in micro, ff1\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n// TODO: remove\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if (isBytes(data))\n        data = copyBytes(data);\n    else\n        throw new Error('Uint8Array expected, got ' + typeof data);\n    return data;\n}\n/**\n * Checks if two U8A use same underlying buffer and overlaps.\n * This is invalid and can corrupt data.\n */\nexport function overlapBytes(a, b) {\n    return (a.buffer === b.buffer && // best we can do, may fail with an obscure Proxy\n        a.byteOffset < b.byteOffset + b.byteLength && // a starts before b end\n        b.byteOffset < a.byteOffset + a.byteLength // b starts before a end\n    );\n}\n/**\n * If input and output overlap and input starts before output, we will overwrite end of input before\n * we start processing it, so this is not supported for most ciphers (except chacha/salse, which designed with this)\n */\nexport function complexOverlapBytes(input, output) {\n    // This is very cursed. It works somehow, but I'm completely unsure,\n    // reasoning about overlapping aligned windows is very hard.\n    if (overlapBytes(input, output) && input.byteOffset < output.byteOffset)\n        throw new Error('complex overlap of input and output is not supported');\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Compares 2 uint8array-s in kinda constant time. */\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n// TODO: remove\n/** For runtime check if class implements interface. */\nexport class Hash {\n}\n/**\n * Wraps a cipher: validates args, ensures encrypt() can only be called once.\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = (params, constructor) => {\n    function wrappedCipher(key, ...args) {\n        // Validate key\n        abytes(key);\n        // Big-Endian hardware is rare. Just in case someone still decides to run ciphers:\n        if (!isLE)\n            throw new Error('Non little-endian hardware is not yet supported');\n        // Validate nonce if nonceLength is present\n        if (params.nonceLength !== undefined) {\n            const nonce = args[0];\n            if (!nonce)\n                throw new Error('nonce / iv required');\n            if (params.varSizeNonce)\n                abytes(nonce);\n            else\n                abytes(nonce, params.nonceLength);\n        }\n        // Validate AAD if tagLength present\n        const tagl = params.tagLength;\n        if (tagl && args[1] !== undefined) {\n            abytes(args[1]);\n        }\n        const cipher = constructor(key, ...args);\n        const checkOutput = (fnLength, output) => {\n            if (output !== undefined) {\n                if (fnLength !== 2)\n                    throw new Error('cipher output not supported');\n                abytes(output);\n            }\n        };\n        // Create wrapped cipher with validation and single-use encryption\n        let called = false;\n        const wrCipher = {\n            encrypt(data, output) {\n                if (called)\n                    throw new Error('cannot encrypt() twice with same key + nonce');\n                called = true;\n                abytes(data);\n                checkOutput(cipher.encrypt.length, output);\n                return cipher.encrypt(data, output);\n            },\n            decrypt(data, output) {\n                abytes(data);\n                if (tagl && data.length < tagl)\n                    throw new Error('invalid ciphertext length: smaller than tagLength=' + tagl);\n                checkOutput(cipher.decrypt.length, output);\n                return cipher.decrypt(data, output);\n            },\n        };\n        return wrCipher;\n    }\n    Object.assign(wrappedCipher, params);\n    return wrappedCipher;\n};\n/**\n * By default, returns u8a of length.\n * When out is available, it checks it for validity and uses it.\n */\nexport function getOutput(expectedLength, out, onlyAligned = true) {\n    if (out === undefined)\n        return new Uint8Array(expectedLength);\n    if (out.length !== expectedLength)\n        throw new Error('invalid output length, expected ' + expectedLength + ', got: ' + out.length);\n    if (onlyAligned && !isAligned32(out))\n        throw new Error('invalid output, must be aligned');\n    return out;\n}\n/** Polyfill for Safari 14. */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexport function u64Lengths(dataLength, aadLength, isLE) {\n    abool(isLE);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(aadLength), isLE);\n    setBigUint64(view, 8, BigInt(dataLength), isLE);\n    return num;\n}\n// Is byte array aligned to 4 byte offset (u32)?\nexport function isAligned32(bytes) {\n    return bytes.byteOffset % 4 === 0;\n}\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n//# sourceMappingURL=utils.js.map",
    "/**\n * Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\n\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n\n * @module\n */\n// prettier-ignore\nimport { abool, abytes, anumber, checkOpts, clean, copyBytes, u32 } from \"./utils.js\";\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\nexport function rotl(a, b) {\n    return (a << b) | (a >>> (32 - b));\n}\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b) {\n    return b.byteOffset % 4 === 0;\n}\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(core, sigma, key, nonce, data, output, counter, rounds) {\n    const len = data.length;\n    const block = new Uint8Array(BLOCK_LEN);\n    const b32 = u32(block);\n    // Make sure that buffers aligned to 4 bytes\n    const isAligned = isAligned32(data) && isAligned32(output);\n    const d32 = isAligned ? u32(data) : U32_EMPTY;\n    const o32 = isAligned ? u32(output) : U32_EMPTY;\n    for (let pos = 0; pos < len; counter++) {\n        core(sigma, key, nonce, b32, counter, rounds);\n        if (counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        const take = Math.min(BLOCK_LEN, len - pos);\n        // aligned to 4 bytes\n        if (isAligned && take === BLOCK_LEN) {\n            const pos32 = pos / 4;\n            if (pos % 4 !== 0)\n                throw new Error('arx: invalid block position');\n            for (let j = 0, posj; j < BLOCK_LEN32; j++) {\n                posj = pos32 + j;\n                o32[posj] = d32[posj] ^ b32[j];\n            }\n            pos += BLOCK_LEN;\n            continue;\n        }\n        for (let j = 0, posj; j < take; j++) {\n            posj = pos + j;\n            output[posj] = data[posj] ^ block[j];\n        }\n        pos += take;\n    }\n}\n/** Creates ARX-like (ChaCha, Salsa) cipher stream from core function. */\nexport function createCipher(core, opts) {\n    const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, opts);\n    if (typeof core !== 'function')\n        throw new Error('core must be a function');\n    anumber(counterLength);\n    anumber(rounds);\n    abool(counterRight);\n    abool(allowShortKeys);\n    return (key, nonce, data, output, counter = 0) => {\n        abytes(key);\n        abytes(nonce);\n        abytes(data);\n        const len = data.length;\n        if (output === undefined)\n            output = new Uint8Array(len);\n        abytes(output);\n        anumber(counter);\n        if (counter < 0 || counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        if (output.length < len)\n            throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n        const toClean = [];\n        // Key & sigma\n        // key=16 -> sigma16, k=key|key\n        // key=32 -> sigma32, k=key\n        let l = key.length;\n        let k;\n        let sigma;\n        if (l === 32) {\n            toClean.push((k = copyBytes(key)));\n            sigma = sigma32_32;\n        }\n        else if (l === 16 && allowShortKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else {\n            throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n        }\n        // Nonce\n        // salsa20:      8   (8-byte counter)\n        // chacha20orig: 8   (8-byte counter)\n        // chacha20:     12  (4-byte counter)\n        // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n        // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce))\n            toClean.push((nonce = copyBytes(nonce)));\n        const k32 = u32(k);\n        // hsalsa & hchacha: handle extended nonce\n        if (extendNonceFn) {\n            if (nonce.length !== 24)\n                throw new Error(`arx: extended nonce must be 24 bytes`);\n            extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceNcLen = 16 - counterLength;\n        if (nonceNcLen !== nonce.length)\n            throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n        // Pad counter when nonce is 64 bit\n        if (nonceNcLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            nonce = nc;\n            toClean.push(nonce);\n        }\n        const n32 = u32(nonce);\n        runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n        clean(...toClean);\n        return output;\n    };\n}\n//# sourceMappingURL=_arx.js.map",
    "/**\n * Poly1305 ([PDF](https://cr.yp.to/mac/poly1305-20050329.pdf),\n * [wiki](https://en.wikipedia.org/wiki/Poly1305))\n * is a fast and parallel secret-key message-authentication code suitable for\n * a wide variety of applications. It was standardized in\n * [RFC 8439](https://datatracker.ietf.org/doc/html/rfc8439) and is now used in TLS 1.3.\n *\n * Polynomial MACs are not perfect for every situation:\n * they lack Random Key Robustness: the MAC can be forged, and can't be used in PAKE schemes.\n * See [invisible salamanders attack](https://keymaterial.net/2020/09/07/invisible-salamanders-in-aes-gcm-siv/).\n * To combat invisible salamanders, `hash(key)` can be included in ciphertext,\n * however, this would violate ciphertext indistinguishability:\n * an attacker would know which key was used - so `HKDF(key, i)`\n * could be used instead.\n *\n * Check out [original website](https://cr.yp.to/mac.html).\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, toBytes } from \"./utils.js\";\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a, i) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 {\n    constructor(key) {\n        this.blockLen = 16;\n        this.outputLen = 16;\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.pos = 0;\n        this.finished = false;\n        key = toBytes(key);\n        abytes(key, 32);\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        let h0 = h[0] + (t0 & 0x1fff);\n        let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        let h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n        clean(g);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        clean(this.h, this.r, this.buffer, this.pad);\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nexport function wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(32));\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\n/** Poly1305 MAC from RFC 8439. */\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n//# sourceMappingURL=_poly1305.js.map",
    "/**\n * [ChaCha20](https://cr.yp.to/chacha.html) stream cipher, released\n * in 2008. Developed after Salsa20, ChaCha aims to increase diffusion per round.\n * It was standardized in [RFC 8439](https://datatracker.ietf.org/doc/html/rfc8439) and\n * is now used in TLS 1.3.\n *\n * [XChaCha20](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha)\n * extended-nonce variant is also provided. Similar to XSalsa, it's safe to use with\n * randomly-generated nonces.\n *\n * Check out [PDF](http://cr.yp.to/chacha/chacha-20080128.pdf) and\n * [wiki](https://en.wikipedia.org/wiki/Salsa20).\n * @module\n */\nimport { createCipher, rotl } from \"./_arx.js\";\nimport { poly1305 } from \"./_poly1305.js\";\nimport { clean, equalBytes, getOutput, u64Lengths, wrapCipher, } from \"./utils.js\";\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(s, k, n, out, cnt, rounds = 20) {\n    let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n    y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n    y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let r = 0; r < rounds; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(s, k, i, o32) {\n    let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3], x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3], x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7], x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n    for (let r = 0; r < 20; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    let oi = 0;\n    o32[oi++] = x00;\n    o32[oi++] = x01;\n    o32[oi++] = x02;\n    o32[oi++] = x03;\n    o32[oi++] = x12;\n    o32[oi++] = x13;\n    o32[oi++] = x14;\n    o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    allowShortKeys: false,\n});\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    extendNonceFn: hchacha,\n    allowShortKeys: false,\n});\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 8,\n});\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 12,\n});\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const left = msg.length % 16;\n    if (left)\n        h.update(ZEROS16.subarray(left));\n};\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(fn, key, nonce, data, AAD) {\n    const authKey = fn(key, nonce, ZEROS32);\n    const h = poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, data);\n    const num = u64Lengths(data.length, AAD ? AAD.length : 0, true);\n    h.update(num);\n    const res = h.digest();\n    clean(authKey, num);\n    return res;\n}\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    return {\n        encrypt(plaintext, output) {\n            const plength = plaintext.length;\n            output = getOutput(plength + tagLength, output, false);\n            output.set(plaintext);\n            const oPlain = output.subarray(0, -tagLength);\n            xorStream(key, nonce, oPlain, oPlain, 1);\n            const tag = computeTag(xorStream, key, nonce, oPlain, AAD);\n            output.set(tag, plength); // append tag\n            clean(tag);\n            return output;\n        },\n        decrypt(ciphertext, output) {\n            output = getOutput(ciphertext.length - tagLength, output, false);\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!equalBytes(passedTag, tag))\n                throw new Error('invalid tag');\n            output.set(ciphertext.subarray(0, -tagLength));\n            xorStream(key, nonce, output, output, 1); // start stream with i=1\n            clean(tag);\n            return output;\n        },\n    };\n};\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n *\n * Unsafe to use random nonces under the same key, due to collision chance.\n * Prefer XChaCha instead.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 12, tagLength: 16 }, _poly1305_aead(chacha20));\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n *\n * Can be safely used with random nonces (CSPRNG).\n * See [IRTF draft](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 24, tagLength: 16 }, _poly1305_aead(xchacha20));\n//# sourceMappingURL=chacha.js.map",
    "import { xchacha20poly1305 } from '@noble/ciphers/chacha.js';\nimport { CryptoProvider } from '../../../providers/CryptoProvider.js';\nimport { EncryptionAlgorithm } from '../../../types/index.js';\nimport { DecryptionError } from '../../../errors/index.js';\n\nexport class XChaCha20Poly1305 implements EncryptionAlgorithm {\n  public static readonly IV_LENGTH: number = 24;\n  public static readonly TAG_LENGTH: number = 16;\n  public readonly IV_LENGTH = XChaCha20Poly1305.IV_LENGTH;\n  public readonly TAG_LENGTH = XChaCha20Poly1305.TAG_LENGTH;\n\n\n  private key!: Uint8Array;\n  private aad: Uint8Array = new Uint8Array(0);\n\n  constructor(private readonly p: CryptoProvider) {}\n\n  /**\n   * Export the raw key material for use with @noble/ciphers\n   */\n  public async setKey(k: CryptoKey) {\n    this.key = new Uint8Array(await this.p.subtle.exportKey('raw', k));\n  }\n\n  /**\n   * Encrypts a chunk with XChaCha20-Poly1305:\n   * - Generates a 24-byte nonce\n   * - Prepends nonce to ciphertext || tag\n   * - Uses AAD if set (omitted when empty)\n   */\n  public async encryptChunk(plain: Uint8Array): Promise<Uint8Array> {\n    if (!this.key) throw new Error('Key not set');\n\n    const nonce = this.p.getRandomValues(new Uint8Array(XChaCha20Poly1305.IV_LENGTH));\n\n    // Only pass AAD when non-empty (same behavior as AES-GCM fix)\n    const cipher = this.aad.length\n      ? xchacha20poly1305(this.key, nonce, this.aad)\n      : xchacha20poly1305(this.key, nonce);\n\n    const cipherAndTag = cipher.encrypt(plain);\n    plain.fill(0);\n\n    const out = new Uint8Array(nonce.length + cipherAndTag.length);\n    out.set(nonce, 0);\n    out.set(cipherAndTag, nonce.length);\n    return out;\n  }\n\n  /**\n   * Decrypts a chunk with XChaCha20-Poly1305:\n   * - Extracts nonce (first 24 bytes)\n   * - Decrypts ciphertext || tag\n   * - Uses the same AAD rule (omit when empty)\n   * - Throws on authentication failure\n   */\n  public async decryptChunk(data: Uint8Array): Promise<Uint8Array> {\n    if (!this.key) throw new Error('Key not set');\n    if (data.byteLength < XChaCha20Poly1305.IV_LENGTH + 16 /* tag */) {\n      throw new DecryptionError('Invalid ciphertext: too short.');\n    }\n\n    const nonce = data.slice(0, XChaCha20Poly1305.IV_LENGTH);\n    const cipherAndTag = data.slice(XChaCha20Poly1305.IV_LENGTH);\n\n    const cipher = this.aad.length\n      ? xchacha20poly1305(this.key, nonce, this.aad)\n      : xchacha20poly1305(this.key, nonce);\n\n    try {\n      return cipher.decrypt(cipherAndTag);\n    } catch {\n      throw new DecryptionError(\n        'Decryption failed: wrong passphrase or corrupted ciphertext'\n      );\n    }\n  }\n\n  public zeroKey(): void {\n    if (this.key) this.key.fill(0);\n  }\n\n  // Set additional authenticated data\n  public setAAD(aadData: Uint8Array): void {\n    this.aad = aadData && aadData.byteLength\n      ? new Uint8Array(aadData) // copy to avoid caller mutations\n      : new Uint8Array(0);\n  }\n}",
    "// packages/core/src/algorithms/argon2.ts\n/**\n * Environment-agnostic Argon2-id wrapper.\n *  • Node / Bun  → native `argon2` addon (fastest)\n *  • Browser     → antelle/argon2-browser (WASM)\n */\n\nimport * as Argon2Browser from 'argon2-browser';\n\nimport { KeyDerivationError } from '../../errors/index.js';\n\n/** Minimal subset of tuning parameters we expose */\nexport interface Argon2Tuning {\n  time: number; // iterations\n  mem: number; // kibibytes\n  parallelism: number; // lanes\n}\n\nexport type ArgonHash = { hash: Uint8Array };\n\ntype Argon2HashResult = {\n  // raw bytes of the derived key\n  hash: Uint8Array;\n  // hex-encoded string of the derived key\n  hashHex: string;\n  // the full Argon2 encoded string (salt, params, hash)\n  encoded: string;\n};\n\n// needed for crossover tests\nasync function ensureArgon2ModuleHook(): Promise<void> {\n  // Only needed in non-browser test runners (Node/Bun). In real browsers we let the default work.\n  if (typeof window !== 'undefined') return;\n\n  if ((globalThis as any).loadArgon2WasmModule) return;\n\n  try {\n    const { createRequire } = await import('node:module');\n    const { readFile }      = await import('node:fs/promises');\n    const require           = createRequire(import.meta.url);\n\n    const jsPath   = require.resolve('argon2-browser/dist/argon2.js');\n    const wasmPath = require.resolve('argon2-browser/dist/argon2.wasm');\n\n    (globalThis as any).loadArgon2WasmModule = async () => {\n\n      const wasmBinary = new Uint8Array(await readFile(wasmPath));\n\n    \n      (globalThis as any).Module = {\n        wasmBinary,\n        // Also provide locateFile as a fallback for any internal lookups\n        locateFile: (p: string) =>\n          p === 'argon2.wasm' ? wasmPath : p,\n      };\n        return require(jsPath);\n    \n    };\n  } catch {\n  }\n}\n\n/**\n * Derive a 32-byte hash with Argon2-id.\n *\n * @param password   UTF-8 string or raw bytes\n * @param salt       random salt\n * @param opts       memory/time/parallelism\n * @param env        'node' (incl. Bun) or 'browser'\n */\nexport async function argon2id(\n  password: Uint8Array | string,\n  salt: Uint8Array,\n  opts: Argon2Tuning,\n  env: 'node' | 'browser'\n): Promise<ArgonHash> {\n  // ————————————————————————————  Node / Bun  ————————————————————————————\n  if (env === 'node') {\n    const argon2 = await import('argon2');\n    const pwdBuf = typeof password === 'string' ? Buffer.from(password, 'utf8') : Buffer.from(password);\n\n    const saltBuf = Buffer.from(salt);\n\n    const raw: Buffer = await argon2.hash(pwdBuf, {\n      salt: saltBuf,\n      timeCost: opts.time,\n      memoryCost: opts.mem,\n      parallelism: opts.parallelism,\n      hashLength: 32,\n      raw: true,\n      type: argon2.argon2id,\n    });\n    \n    saltBuf.fill(0);\n    pwdBuf.fill(0);\n\n    return { hash: new Uint8Array(raw) };\n  }\n\n  // ————————————————————————————  Browser  ————————————————————————————\n  if (env === 'browser') {\n    await ensureArgon2ModuleHook();\n\n    return Argon2Browser.hash({\n      pass: password,\n      salt: salt,\n      time: opts.time,\n      mem: opts.mem,\n      parallelism: opts.parallelism,\n      hashLen: 32,\n      type: Argon2Browser.ArgonType.Argon2id,\n    })\n      .then((result: Argon2HashResult) => {\n        if (!result || !result.hash) {\n          throw new KeyDerivationError('Failed to produce key derivation');\n        }\n        return { hash: result.hash };\n      })\n      .catch((error: unknown) => {\n        // Narrow the error to extract a message\n        const message = error instanceof Error ? error.message : typeof error === 'string' ? error : 'Unknown error';\n\n        throw new KeyDerivationError(`argon2-browser failure: ${message}`);\n      });\n  }\n\n  throw new Error(`Unsupported environment: ${env}`);\n}\n",
    "// packages/core/src/algorithms/kdf/Argon2.ts\nimport type { KeyDerivation } from '../../types/index.js';\nimport { argon2id, type Argon2Tuning } from './argon2-wrapper.js';\nimport type { CryptoProvider } from '../../providers/CryptoProvider.js';\n\n/**\n * Argon2-id Key-Derivation Function\n */\nexport class Argon2KDF implements KeyDerivation<'low' | 'middle' | 'high'> {\n  readonly name = 'argon2id';\n\n  constructor(\n    private readonly presets: Readonly<Record<'low' | 'middle' | 'high', Argon2Tuning>>,\n    private exportExtractable: boolean = false\n  ) {}\n\n  async derive(\n    passphrase: Uint8Array | string,\n    salt: Uint8Array,\n    difficulty: 'low' | 'middle' | 'high',\n    provider: CryptoProvider,\n  ): Promise<CryptoKey> {\n    const { hash } = await argon2id(\n      passphrase,\n      salt,\n      this.presets[difficulty],\n      provider.isNode ? 'node' : 'browser'\n    );\n    if (this.exportExtractable) {\n      return provider.subtle.importKey(\n        'raw',\n        hash as BufferSource,\n        { name: 'AES-GCM', length: 256 },\n        true,\n        ['encrypt', 'decrypt']\n      );\n    } else {\n      return provider.subtle.importKey(\n        'raw',\n        hash as BufferSource,\n        { name: 'AES-GCM', length: 256 },\n        false,\n        ['encrypt', 'decrypt']\n      );\n    }\n  }\n}",
    "import { SchemeRegistry } from './SchemeRegistry.js';\nimport { AESGCM } from '../algorithms/encryption/aes-gcm/AESGCM.js';\nimport { XChaCha20Poly1305 } from '../algorithms/encryption/xchacha20poly1305/XChaCha20-Poly1305.js';\nimport { Argon2KDF } from '../algorithms/kdf/Argon2.js';\nimport { SchemeDescriptor } from '../types/index.js';\n\nexport const DEFAULT_DIFFICULTIES = {\n  low   : { time:  5, mem:  64 * 1024, parallelism: 1 },\n  middle: { time: 20, mem:  64 * 1024, parallelism: 1 },\n  high  : { time: 40, mem:  64 * 1024, parallelism: 1 },\n} as const;\n\nconst v0: SchemeDescriptor = {\n  id: 0,\n  cipher: AESGCM,\n  kdf: new Argon2KDF(DEFAULT_DIFFICULTIES),\n  saltLengths: { low: 12, high: 16 },\n  difficulties: DEFAULT_DIFFICULTIES,\n  defaultChunkSize: 512 * 1024,\n};\n\nSchemeRegistry.register(v0);\n\nexport const VERSION_1_DIFFICULTIES = {\n  low   : { time:  5, mem:  64 * 1024, parallelism: 2 }, //Browser has no parallelism effect\n  middle: { time: 10, mem:  96 * 1024, parallelism: 4 }, //Browser has no parallelism effect\n  high  : { time: 20, mem:  96 * 1024, parallelism: 4 }, //Browser has no parallelism effect\n} as const;\n\nconst v1: SchemeDescriptor = {\n  id: 1,\n  cipher: XChaCha20Poly1305,\n  kdf: new Argon2KDF(VERSION_1_DIFFICULTIES, true),\n  saltLengths: { low: 12, high: 16 },\n  difficulties: VERSION_1_DIFFICULTIES,\n  defaultChunkSize: 512 * 1024,\n};\n\nSchemeRegistry.register(v1);\n\nexport type SaltStrength = 'low' | 'high';\nexport type Difficulty = keyof typeof DEFAULT_DIFFICULTIES;",
    "// packages/core/src/header/constants.ts\nexport const HEADER_START_BYTE = 0x01;          // magic",
    "// packages/core/src/header/encoder.ts\nimport { HEADER_START_BYTE } from './constants.js';\nimport { concat } from '../util/bytes.js';\nimport { EncryptionAlgorithm } from '../types/index.js';\n\nexport function encodeHeader(\n  scheme: number,\n  difficulty: 'low' | 'middle' | 'high',\n  saltStrength: 'low' | 'high',\n  salt: Uint8Array,\n  cipher?: EncryptionAlgorithm,\n): Uint8Array {\n  const diffMap = { low: 0, middle: 1, high: 2 } as const;\n  if (!(difficulty in diffMap))\n    throw new TypeError(`Unsupported difficulty: ${difficulty}`);\n\n  const diffCode = diffMap[difficulty];\n  const infoByte =\n    (scheme << 5) |\n    ((saltStrength === 'high' ? 1 : 0) << 2) |\n    diffCode;\n\n  const header = concat(new Uint8Array([HEADER_START_BYTE, infoByte]), salt);\n\n  // Make the *raw header bytes* the AAD for this message.\n  if (cipher) cipher.setAAD(header);\n\n  return header;\n}",
    "// packages/core/src/header/decoder.ts\nimport { HEADER_START_BYTE } from './constants.js';\nimport { SchemeRegistry }   from '../config/SchemeRegistry.js';\nimport { InvalidHeaderError, HeaderDecodeError } from '../errors/index.js';\nimport { EncryptionAlgorithm } from '../types/index.js';\n\nexport function decodeHeader(\n  buf: Uint8Array,\n  cipher?: EncryptionAlgorithm,\n) {\n  if (buf[0] !== HEADER_START_BYTE) {\n    throw new InvalidHeaderError('Invalid input format. The input is unknown.');\n  }\n\n  // Minimum header length guard (start + info + minimum salt len = 2 + 12)\n  if (buf.length < 2 + 12) {\n    throw new InvalidHeaderError('Invalid input format. Header too short.');\n  }\n\n  try {\n    const info          = buf[1];\n    const scheme        = info >> 5;\n    const saltStrength: 'low' | 'high' = ((info >> 2) & 1) ? 'high' : 'low';\n    const diffCode      = info & 0b11;\n    const difficulty    = (['low', 'middle', 'high'] as const)[diffCode];\n    const saltLen       = SchemeRegistry.get(scheme).saltLengths[saltStrength];\n    const headerLen     = 2 + saltLen;\n\n    if (buf.length < headerLen) {\n      throw new InvalidHeaderError('Invalid input format. Header truncated.');\n    }\n\n    // IMPORTANT: set AAD to the *exact* bytes that were (or will be) transmitted as header.\n    if (cipher) cipher.setAAD(buf.subarray(0, headerLen));\n\n    const salt          = buf.slice(2, 2 + saltLen);\n\n    return { scheme, difficulty, saltStrength, salt, headerLen };\n  } catch (err) {\n    throw new HeaderDecodeError(err instanceof Error ? err.message : String(err));\n  }\n}",
    "// packages/core/src/util/convert.ts\nexport async function ensureUint8Array(\n  src: Uint8Array | ArrayBuffer | Blob,\n): Promise<Uint8Array> {\n  if (src instanceof Uint8Array)  return src;\n  if (src instanceof ArrayBuffer) return new Uint8Array(src);\n  return new Uint8Array(await src.arrayBuffer());\n}",
    "// packages/core/src/util/frame.ts\nconst LEN_BYTES = 4 as const;\n\nexport function encodeFrameLen(n: number): Uint8Array {\n  const hdr = new Uint8Array(LEN_BYTES);\n  new DataView(hdr.buffer).setUint32(0, n, false);   // big‑endian\n  return hdr;\n}\n\nexport function decodeFrameLen(buf: Uint8Array, off = 0): number {\n  if (buf.length - off < LEN_BYTES) {\n    throw new RangeError('Not enough bytes for frame header');\n  }\n  return new DataView(buf.buffer, buf.byteOffset + off, LEN_BYTES)\n           .getUint32(0, false);\n}\nexport const FRAME_HEADER_BYTES = LEN_BYTES;",
    "// packages/core/src/stream/EncryptTransform.ts\nimport type { EncryptionAlgorithm } from '../types/index.js';\nimport { ensureUint8Array } from '../util/convert.js';\nimport { encodeFrameLen, FRAME_HEADER_BYTES } from '../util/frame.js';\n\n/**\n * TransformStream that:\n *   • collects plaintext into fixed‐size blocks\n *   • encrypts each block\n *   • emits: [4-byte length ‖ encryptedBlock]\n */\nexport class EncryptTransform {\n  private buffer = new Uint8Array(0);\n\n  constructor(\n    private readonly engine: EncryptionAlgorithm,\n    private readonly chunkSize = 512 * 1024,\n  ) {}\n\n  toTransformStream(): TransformStream<Uint8Array | ArrayBuffer | Blob, Uint8Array> {\n    return new TransformStream({\n      transform: async (chunk, ctl) => {\n        await this.transform(\n          await ensureUint8Array(chunk),\n          ctl,\n        );\n      },\n      flush: async ctl => this.flush(ctl),\n    });\n  }\n\n  private async transform(\n    bytes: Uint8Array,\n    ctl: TransformStreamDefaultController<Uint8Array>,\n  ) {\n    const HARD_LIMIT = 64 * 1024 * 1024; // 64 MiB safety\n    if (bytes.length > Math.min(this.chunkSize * 4, HARD_LIMIT)) {\n      throw new RangeError(\n        `Input block (${bytes.length} B) exceeds maximum allowed ` +\n        `${Math.min(this.chunkSize * 4, HARD_LIMIT)} B`,\n      );\n    }\n    const combined = new Uint8Array(this.buffer.length + bytes.length);\n    combined.set(this.buffer);\n    combined.set(bytes, this.buffer.length);\n\n    let offset = 0;\n    while (combined.length - offset >= this.chunkSize) {\n      const block = combined.slice(offset, offset + this.chunkSize);\n      offset += this.chunkSize;\n\n      const encrypted = await this.engine.encryptChunk(block);\n      const out = new Uint8Array(FRAME_HEADER_BYTES + encrypted.length);\n      out.set(encodeFrameLen(encrypted.length));\n      out.set(encrypted, FRAME_HEADER_BYTES);\n      ctl.enqueue(out);\n    \n    }\n\n    this.buffer = combined.slice(offset);\n  }\n\n  private async flush(ctl: TransformStreamDefaultController<Uint8Array>) {\n    if (!this.buffer.length) return;\n    const encrypted = await this.engine.encryptChunk(this.buffer);\n\n    const out = new Uint8Array(FRAME_HEADER_BYTES + encrypted.length);\n    out.set(encodeFrameLen(encrypted.length));\n    out.set(encrypted, FRAME_HEADER_BYTES);\n    ctl.enqueue(out);\n    \n    this.buffer = new Uint8Array(0);\n\n    this.engine.zeroKey();\n  }\n\n}",
    "// packages/core/src/stream/DecryptTransform.ts\nimport type { EncryptionAlgorithm } from '../types/index.js';\nimport { DecryptionError } from '../errors/index.js';\nimport { ensureUint8Array } from '../util/convert.js';\nimport { decodeFrameLen, FRAME_HEADER_BYTES } from '../util/frame.js';\n\n/**\n * Counterpart to EncryptTransform.\n * Streams framed ciphertext → raw plaintext.\n */\nexport class DecryptTransform {\n  private buffer = new Uint8Array(0);\n\n  constructor(\n    private readonly engine: EncryptionAlgorithm,\n    private readonly chunkSize = 512 * 1024,\n  ) {}\n\n  toTransformStream(): TransformStream<Uint8Array | ArrayBuffer | Blob, Uint8Array> {\n    return new TransformStream({\n      transform: async (chunk, ctl) => {\n        await this.transform(\n          await ensureUint8Array(chunk),\n          ctl,\n        );\n      },\n      flush: async ctl => this.flush(ctl),\n    });\n  }\n\n  private async transform(\n    bytes: Uint8Array,\n    ctl: TransformStreamDefaultController<Uint8Array>,\n  ) {\n    const combined = new Uint8Array(this.buffer.length + bytes.length);\n    combined.set(this.buffer);\n    combined.set(bytes, this.buffer.length);\n\n    let offset = 0;\n    while (true) {\n      if (combined.length - offset < FRAME_HEADER_BYTES) break;\n      const cipherLen = decodeFrameLen(combined, offset);\n      if (cipherLen > this.chunkSize * 2) {\n        throw new DecryptionError(`Frame length ${cipherLen} exceeds …`);\n      }\n      if (combined.length - offset - FRAME_HEADER_BYTES < cipherLen) break;\n      offset += FRAME_HEADER_BYTES;\n      const cipher = combined.slice(offset, offset + cipherLen);\n      offset += cipherLen;\n\n      try {\n        const plain = await this.engine.decryptChunk(cipher);\n        ctl.enqueue(plain);\n      } catch (err) {\n        throw err instanceof DecryptionError\n          ? err\n         : new DecryptionError(\n              'Decryption failed: Wrong passphrase or corrupted ciphertext',\n            );\n      }\n    }\n\n    this.buffer = combined.slice(offset);\n  }\n\n  private async flush(ctl: TransformStreamDefaultController<Uint8Array>) {\n    await this.transform(new Uint8Array(0), ctl);\n    this.buffer = new Uint8Array(0);\n    this.engine.zeroKey();\n  }\n}",
    "export async function collectStream(\n  rs: ReadableStream<Uint8Array>,\n  prefix?: Uint8Array,\n): Promise<Uint8Array> {\n  const reader = rs.getReader();\n  const chunks: Uint8Array[] = prefix && prefix.length ? [prefix] : [];\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) break;\n      chunks.push(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n  const total = chunks.reduce((n, c) => n + c.byteLength, 0);\n  const out   = new Uint8Array(total);\n  let offset  = 0;\n  for (const c of chunks) { out.set(c, offset); offset += c.byteLength; }\n  return out;\n}",
    "// packages/core/src/stream/StreamProcessor.ts\nimport { EncryptTransform } from './EncryptTransform.js';\nimport { DecryptTransform } from './DecryptTransform.js';\nimport type { EncryptionAlgorithm } from '../types/index.js';\nimport { collectStream } from '../util/stream.js';\n\nexport class StreamProcessor {\n  constructor(\n    private readonly engine: EncryptionAlgorithm,\n    private readonly chunkSize = 512 * 1024,\n  ) {}\n\n  encryptionStream(): TransformStream<Uint8Array, Uint8Array> {\n    const enc = new EncryptTransform(this.engine, this.chunkSize)\n                  .toTransformStream();\n    return {\n      writable: enc.writable,\n      readable: enc.readable,\n    } as TransformStream<Uint8Array, Uint8Array>;\n  }\n\n  decryptionStream(headerLen: number): TransformStream<Uint8Array, Uint8Array> {\n    let skip = headerLen;\n    const strip = new TransformStream<Uint8Array, Uint8Array>({\n      transform(chunk, ctl) {\n        if (skip === 0) {\n          ctl.enqueue(chunk);\n          return;\n        }\n        if (chunk.byteLength <= skip) {\n          skip -= chunk.byteLength;\n          return;\n        }\n        ctl.enqueue(chunk.slice(skip));\n        skip = 0;\n      },\n    });\n\n    const decryptTs = new DecryptTransform(this.engine, this.chunkSize)\n                        .toTransformStream();\n\n    return {\n      writable: strip.writable,\n      readable: strip.readable.pipeThrough(decryptTs),\n    } as TransformStream<Uint8Array, Uint8Array>;\n  }\n\n  async collect(\n    readable: ReadableStream<Uint8Array>,\n    transform: TransformStream<Uint8Array, Uint8Array>,\n    prefix: Uint8Array | null = null,\n  ): Promise<Uint8Array> {\n   return collectStream(readable.pipeThrough(transform), prefix ?? undefined);\n  }\n\n  public getEngine() : EncryptionAlgorithm {\n    return this.engine;\n  }\n}",
    "// packages/core/src/util/convertible.ts\nimport { base64Encode } from './bytes.js';\n\nfunction wipe(buf?: Uint8Array | null) {\n  try { if (buf) buf.fill(0); } catch {}\n}\n\nfunction hexEncode(u8: Uint8Array): string {\n  let s = '';\n  for (let i = 0; i < u8.length; i++) {\n    const v = u8[i].toString(16).padStart(2, '0');\n    s += v;\n  }\n  return s;\n}\n\n/**\n * Normalizes user input (string or Uint8Array) to bytes.\n * You can clear() it to securely wipe the underlying memory.\n */\nexport class ConvertibleInput {\n  private bytes: Uint8Array;\n  private destroyed = false;\n\n  static from(input: string | Uint8Array | ConvertibleInput): ConvertibleInput {\n    if (input instanceof ConvertibleInput) return input;\n    if (typeof input === 'string') return new ConvertibleInput(new TextEncoder().encode(input));\n    if (input instanceof Uint8Array) return new ConvertibleInput(input);\n    throw new TypeError('ConvertibleInput: unsupported input type');\n  }\n\n  constructor(bytes: Uint8Array) { this.bytes = bytes; }\n\n  toUint8Array(): Uint8Array {\n    if (this.destroyed) throw new Error('ConvertibleInput: already cleared');\n    return this.bytes;\n  }\n\n  clear(): void {\n    if (!this.destroyed) {\n      wipe(this.bytes);\n      // keep an empty buffer so accidental reuse throws\n      this.bytes = new Uint8Array(0);\n      this.destroyed = true;\n    }\n  }\n}\n\n/**\n * Wraps bytes and exposes multiple views, with secure wiping via clear().\n * String(result) yields Base64 for convenience.\n */\nexport class ConvertibleOutput {\n  private bytes: Uint8Array;\n  private destroyed = false;\n\n  constructor(bytes: Uint8Array) {\n    this.bytes = bytes;\n  }\n\n  /** Raw bytes view (do NOT mutate). */\n  get uint8array(): Uint8Array {\n    if (this.destroyed) throw new Error('ConvertibleOutput: already cleared');\n    return this.bytes;\n  }\n\n  /** Base64 view of the underlying bytes. */\n  get base64(): string {\n    if (this.destroyed) throw new Error('ConvertibleOutput: already cleared');\n    return base64Encode(this.bytes);\n  }\n\n  /** Hex view of the underlying bytes. */\n  get hex(): string {\n    if (this.destroyed) throw new Error('ConvertibleOutput: already cleared');\n    return hexEncode(this.bytes);\n  }\n\n  /** UTF-8 decoded string (useful for decrypted text). */\n  get text(): string {\n    if (this.destroyed) throw new Error('ConvertibleOutput: already cleared');\n    return new TextDecoder().decode(this.bytes);\n  }\n\n  /** Securely zero the buffer. */\n  clear(): void {\n    if (!this.destroyed) {\n      wipe(this.bytes);\n      this.bytes = new Uint8Array(0);\n      this.destroyed = true;\n    }\n  }\n\n  /** For backwards ergonomics: String(output) -> Base64 */\n  toString(): string { return this.base64; }\n}",
    "/* ------------------------------------------------------------------\n   Tiny, dependency-free logger with five verbosity levels\n   ------------------------------------------------------------------ */\nexport type Verbosity = 0 | 1 | 2 | 3 | 4;  // 0 = errors only … 4 = trace\n\nexport interface Logger {\n  level : Verbosity;\n  log(lvl: Verbosity, msg: string): void;\n}\n\nexport function createLogger(\n  level: Verbosity = 0,\n  sink : (msg: string) => void = console.info,\n): Logger {\n  return {\n    level,\n    log(lvl, msg) {\n      if (lvl <= level) sink(`${lvl}| ${msg}`);\n    },\n  };\n}\n/*\nconst loggerSingleton: Logger = createLogger();\n\nexport default loggerSingleton;*/",
    "import { SchemeRegistry } from '../config/SchemeRegistry.js';\nimport type {\n  SchemeDescriptor,\n  EncryptionAlgorithm,\n  KeyDerivation,\n  Secret,\n} from '../types/index.js';\nimport type { CryptoProvider } from '../providers/CryptoProvider.js';\nimport { KeyDerivationError } from '../errors/index.js';\nimport { zeroizeString } from '../util/bytes.js';\n\nexport interface Engine {\n  desc      : SchemeDescriptor;\n  cipher    : EncryptionAlgorithm;\n  kdf       : KeyDerivation;\n  chunkSize : number;\n  provider  : CryptoProvider;\n}\n\nconst _cache = new WeakMap<CryptoProvider, Map<number, Engine>>();\n\nexport class EngineManager {\n  static getEngine(provider: CryptoProvider, schemeId: number): Engine {\n    let perProvider = _cache.get(provider);\n    if (!perProvider) {\n      perProvider = new Map<number, Engine>();\n      _cache.set(provider, perProvider);\n    }\n\n    let engine = perProvider.get(schemeId);\n    if (engine) return engine;\n\n    const desc   = SchemeRegistry.get(schemeId);\n    engine = {\n      desc,\n      cipher   : new desc.cipher(provider),\n      kdf      : desc.kdf,\n      chunkSize: desc.defaultChunkSize,\n      provider,\n    };\n    perProvider.set(schemeId, engine);\n    return engine;\n  }\n\n  static async deriveKey(\n    engine : Engine,\n    secret   : Secret,\n    salt   : Uint8Array,\n    difficulty: 'low' | 'middle' | 'high',\n  ): Promise<void> {\n    try {\n      const key = await engine.kdf.derive(secret.value, salt, difficulty, engine.provider);\n      \n      await engine.cipher.setKey(key);\n    } catch (err) {\n      const msg = err instanceof Error ? err.message : String(err);\n      throw new KeyDerivationError(msg);\n    } finally {\n       zeroizeString(secret);\n    }\n  }\n}",
    "// packages/core/src/index.ts\n\nimport './config/defaults.js';\n\nimport type { CryptoProvider }    from './providers/CryptoProvider.js';\nimport { Difficulty, SaltStrength } from './config/defaults.js';\nimport { encodeHeader }             from './header/encoder.js';\nimport { decodeHeader }             from './header/decoder.js';\nimport {\n  EncryptionAlgorithm,\n  KeyDerivation,\n  SchemeDescriptor,\n  Secret\n} from './types/index.js';\nimport { SchemeRegistry }          from './config/SchemeRegistry.js';\nimport { base64Encode, base64Decode, concat, zeroizeString } from './util/bytes.js';\nimport { StreamProcessor }          from './stream/StreamProcessor.js';\nimport { EncryptTransform }         from './stream/EncryptTransform.js';\nimport { DecryptTransform }         from './stream/DecryptTransform.js';\nimport { ConvertibleInput, ConvertibleOutput } from './util/Convertible.js';\n\nimport {\n  createLogger,\n  type Verbosity,\n  type Logger,\n} from './util/logger.js';\nimport {  ByteSource, RandomAccessSource }          from './util/ByteSource.js';\n\nimport {\n  EncryptionError,\n  DecryptionError,\n  KeyDerivationError,\n  InvalidHeaderError,\n  HeaderDecodeError,\n  DecodingError,\n} from './errors/index.js';\n\nimport { EngineManager, type Engine } from './engine/EngineManager.js';\n\n// ────────────────────────────────────────────────────────────────────────────\n//  Public configuration shape\n// ────────────────────────────────────────────────────────────────────────────\n\n/**\n * Result of creating an encryption stream: header and paired streams.\n */\nexport interface EncryptStreamResult {\n  /** Binary header for decryption initialization */\n  header   : Uint8Array;\n  /** Writable stream to feed plaintext data */\n  writable : WritableStream<Uint8Array>;\n  /** Readable stream emitting ciphertext data */\n  readable : ReadableStream<Uint8Array>;\n}\n\n/**\n * Options for configuring Cryptit instance behavior.\n */\nexport interface CryptitOptions {\n  /** Version identifier (0…7) to use; defaults to registry's current scheme */\n  scheme?      : number;\n  /** Salt strength: 'low' | 'middle' | 'high'; defaults to descriptor's default */\n  saltStrength? : SaltStrength;\n  /** Key derivation difficulty; defaults to descriptor's default */\n  difficulty?   : Difficulty;\n  /** Chunk size for streaming operations; defaults to descriptor's default */\n  chunkSize?    : number;\n  /** Verbosity level 0-4 for logging (0 = errors only) */\n  verbose?      : Verbosity;\n  /** Optional custom logger callback (receives formatted messages) */\n  logger?       : (msg: string) => void;\n}\n\nexport type DecodeDataResult =\n  | { isChunked: true;  chunks: { chunkSize: number; count: number; totalPayload: number } }\n  | { isChunked: false; payloadLength: number; params: { iv: Uint8Array; ivLength: number; tag: Uint8Array; tagLength: number } };\n\n/**\n * Cryptit provides high-level encryption/decryption utilities for text, blobs, and streams.\n */\nexport class Cryptit {\n  // — runtime-mutable --------------------------------------------------------\n  private v          : SchemeDescriptor;\n  private cipher     : EncryptionAlgorithm;\n  private kdf        : KeyDerivation;\n  private chunkSize  : number;\n  private stream     : StreamProcessor;\n\n  private difficulty   : Difficulty;\n  private saltStrength : SaltStrength;\n\n  private readonly engines = new Map<number, Engine>();\n\n  // — diagnostics ------------------------------------------------------------\n  private readonly log : Logger;\n\n  /**\n   * Create a new Cryptit instance with given crypto provider and options.\n   * @param provider - Underlying crypto provider for key derivation and randomness\n   * @param opt - Configuration options for scheme, salts, logging, etc.\n   */\n  constructor(\n    private readonly provider: CryptoProvider,\n    opt: CryptitOptions = {},\n  ) {\n    this.v          = SchemeRegistry.get(opt.scheme ?? SchemeRegistry.current.id);\n    this.cipher     = new this.v.cipher(provider);\n    this.kdf        = this.v.kdf;\n    this.chunkSize  = this.setChunkSize(opt.chunkSize ?? this.v.defaultChunkSize);\n    this.stream     = new StreamProcessor(this.cipher, this.chunkSize);\n\n    this.difficulty     = opt.difficulty   ?? 'middle';\n    this.saltStrength   = opt.saltStrength ?? 'high';\n\n    this.log = createLogger(opt.verbose ?? 0, opt.logger);\n  }\n\n  // ════════════════════════════════════════════════════════════════════════\n  //  PUBLIC  - Informational helpers\n  // ════════════════════════════════════════════════════════════════════════\n\n  /**\n   * Check if the provided input contains a valid Cryptit header.\n   * @param input - Base64 string, Uint8Array, or Blob to inspect\n   * @returns True if header is valid; false otherwise\n   */\n  static async isEncrypted(\n    input: string | Uint8Array | Blob,\n  ): Promise<boolean> {\n    try {\n      await Cryptit.peekHeader(input);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Decode the Cryptit header and return readable metadata.\n   * @param input - Base64 string, Uint8Array, or Blob to decode\n   * @returns Object containing scheme, difficulty, salt (Base64), and salt length\n   */\n  static async headerDecode(\n    input: string | Uint8Array | Blob,\n  ): Promise<{ scheme: number; difficulty: Difficulty; salt: string; saltLength: number; }> {\n    const hdr = await Cryptit.peekHeader(input);\n    const h   = decodeHeader(hdr);\n    return {\n      scheme    : h.scheme,\n      difficulty : h.difficulty,\n      salt       : base64Encode(h.salt),\n      saltLength : h.salt.byteLength,\n    };\n  }\n\n  /**\n   * Inspect an encrypted payload and return either:\n   *   • chunk statistics for file/stream containers\n   *   • IV/nonce & auth -tag for single -block text containers\n   *\n   * This never decrypts - it merely parses framing bytes.\n   */\n  static async decodeData(\n    input: string | Uint8Array | Blob | RandomAccessSource,\n  ): Promise<DecodeDataResult> {\n    /* normalise into a random-access reader */\n    const src: RandomAccessSource = typeof (input as any)?.read === 'function'\n      ? (input as RandomAccessSource)\n      : new ByteSource(input as string | Uint8Array | Blob);\n    const headSlice = await src.read(0, Math.min(256, src.length));\n    const header    = await Cryptit.peekHeader(headSlice);\n    const { scheme, headerLen } = decodeHeader(header);\n\n    // Compute remaining payload length\n    const totalLen  = src.length;\n    const remain    = totalLen - headerLen;\n    if (remain <= 0) {\n      throw new InvalidHeaderError('Payload is empty');\n    }\n\n    const first4   = await src.read(headerLen, 4);\n    const firstLen = new DataView(first4.buffer, first4.byteOffset, 4)\n                      .getUint32(0, false);\n\n    const looksChunked =\n      firstLen + 4 <= remain &&  // frame fits\n      firstLen >= 28;            // at least IV+tag\n\n    if (looksChunked) {\n      // ——— chunked container ———\n      const chunkSize = firstLen;\n      let offset = headerLen;\n      let count  = 0;\n      let total  = 0;\n\n      while (offset + 4 <= totalLen) {\n        const lenBuf = await src.read(offset, 4);\n        const len    = new DataView(lenBuf.buffer, lenBuf.byteOffset, 4)\n                          .getUint32(0, false);\n        if (len === 0 || offset + 4 + len > totalLen) break;\n        count++;\n        total += len;\n        offset += 4 + len;\n      }\n\n      return {\n        isChunked: true,\n        chunks: {\n          chunkSize,\n          count,\n          totalPayload: total,\n        },\n      };\n    }\n\n    // ——— single-block (encryptText) ———\n    const cipher      = await src.read(headerLen, remain);\n    const ivLen       = SchemeRegistry.get(scheme).cipher.IV_LENGTH;\n    const tagLen      = SchemeRegistry.get(scheme).cipher.TAG_LENGTH\n    if (cipher.length < ivLen + tagLen) {\n      throw new InvalidHeaderError('Ciphertext too short for IV & tag');\n    }\n\n    return {\n      isChunked: false,\n      // full encrypted payload length (including IV+cipher+tag)\n      payloadLength: remain - ivLen - tagLen,\n      params: {\n        iv : cipher.slice(0, ivLen),\n        ivLength: ivLen,\n        tag: cipher.slice(cipher.length - tagLen),\n        tagLength: tagLen,\n      },\n    } as const;\n  }\n\n  // ════════════════════════════════════════════════════════════════════════\n  //  PUBLIC  - Setters / getters for run-time flexibility\n  // ════════════════════════════════════════════════════════════════════════\n  /** Set the difficulty level for subsequent operations. */\n  setDifficulty(d: Difficulty): void         { this.difficulty = d; }\n  /** Get the current difficulty setting. */\n  getDifficulty(): Difficulty                { return this.difficulty; }\n\n  /**\n   * Change the protocol scheme for future encrypt/decrypt actions.\n   * @param id - Version identifier from registry\n   */\n  setScheme(id: number): void {\n    this.v       = SchemeRegistry.get(id);\n    this.cipher  = new this.v.cipher(this.provider);\n    this.kdf     = this.v.kdf;\n    this.stream  = new StreamProcessor(this.cipher, this.chunkSize);\n  }\n  /** Retrieve the active protocol scheme identifier. */\n  getScheme(): number                       { return this.v.id; }\n\n  /**\n   * Override salt length (in bytes) for new operations (advanced use).\n   * @param len - Custom salt length in bytes\n   */\n  setSaltDifficulty(d: SaltStrength): void           { this.saltStrength = d; }\n  /** Get the effective salt length for the current strength. */\n  getSaltDifficulty(): SaltStrength {\n    return this.saltStrength;\n  }\n\n  /**\n   * Configure chunk size (bytes) for streaming transforms.\n   * @param bytes - Desired chunk size in bytes\n   */\n  setChunkSize(bytes: number): number {\n     \n      const MAX_ALLOWED_CHUNK_SIZE = 128 * 1024 * 1024; // 128 MiB\n      const rawSize = bytes;\n      let size: number;\n\n      if (rawSize == null) {\n        size = this.v.defaultChunkSize;\n      } else {\n        size = Number(rawSize);\n        if (!Number.isInteger(size) || size < 1) {\n          throw new Error(`Invalid chunkSize: ${rawSize}. Must be a positive integer.`);\n        }\n        if (size > MAX_ALLOWED_CHUNK_SIZE) {\n          throw new RangeError(`chunkSize cannot exceed ${MAX_ALLOWED_CHUNK_SIZE} bytes.`);\n        }\n      }\n\n      // finally assign\n      this.chunkSize = size;\n      if (this.stream) { // Check if stream is initialized\n          this.stream = new StreamProcessor(this.cipher, this.chunkSize);\n      }\n      return size;\n  }\n  /** Retrieve the current streaming chunk size. */\n  getChunkSize(): number                     { return this.chunkSize; }\n\n  /**\n   * Adjust verbosity level of internal logger at runtime.\n   * @param level - Logger verbosity (0-4)\n   */\n  setVerbose(level: Verbosity): void         { this.log.level = level; }\n  /** Get the current logger verbosity setting. */\n  getVerbose(): Verbosity                    { return this.log.level; }\n\n  // ════════════════════════════════════════════════════════════════════════\n  //  TEXT convenience\n  // ════════════════════════════════════════════════════════════════════════\n\n    /**\n   * Encrypt plaintext and return a flexible output wrapper.\n   * @param plain - string | Uint8Array | ConvertibleInput\n   * @param pass  - passphrase (warning logged if empty)\n   * @returns ConvertibleOutput (read via .base64 / .hex / .uint8array)\n   * @throws EncryptionError on failure\n   */\n  async encryptText(\n    plain: string | Uint8Array | ConvertibleInput,\n    pass: string,\n  ): Promise<ConvertibleOutput> {\n    const secret = { value: pass };\n\n    try {\n      if (pass === '') this.log.log(0, 'Empty passphrase provided to encryptText');\n      this.log.log(1, `Start text encryption, scheme: ${this.getScheme()}`);\n\n      // Normalize input once; we’ll wipe after use\n      const inp = ConvertibleInput.from(plain);\n      const plainBytes = inp.toUint8Array();\n\n      this.log.log(2, 'Deriving key for text encryption');\n      const salt = this.genSalt();\n      await this.deriveKey(secret, salt);\n\n      zeroizeString(secret);\n      pass = null as any;\n\n      this.log.log(3, `Salt generated: ${base64Encode(salt)}, KDF difficulty: ${this.difficulty}`);\n      this.log.log(3, 'Encoding header');\n\n      const header = encodeHeader(this.v.id, this.difficulty, this.saltStrength, salt, this.cipher);\n\n      this.log.log(2, 'Encrypting text data');\n      const cipher = await this.cipher.encryptChunk(plainBytes);\n      this.cipher.zeroKey();\n\n      // wipe plaintext ASAP\n      try { inp.clear(); } catch {}\n\n      // Return a convertible output over the raw container bytes (header + cipher)\n      const container = concat(header, cipher);\n      this.log.log(1, 'Encryption finished');\n      return new ConvertibleOutput(container);\n\n    } catch (err) {\n      throw new EncryptionError(\n        err instanceof Error ? err.message : String(err),\n      );\n    }\n  }\n\n  /**\n   * Decrypt a ciphertext container and return a flexible output wrapper.\n   * @param data - Base64 string, Uint8Array, or ConvertibleInput of (header + ciphertext)\n   * @param pass - passphrase (warning logged if empty)\n   * @returns ConvertibleOutput over plaintext bytes (.text for UTF-8)\n   * @throws DecryptionError on failure\n   */\n  async decryptText(\n    data: string | Uint8Array | ConvertibleInput,\n    pass: string,\n  ): Promise<ConvertibleOutput> {\n    const secret = { value: pass };\n\n    try {\n      if (pass === '') this.log.log(0, 'Empty passphrase provided to decryptText');\n      this.log.log(1, `Start text decryption, Version ${this.getScheme()}`);\n\n      // Normalize ciphertext container to bytes\n      let container: Uint8Array;\n      if (typeof data === 'string') {\n        this.log.log(3, 'Decoding Base64 ciphertext');\n        container = base64Decode(data);\n      } else if (data instanceof Uint8Array) {\n        container = data;\n      } else if (data instanceof ConvertibleInput) {\n        container = data.toUint8Array();\n      } else {\n        throw new DecodingError('Unsupported ciphertext input type');\n      }\n\n      this.log.log(3, 'Start header decoding');\n      const hdr = decodeHeader(container);\n\n      this.log.log(3, 'Selecting decryption engine');\n      const engine = EngineManager.getEngine(this.provider, hdr.scheme);\n\n      this.log.log(2, `Deriving key via engine for scheme: ${hdr.scheme}`);\n      this.log.log(3, `Salt use: ${base64Encode(hdr.salt)}, KDF difficulty: ${hdr.difficulty}`);\n\n      try {\n        await EngineManager.deriveKey(engine, secret, hdr.salt, hdr.difficulty);\n      } finally {\n        zeroizeString(secret);\n        pass = null as any;\n      }\n\n      this.log.log(2, 'Decrypting text data');\n      decodeHeader(container, engine.cipher); // bind AAD on actual cipher\n      const plainBytes = await engine.cipher.decryptChunk(\n        container.slice(hdr.headerLen),\n      );\n      engine.cipher.zeroKey();\n\n      // if input was a ConvertibleInput, wipe it\n      if (data instanceof ConvertibleInput) {\n        try { data.clear(); } catch {}\n      }\n\n      this.log.log(1, 'Decryption finished');\n      return new ConvertibleOutput(plainBytes);\n\n    } catch (err) {\n      if (\n        err instanceof DecryptionError   ||\n        err instanceof InvalidHeaderError||\n        err instanceof HeaderDecodeError ||\n        err instanceof DecodingError ||\n        err instanceof KeyDerivationError\n      ) throw err;\n\n      throw new DecryptionError(\n        'Decryption failed: wrong passphrase or corrupted ciphertext',\n      );\n    }\n  }\n\n  /* ──────────────────────────────────────────────────────────\n     Encrypt a whole Blob and return an opaque binary Blob\n     ────────────────────────────────────────────────────────── */\n  /**\n   * Encrypt a Blob (file) and return a new Blob with embedded header.\n   * @param file - Input Blob to encrypt\n   * @param pass - Passphrase for key derivation\n   * @returns Encrypted Blob (application/octet-stream)\n   * @throws EncryptionError on failure\n   */\n  async encryptFile(file: Blob, pass: string): Promise<Blob> {\n    const secret = { value: pass };\n    try {\n\n      if (file.size === 0) {\n        const salt = this.genSalt();\n        await this.deriveKey(secret, salt);\n\n        zeroizeString(secret);\n        pass = null as any;\n\n        const header = encodeHeader(\n          this.v.id,\n          this.difficulty,\n          this.saltStrength,\n          salt,\n        );\n        /* nothing to encrypt ⇒ header alone is a valid container */\n        return new Blob([header as BufferSource], { type: 'application/octet-stream' });\n      }\n      this.log.log(2, 'Deriving key for file encryption');\n      const salt = this.genSalt();\n      await this.deriveKey(secret, salt);\n\n      zeroizeString(secret);\n      pass = null as any;\n\n      const header = encodeHeader(this.v.id, this.difficulty, this.saltStrength, salt, this.stream.getEngine());\n\n      const cipher = await this.stream.collect(\n        file.stream() as ReadableStream<Uint8Array>,\n        new EncryptTransform(this.cipher, this.chunkSize).toTransformStream(),\n        header,\n      );\n\n      return new Blob([cipher as BufferSource], { type: 'application/octet-stream' });\n\n    } catch (err) {\n      throw new EncryptionError(\n        err instanceof Error ? err.message : String(err),\n      );\n    }\n  }\n\n  /* ──────────────────────────────────────────────────────────\n     Decrypt a Blob that carries its own header (any scheme)\n     ────────────────────────────────────────────────────────── */\n  /**\n   * Decrypt an encrypted Blob using the embedded header for parameters.\n   * @param file - Encrypted Blob containing header + ciphertext\n   * @param pass - Passphrase for key derivation\n   * @returns Decrypted Blob (application/octet-stream)\n   * @throws DecryptionError on failure or invalid header\n   */\n  async decryptFile(file: Blob, pass: string): Promise<Blob> {\n    const secret = { value: pass };\n    try {\n      const header = await Cryptit.peekHeader(file);\n      const parsed = decodeHeader(header);\n      const engine = EngineManager.getEngine(this.provider, parsed.scheme);\n      \n\n      try {\n        await EngineManager.deriveKey(engine, secret, parsed.salt, parsed.difficulty);\n      } finally {\n        zeroizeString(secret);\n        pass = null as any;\n      }\n\n      // ── 0-byte optimisation ────────────────────────────────────────\n      if (file.size === parsed.headerLen) {\n        /* container carries header only - nothing to decrypt */\n        return new Blob([], { type: 'application/octet-stream' });\n      }\n\n      this.log.log(2, 'Decrypting file data');\n      const streamProc = new StreamProcessor(engine.cipher, engine.chunkSize);\n      // again for correc tdata\n      decodeHeader(header, streamProc.getEngine());\n      const plain = await streamProc.collect(\n        file.slice(parsed.headerLen).stream() as ReadableStream<Uint8Array>,\n        new DecryptTransform(engine.cipher, engine.chunkSize).toTransformStream(),\n      );\n\n      return new Blob([plain as BufferSource], { type: 'application/octet-stream' });\n\n    } catch (err) {\n      if (err instanceof DecryptionError) throw err;\n      throw new DecryptionError(\n        err instanceof Error ? err.message : String(err),\n      );\n    }\n  }\n\n  /* ──────────────────────────────────────────────────────────\n     Streaming encryption: returns header + TransformStream\n     ────────────────────────────────────────────────────────── */\n  /**\n   * Initialize streaming encryption, returning header and transform streams.\n   * @param pass - Passphrase for key derivation\n   * @returns Streams and header for real-time encryption\n   */\n  async createEncryptionStream(pass: string): Promise<EncryptStreamResult> {\n    const secret = { value: pass };\n\n    this.log.log(2, 'Deriving key for stream encryption');\n    const salt = this.genSalt();\n    await this.deriveKey(secret, salt);\n\n    zeroizeString(secret);\n    pass = null as any;\n\n    const header = encodeHeader(this.v.id, this.difficulty, this.saltStrength, salt, this.stream.getEngine());\n    const tf     = this.stream.encryptionStream();\n\n    return { header, writable: tf.writable, readable: tf.readable };\n  }\n\n  /* ──────────────────────────────────────────────────────────\n     Streaming decryption (auto-detect header, any scheme)\n     ────────────────────────────────────────────────────────── */\n  /**\n   * Create a TransformStream for decrypting incoming ciphertext with header auto-detection.\n   * @param passp - Passphrase for key derivation\n   * @returns TransformStream encrypting Uint8Array chunks to Uint8Array plaintext chunks\n   */\n  async createDecryptionStream(\n  pass: string,\n): Promise<TransformStream<Uint8Array, Uint8Array>> {\n  const secret = { value: pass };\n\n  const self = this;\n  let buf: Uint8Array = new Uint8Array(0);\n  let downstream: TransformStream<Uint8Array, Uint8Array> | null = null;\n\n  // DOS guard: never buffer more than this while waiting for a header\n  const MAX_HEADER_PREFIX = 64 * 1024;\n  const MIN_HEADER_BYTES  = 2 + 12;\n\n  async function pipeOut(\n    readable: ReadableStream<Uint8Array>,\n    ctl: TransformStreamDefaultController<Uint8Array>,\n  ) {\n    const rd = readable.getReader();\n    while (true) {\n      const { value, done } = await rd.read();\n      if (done) break;\n      ctl.enqueue(value!);\n    }\n  }\n\n  return new TransformStream<Uint8Array, Uint8Array>({\n    async transform(chunk, ctl) {\n      if (!downstream) {\n        // Append with a strict upper bound to prevent unbounded growth\n        if (chunk && chunk.byteLength) {\n          if (buf.byteLength + chunk.byteLength > MAX_HEADER_PREFIX) {\n            zeroizeString(secret);\n            ctl.error(new InvalidHeaderError(\n              `Header not found within ${MAX_HEADER_PREFIX} bytes`,\n            ));\n            return;\n          }\n          buf = concat(buf, chunk);\n        }\n\n        // Not enough to even hold the smallest header — keep buffering\n        if (buf.byteLength < MIN_HEADER_BYTES) return;\n\n        // We can now safely read the info byte\n        const info         = buf[1];\n        const scheme       = info >> 5;\n        const saltStrength = ((info >> 2) & 1) ? 'high' : 'low';\n\n        // Determine expected header length; if scheme is unknown, fail\n        let hdrLen = 0;\n        try {\n          const desc  = SchemeRegistry.get(scheme);\n          const sLen  = desc.saltLengths[saltStrength as 'low' | 'high'];\n          hdrLen      = 2 + sLen;\n        } catch (e) {\n          zeroizeString(secret);\n          ctl.error(new HeaderDecodeError(\n            e instanceof Error ? e.message : String(e),\n          ));\n          return;\n        }\n\n        // Wait until the full header is available\n        if (buf.byteLength < hdrLen) return;\n\n        // Parse header bytes precisely; get salt & difficulty\n        const headerBytes = buf.subarray(0, hdrLen);\n        let parsed: ReturnType<typeof decodeHeader>;\n        try {\n          parsed = decodeHeader(headerBytes);\n        } catch (err) {\n          zeroizeString(secret);\n          ctl.error(err instanceof Error ? err : new HeaderDecodeError('Invalid header'));\n          return;\n        }\n\n        // Prepare engine & key\n        const engine = EngineManager.getEngine(self.provider, parsed.scheme);\n        try {\n          await EngineManager.deriveKey(engine, secret, parsed.salt, parsed.difficulty);\n        } finally {\n          zeroizeString(secret);\n          pass = null as any;\n        }\n\n        // Bind the exact header bytes as AAD on the *actual* cipher\n        decodeHeader(headerBytes, engine.cipher);\n\n        // Switch to decryption pipeline\n        downstream = new DecryptTransform(engine.cipher, engine.chunkSize).toTransformStream();\n        void pipeOut(downstream.readable, ctl).catch(err => ctl.error(err));\n\n        // Push any buffered ciphertext after the header downstream, then release buffer\n        const remainder = buf.subarray(hdrLen);\n        buf = new Uint8Array(0);\n        if (remainder.byteLength) {\n          const w = downstream.writable.getWriter();\n          await w.write(remainder);\n          w.releaseLock();\n        }\n        return;\n      }\n\n      // Already initialised: just forward chunks\n      const writer = downstream.writable.getWriter();\n      await writer.write(chunk);\n      writer.releaseLock();\n    },\n\n    async flush() {\n      if (!downstream) {\n        zeroizeString(secret);\n        throw new InvalidHeaderError('Header not found before end of stream');\n      }\n      const writer = downstream.writable.getWriter();\n      await writer.close();\n      writer.releaseLock();\n    },\n  });\n}\n\n  // ════════════════════════════════════════════════════════════════════════\n  //  Helpers\n  // ════════════════════════════════════════════════════════════════════════\n\n  /**\n   * Derive cryptographic key from passphrase and salt using configured KDF.\n   * @param pass - Passphrase to derive key from\n   * @param salt - Random salt value\n   * @param diff - Difficulty level for KDF (optional)\n   * @throws KeyDerivationError on KDF failure\n   */\n  private async deriveKey(\n    secret: Secret,\n    salt: Uint8Array,\n    diff: Difficulty = this.difficulty,\n  ): Promise<void> {\n    const start = performance.now();\n    try {\n      const key = await this.kdf.derive(secret.value, salt, diff, this.provider);\n      zeroizeString(secret);\n      \n      await this.cipher.setKey(key);\n      this.log.log(3, `Key derivation completed in ${(performance.now() - start).toFixed(1)} ms`);\n    } catch (err) {\n      throw new KeyDerivationError(\n        err instanceof Error ? err.message : String(err),\n      );\n    }\n  }\n\n  /** Generate a secure random salt according to configured length. */\n  private genSalt<S extends SaltStrength>(strength: S = this.saltStrength as S): Uint8Array {\n    const len = this.v.saltLengths[this.saltStrength];\n    return this.provider.getRandomValues(new Uint8Array(len));\n  }\n\n  // ────────────────────────────────────────────────────────────────────\n  //  Static helper - read just enough bytes to parse the header\n  // ────────────────────────────────────────────────────────────────────\n  /**\n   * Read minimal bytes to extract and validate Cryptit header.\n   * @param input - Base64 string, Uint8Array, or Blob containing header\n   * @returns Uint8Array slice of the header bytes\n   * @throws HeaderDecodeError or InvalidHeaderError on invalid input\n   */\n\n  private static async peekHeader(input: string | Uint8Array | Blob) {\n    const buf = await this.readAsUint8(input);\n\n    // Handle raw Uint8Array input\n    if (buf instanceof Uint8Array) {\n      if (buf.length < 2) throw new InvalidHeaderError('Input too short');\n      const { headerLen } = decodeHeader(\n        buf.length >= 16 ? buf : Uint8Array.from(buf),\n      );\n      if (buf.length < headerLen) throw new InvalidHeaderError('Incomplete header');\n      return buf.slice(0, headerLen);\n    }\n    throw new HeaderDecodeError('Unsupported input type');\n  }\n\n  private static async readAsUint8(input: string | Uint8Array | Blob): Promise<Uint8Array> {\n    if (typeof input === 'string') return base64Decode(input);\n    if (input instanceof Blob) {\n      const slice = input.slice(0, 64);\n      return new Uint8Array(await slice.arrayBuffer());\n    }\n    return input;\n  }\n}\n",
    "import { webcrypto, randomFillSync } from 'node:crypto';\nimport type { CryptoProvider } from '../../core/src/providers/CryptoProvider.js';\n\nexport const nodeProvider: CryptoProvider = {\n  // cast is safe: Node’s SubtleCrypto is a superset of the browser spec\n  subtle: webcrypto.subtle as unknown as SubtleCrypto,\n  getRandomValues(buf) {\n    randomFillSync(buf);\n    return buf;\n  },\n  isNode: true,\n};\n",
    "// packages/node-runtime/src/index.ts\nimport { Cryptit, type CryptitOptions } from '../../core/src/index.js';\nimport { nodeProvider }                from './provider.js';\n\nexport function createCryptit(cfg?: CryptitOptions): Cryptit {\n  return new Cryptit(nodeProvider, cfg);\n}\n\nexport { Cryptit } from '../../core/src/index.js';\nexport { ConvertibleInput, ConvertibleOutput } from '../../core/src/util/Convertible.js';",
    "import { Readable, Writable } from 'node:stream';\n\n/** Cast Node streams to WHATWG streams in one place */\nexport function toWebReadable(r: Readable): ReadableStream<Uint8Array> {\n  return (Readable as any).toWeb(r) as ReadableStream<Uint8Array>;\n}\nexport function toWebWritable(w: Writable): WritableStream<Uint8Array> {\n  return (Writable as any).toWeb(w) as WritableStream<Uint8Array>;\n}"
  ],
  "mappings": ";iZAIA,MAAM,WAAuB,KAAM,CAQjC,WAAW,CAAC,EAAU,EAAM,EAAS,CACnC,MAAM,CAAO,EAEb,MAAM,kBAAkB,KAAM,KAAK,WAAW,EAC9C,KAAK,KAAO,KAAK,YAAY,KAC7B,KAAK,KAAO,EACZ,KAAK,SAAW,EAChB,KAAK,YAAc,OAEvB,CAMA,MAAM,WAA6B,EAAe,CAMhD,WAAW,CAAC,EAAS,CACnB,MAAM,EAAG,4BAA6B,CAAO,EAE7C,MAAM,kBAAkB,KAAM,KAAK,WAAW,EAC9C,KAAK,KAAO,KAAK,YAAY,KAEjC,CAEA,GAAQ,eAAiB,GACzB,GAAQ,qBAAuB,qBC1C/B,IAAQ,8BAER,MAAM,EAAS,CAUb,WAAW,CAAC,EAAM,EAAa,CAQ7B,OAPA,KAAK,YAAc,GAAe,GAClC,KAAK,SAAW,GAChB,KAAK,SAAW,OAChB,KAAK,aAAe,OACpB,KAAK,wBAA0B,OAC/B,KAAK,WAAa,OAEV,EAAK,QACN,IACH,KAAK,SAAW,GAChB,KAAK,MAAQ,EAAK,MAAM,EAAG,EAAE,EAC7B,UACG,IACH,KAAK,SAAW,GAChB,KAAK,MAAQ,EAAK,MAAM,EAAG,EAAE,EAC7B,cAEA,KAAK,SAAW,GAChB,KAAK,MAAQ,EACb,MAGJ,GAAI,KAAK,MAAM,OAAS,GAAK,KAAK,MAAM,MAAM,EAAE,IAAM,MACpD,KAAK,SAAW,GAChB,KAAK,MAAQ,KAAK,MAAM,MAAM,EAAG,EAAE,EAUvC,IAAI,EAAG,CACL,OAAO,KAAK,MAOd,YAAY,CAAC,EAAO,EAAU,CAC5B,GAAI,IAAa,KAAK,eAAiB,MAAM,QAAQ,CAAQ,EAC3D,MAAO,CAAC,CAAK,EAGf,OAAO,EAAS,OAAO,CAAK,EAW9B,OAAO,CAAC,EAAO,EAAa,CAG1B,OAFA,KAAK,aAAe,EACpB,KAAK,wBAA0B,EACxB,KAUT,SAAS,CAAC,EAAI,CAEZ,OADA,KAAK,SAAW,EACT,KAUT,OAAO,CAAC,EAAQ,CAWd,OAVA,KAAK,WAAa,EAAO,MAAM,EAC/B,KAAK,SAAW,CAAC,EAAK,IAAa,CACjC,IAAK,KAAK,WAAW,SAAS,CAAG,EAC/B,MAAM,IAAI,GAAqB,uBAAuB,KAAK,WAAW,KAAK,IAAI,IAAI,EAErF,GAAI,KAAK,SACP,OAAO,KAAK,aAAa,EAAK,CAAQ,EAExC,OAAO,GAEF,KAMT,WAAW,EAAG,CAEZ,OADA,KAAK,SAAW,GACT,KAMT,WAAW,EAAG,CAEZ,OADA,KAAK,SAAW,GACT,KAEX,CAUA,SAAS,EAAoB,CAAC,EAAK,CACjC,IAAM,EAAa,EAAI,KAAK,GAAK,EAAI,WAAa,GAAO,MAAQ,IAEjE,OAAO,EAAI,SACP,IAAM,EAAa,IACnB,IAAM,EAAa,IAGzB,GAAQ,SAAW,GACnB,GAAQ,qBAAuB,qBChJ/B,IAAQ,8BAWR,MAAM,EAAK,CACT,WAAW,EAAG,CACZ,KAAK,UAAY,OACjB,KAAK,gBAAkB,GACvB,KAAK,YAAc,GACnB,KAAK,kBAAoB,GAU3B,eAAe,CAAC,EAAK,CACnB,IAAM,EAAkB,EAAI,SAAS,OAAO,MAAQ,EAAI,OAAO,EAC/D,GAAI,EAAI,wBAAwB,EAAG,CAEjC,KAAS,EAAU,GAAY,EAAI,wBAAwB,MAAM,eAAe,EAC1E,EAAc,EAAI,cAAc,CAAQ,EAC3C,WAAW,EAAK,EAEnB,GADA,EAAY,YAAY,EAAI,uBAAuB,EAC/C,EAAU,EAAY,UAAU,CAAQ,EAC5C,EAAgB,KAAK,CAAW,EAElC,GAAI,KAAK,gBACP,EAAgB,KAAK,CAAC,EAAG,IAAM,CAE7B,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,CAAC,EACvC,EAEH,OAAO,EAUT,cAAc,CAAC,EAAG,EAAG,CACnB,IAAM,EAAa,CAAC,IAAW,CAE7B,OAAO,EAAO,MAAQ,EAAO,MAAM,QAAQ,KAAM,EAAE,EAAI,EAAO,KAAK,QAAQ,MAAO,EAAE,GAEtF,OAAO,EAAW,CAAC,EAAE,cAAc,EAAW,CAAC,CAAC,EAUlD,cAAc,CAAC,EAAK,CAClB,IAAM,EAAiB,EAAI,QAAQ,OAAO,CAAC,KAAY,EAAO,MAAM,EAE9D,EAAoB,EAAI,gBAAkB,EAAI,iBAAmB,EAAI,YAAY,EAAI,cAAc,EACnG,EAAmB,EAAI,iBAAmB,EAAI,YAAY,EAAI,aAAa,EACjF,GAAI,GAAqB,EAAkB,CACzC,IAAI,EACJ,IAAK,EACH,EAAa,EAAI,aAAa,EAAI,cAAe,EAAI,gBAAgB,EAChE,SAAK,EACV,EAAa,EAAI,aAAa,EAAI,eAAgB,EAAI,gBAAgB,EAEtE,OAAa,EAAI,aAAa,EAAI,WAAY,EAAI,gBAAgB,EAEpE,EAAe,KAAK,CAAU,EAEhC,GAAI,KAAK,YACP,EAAe,KAAK,KAAK,cAAc,EAEzC,OAAO,EAUT,oBAAoB,CAAC,EAAK,CACxB,IAAK,KAAK,kBAAmB,MAAO,CAAC,EAErC,IAAM,EAAgB,CAAC,EACvB,QAAS,EAAc,EAAI,OAAQ,EAAa,EAAc,EAAY,OAAQ,CAChF,IAAM,EAAiB,EAAY,QAAQ,OAAO,CAAC,KAAY,EAAO,MAAM,EAC5E,EAAc,KAAK,GAAG,CAAc,EAEtC,GAAI,KAAK,YACP,EAAc,KAAK,KAAK,cAAc,EAExC,OAAO,EAUT,gBAAgB,CAAC,EAAK,CAEpB,GAAI,EAAI,iBACN,EAAI,oBAAoB,QAAQ,KAAY,CAC1C,EAAS,YAAc,EAAS,aAAe,EAAI,iBAAiB,EAAS,KAAK,IAAM,GACzF,EAIH,GAAI,EAAI,oBAAoB,KAAK,KAAY,EAAS,WAAW,EAC/D,OAAO,EAAI,oBAEb,MAAO,CAAC,EAUV,cAAc,CAAC,EAAK,CAElB,IAAM,EAAO,EAAI,oBAAoB,IAAI,KAAO,GAAqB,CAAG,CAAC,EAAE,KAAK,GAAG,EACnF,OAAO,EAAI,OACR,EAAI,SAAS,GAAK,IAAM,EAAI,SAAS,GAAK,KAC1C,EAAI,QAAQ,OAAS,aAAe,KACpC,EAAO,IAAM,EAAO,IAUzB,UAAU,CAAC,EAAQ,CACjB,OAAO,EAAO,MAUhB,YAAY,CAAC,EAAU,CACrB,OAAO,EAAS,KAAK,EAWvB,2BAA2B,CAAC,EAAK,EAAQ,CACvC,OAAO,EAAO,gBAAgB,CAAG,EAAE,OAAO,CAAC,EAAK,IAAY,CAC1D,OAAO,KAAK,IAAI,EAAK,EAAO,eAAe,CAAO,EAAE,MAAM,GACzD,CAAC,EAWN,uBAAuB,CAAC,EAAK,EAAQ,CACnC,OAAO,EAAO,eAAe,CAAG,EAAE,OAAO,CAAC,EAAK,IAAW,CACxD,OAAO,KAAK,IAAI,EAAK,EAAO,WAAW,CAAM,EAAE,MAAM,GACpD,CAAC,EAWN,6BAA6B,CAAC,EAAK,EAAQ,CACzC,OAAO,EAAO,qBAAqB,CAAG,EAAE,OAAO,CAAC,EAAK,IAAW,CAC9D,OAAO,KAAK,IAAI,EAAK,EAAO,WAAW,CAAM,EAAE,MAAM,GACpD,CAAC,EAWN,yBAAyB,CAAC,EAAK,EAAQ,CACrC,OAAO,EAAO,iBAAiB,CAAG,EAAE,OAAO,CAAC,EAAK,IAAa,CAC5D,OAAO,KAAK,IAAI,EAAK,EAAO,aAAa,CAAQ,EAAE,MAAM,GACxD,CAAC,EAUN,YAAY,CAAC,EAAK,CAEhB,IAAI,EAAU,EAAI,MAClB,GAAI,EAAI,SAAS,GACf,EAAU,EAAU,IAAM,EAAI,SAAS,GAEzC,IAAI,EAAmB,GACvB,QAAS,EAAc,EAAI,OAAQ,EAAa,EAAc,EAAY,OACxE,EAAmB,EAAY,KAAK,EAAI,IAAM,EAEhD,OAAO,EAAmB,EAAU,IAAM,EAAI,MAAM,EAUtD,kBAAkB,CAAC,EAAK,CAEtB,OAAO,EAAI,YAAY,EAWzB,qBAAqB,CAAC,EAAK,CAEzB,OAAO,EAAI,QAAQ,GAAK,EAAI,YAAY,EAU1C,iBAAiB,CAAC,EAAQ,CACxB,IAAM,EAAY,CAAC,EAEnB,GAAI,EAAO,WACT,EAAU,KAER,YAAY,EAAO,WAAW,IAAI,CAAC,IAAW,KAAK,UAAU,CAAM,CAAC,EAAE,KAAK,IAAI,GAAG,EAEtF,GAAI,EAAO,eAAiB,QAK1B,GAFoB,EAAO,UAAY,EAAO,UAC3C,EAAO,UAAU,GAAK,OAAO,EAAO,eAAiB,UAEtD,EAAU,KAAK,YAAY,EAAO,yBAA2B,KAAK,UAAU,EAAO,YAAY,GAAG,EAItG,GAAI,EAAO,YAAc,QAAa,EAAO,SAC3C,EAAU,KAAK,WAAW,KAAK,UAAU,EAAO,SAAS,GAAG,EAE9D,GAAI,EAAO,SAAW,OACpB,EAAU,KAAK,QAAQ,EAAO,QAAQ,EAExC,GAAI,EAAU,OAAS,EACrB,MAAO,GAAG,EAAO,gBAAgB,EAAU,KAAK,IAAI,KAGtD,OAAO,EAAO,YAUhB,mBAAmB,CAAC,EAAU,CAC5B,IAAM,EAAY,CAAC,EACnB,GAAI,EAAS,WACX,EAAU,KAER,YAAY,EAAS,WAAW,IAAI,CAAC,IAAW,KAAK,UAAU,CAAM,CAAC,EAAE,KAAK,IAAI,GAAG,EAExF,GAAI,EAAS,eAAiB,OAC5B,EAAU,KAAK,YAAY,EAAS,yBAA2B,KAAK,UAAU,EAAS,YAAY,GAAG,EAExG,GAAI,EAAU,OAAS,EAAG,CACxB,IAAM,EAAkB,IAAI,EAAU,KAAK,IAAI,KAC/C,GAAI,EAAS,YACX,MAAO,GAAG,EAAS,eAAe,IAEpC,OAAO,EAET,OAAO,EAAS,YAWlB,UAAU,CAAC,EAAK,EAAQ,CACtB,IAAM,EAAY,EAAO,SAAS,EAAK,CAAM,EACvC,EAAY,EAAO,WAAa,GAChC,EAAkB,EAClB,EAAqB,EAC3B,SAAS,CAAU,CAAC,EAAM,EAAa,CACrC,GAAI,EAAa,CACf,IAAM,EAAW,GAAG,EAAK,OAAO,EAHT,CAGuC,IAAI,IAClE,OAAO,EAAO,KAAK,EAAU,EALT,EAKsC,EAJnC,CAIiE,EAE1F,OAAO,EAET,SAAS,CAAU,CAAC,EAAW,CAC7B,OAAO,EAAU,KAAK;AAAA,CAAI,EAAE,QAAQ,MAAO,IAAI,OAVzB,CAU+C,CAAC,EAIxE,IAAI,EAAS,CAAC,UAAU,EAAO,aAAa,CAAG,IAAK,EAAE,EAGhD,EAAqB,EAAO,mBAAmB,CAAG,EACxD,GAAI,EAAmB,OAAS,EAC9B,EAAS,EAAO,OAAO,CAAC,EAAO,KAAK,EAAoB,EAAW,CAAC,EAAG,EAAE,CAAC,EAI5E,IAAM,EAAe,EAAO,iBAAiB,CAAG,EAAE,IAAI,CAAC,IAAa,CAClE,OAAO,EAAW,EAAO,aAAa,CAAQ,EAAG,EAAO,oBAAoB,CAAQ,CAAC,EACtF,EACD,GAAI,EAAa,OAAS,EACxB,EAAS,EAAO,OAAO,CAAC,aAAc,EAAW,CAAY,EAAG,EAAE,CAAC,EAIrE,IAAM,EAAa,EAAO,eAAe,CAAG,EAAE,IAAI,CAAC,IAAW,CAC5D,OAAO,EAAW,EAAO,WAAW,CAAM,EAAG,EAAO,kBAAkB,CAAM,CAAC,EAC9E,EACD,GAAI,EAAW,OAAS,EACtB,EAAS,EAAO,OAAO,CAAC,WAAY,EAAW,CAAU,EAAG,EAAE,CAAC,EAGjE,GAAI,KAAK,kBAAmB,CAC1B,IAAM,EAAmB,EAAO,qBAAqB,CAAG,EAAE,IAAI,CAAC,IAAW,CACxE,OAAO,EAAW,EAAO,WAAW,CAAM,EAAG,EAAO,kBAAkB,CAAM,CAAC,EAC9E,EACD,GAAI,EAAiB,OAAS,EAC5B,EAAS,EAAO,OAAO,CAAC,kBAAmB,EAAW,CAAgB,EAAG,EAAE,CAAC,EAKhF,IAAM,EAAc,EAAO,gBAAgB,CAAG,EAAE,IAAI,CAAC,IAAQ,CAC3D,OAAO,EAAW,EAAO,eAAe,CAAG,EAAG,EAAO,sBAAsB,CAAG,CAAC,EAChF,EACD,GAAI,EAAY,OAAS,EACvB,EAAS,EAAO,OAAO,CAAC,YAAa,EAAW,CAAW,EAAG,EAAE,CAAC,EAGnE,OAAO,EAAO,KAAK;AAAA,CAAI,EAWzB,QAAQ,CAAC,EAAK,EAAQ,CACpB,OAAO,KAAK,IACV,EAAO,wBAAwB,EAAK,CAAM,EAC1C,EAAO,8BAA8B,EAAK,CAAM,EAChD,EAAO,4BAA4B,EAAK,CAAM,EAC9C,EAAO,0BAA0B,EAAK,CAAM,CAC9C,EAeF,IAAI,CAAC,EAAK,EAAO,EAAQ,EAAiB,GAAI,CAI5C,IAAM,EAAe,IAAI,OAAO,SAFhB,8BAEoC,EACpD,GAAI,EAAI,MAAM,CAAY,EAAG,OAAO,EAEpC,IAAM,EAAc,EAAQ,EAC5B,GAAI,EAAc,EAAgB,OAAO,EAEzC,IAAM,EAAa,EAAI,MAAM,EAAG,CAAM,EAChC,EAAa,EAAI,MAAM,CAAM,EAAE,QAAQ;AAAA,EAAQ;AAAA,CAAI,EACnD,EAAe,IAAI,OAAO,CAAM,EAEhC,EAAS,MADQ,MAIjB,EAAQ,IAAI,OAAO;AAAA,OAAU,EAAc,OAAO,WAAgB,SAAc,QAAc,GAAG,EACjG,EAAQ,EAAW,MAAM,CAAK,GAAK,CAAC,EAC1C,OAAO,EAAa,EAAM,IAAI,CAAC,EAAM,IAAM,CACzC,GAAI,IAAS;AAAA,EAAM,MAAO,GAC1B,OAAS,EAAI,EAAK,EAAe,IAAM,EAAK,QAAQ,EACrD,EAAE,KAAK;AAAA,CAAI,EAEhB,CAEA,GAAQ,KAAO,qBC7cf,IAAQ,8BAER,MAAM,EAAO,CAQX,WAAW,CAAC,EAAO,EAAa,CAC9B,KAAK,MAAQ,EACb,KAAK,YAAc,GAAe,GAElC,KAAK,SAAW,EAAM,SAAS,GAAG,EAClC,KAAK,SAAW,EAAM,SAAS,GAAG,EAElC,KAAK,SAAW,iBAAiB,KAAK,CAAK,EAC3C,KAAK,UAAY,GACjB,IAAM,EAAc,GAAiB,CAAK,EAI1C,GAHA,KAAK,MAAQ,EAAY,UACzB,KAAK,KAAO,EAAY,SACxB,KAAK,OAAS,GACV,KAAK,KACP,KAAK,OAAS,KAAK,KAAK,WAAW,OAAO,EAE5C,KAAK,aAAe,OACpB,KAAK,wBAA0B,OAC/B,KAAK,UAAY,OACjB,KAAK,OAAS,OACd,KAAK,SAAW,OAChB,KAAK,OAAS,GACd,KAAK,WAAa,OAClB,KAAK,cAAgB,CAAC,EACtB,KAAK,QAAU,OAWjB,OAAO,CAAC,EAAO,EAAa,CAG1B,OAFA,KAAK,aAAe,EACpB,KAAK,wBAA0B,EACxB,KAeT,MAAM,CAAC,EAAK,CAEV,OADA,KAAK,UAAY,EACV,KAeT,SAAS,CAAC,EAAO,CAEf,OADA,KAAK,cAAgB,KAAK,cAAc,OAAO,CAAK,EAC7C,KAgBT,OAAO,CAAC,EAAqB,CAC3B,IAAI,EAAa,EACjB,GAAI,OAAO,IAAwB,SAEjC,EAAa,EAAG,GAAsB,EAAK,EAG7C,OADA,KAAK,QAAU,OAAO,OAAO,KAAK,SAAW,CAAC,EAAG,CAAU,EACpD,KAaT,GAAG,CAAC,EAAM,CAER,OADA,KAAK,OAAS,EACP,KAUT,SAAS,CAAC,EAAI,CAEZ,OADA,KAAK,SAAW,EACT,KAUT,mBAAmB,CAAC,EAAY,GAAM,CAEpC,OADA,KAAK,YAAc,EACZ,KAUT,QAAQ,CAAC,EAAO,GAAM,CAEpB,OADA,KAAK,SAAW,EACT,KAOT,YAAY,CAAC,EAAO,EAAU,CAC5B,GAAI,IAAa,KAAK,eAAiB,MAAM,QAAQ,CAAQ,EAC3D,MAAO,CAAC,CAAK,EAGf,OAAO,EAAS,OAAO,CAAK,EAU9B,OAAO,CAAC,EAAQ,CAWd,OAVA,KAAK,WAAa,EAAO,MAAM,EAC/B,KAAK,SAAW,CAAC,EAAK,IAAa,CACjC,IAAK,KAAK,WAAW,SAAS,CAAG,EAC/B,MAAM,IAAI,GAAqB,uBAAuB,KAAK,WAAW,KAAK,IAAI,IAAI,EAErF,GAAI,KAAK,SACP,OAAO,KAAK,aAAa,EAAK,CAAQ,EAExC,OAAO,GAEF,KAST,IAAI,EAAG,CACL,GAAI,KAAK,KACP,OAAO,KAAK,KAAK,QAAQ,MAAO,EAAE,EAEpC,OAAO,KAAK,MAAM,QAAQ,KAAM,EAAE,EAWpC,aAAa,EAAG,CACd,OAAO,GAAU,KAAK,KAAK,EAAE,QAAQ,OAAQ,EAAE,CAAC,EAWlD,EAAE,CAAC,EAAK,CACN,OAAO,KAAK,QAAU,GAAO,KAAK,OAAS,EAY7C,SAAS,EAAG,CACV,OAAQ,KAAK,WAAa,KAAK,WAAa,KAAK,OAErD,CASA,MAAM,EAAY,CAIhB,WAAW,CAAC,EAAS,CACnB,KAAK,gBAAkB,IAAI,IAC3B,KAAK,gBAAkB,IAAI,IAC3B,KAAK,YAAc,IAAI,IACvB,EAAQ,QAAQ,KAAU,CACxB,GAAI,EAAO,OACT,KAAK,gBAAgB,IAAI,EAAO,cAAc,EAAG,CAAM,EAEvD,UAAK,gBAAgB,IAAI,EAAO,cAAc,EAAG,CAAM,EAE1D,EACD,KAAK,gBAAgB,QAAQ,CAAC,EAAO,IAAQ,CAC3C,GAAI,KAAK,gBAAgB,IAAI,CAAG,EAC9B,KAAK,YAAY,IAAI,CAAG,EAE3B,EAUH,eAAe,CAAC,EAAO,EAAQ,CAC7B,IAAM,EAAY,EAAO,cAAc,EACvC,IAAK,KAAK,YAAY,IAAI,CAAS,EAAG,MAAO,GAG7C,IAAM,EAAS,KAAK,gBAAgB,IAAI,CAAS,EAAE,UAC7C,EAAiB,IAAW,OAAa,EAAS,GACxD,OAAO,EAAO,UAAY,IAAkB,GAEhD,CAUA,SAAS,EAAS,CAAC,EAAK,CACtB,OAAO,EAAI,MAAM,GAAG,EAAE,OAAO,CAAC,EAAK,IAAS,CAC1C,OAAO,EAAM,EAAK,GAAG,YAAY,EAAI,EAAK,MAAM,CAAC,EAClD,EASH,SAAS,EAAgB,CAAC,EAAO,CAC/B,IAAI,EACA,EAGE,EAAY,EAAM,MAAM,QAAQ,EACtC,GAAI,EAAU,OAAS,IAAM,QAAQ,KAAK,EAAU,EAAE,EAAG,EAAY,EAAU,MAAM,EAGrF,GAFA,EAAW,EAAU,MAAM,GAEtB,GAAa,UAAU,KAAK,CAAQ,EACvC,EAAY,EACZ,EAAW,OAEb,MAAO,CAAE,YAAW,UAAS,EAG/B,GAAQ,OAAS,GACjB,GAAQ,iBAAmB,GAC3B,GAAQ,YAAc,qBCtUtB,SAAS,EAAY,CAAC,EAAG,EAAG,CAM1B,GAAI,KAAK,IAAI,EAAE,OAAS,EAAE,MAAM,EARd,EAQ+B,OAAO,KAAK,IAAI,EAAE,OAAQ,EAAE,MAAM,EAGnF,IAAM,EAAI,CAAC,EAGX,QAAS,EAAI,EAAG,GAAK,EAAE,OAAQ,IAC7B,EAAE,GAAK,CAAC,CAAC,EAGX,QAAS,EAAI,EAAG,GAAK,EAAE,OAAQ,IAC7B,EAAE,GAAG,GAAK,EAIZ,QAAS,EAAI,EAAG,GAAK,EAAE,OAAQ,IAC7B,QAAS,EAAI,EAAG,GAAK,EAAE,OAAQ,IAAK,CAClC,IAAI,EAAO,EACX,GAAI,EAAE,EAAI,KAAO,EAAE,EAAI,GACrB,EAAO,EAEP,OAAO,EAQT,GANA,EAAE,GAAG,GAAK,KAAK,IACb,EAAE,EAAI,GAAG,GAAK,EACd,EAAE,GAAG,EAAI,GAAK,EACd,EAAE,EAAI,GAAG,EAAI,GAAK,CACpB,EAEI,EAAI,GAAK,EAAI,GAAK,EAAE,EAAI,KAAO,EAAE,EAAI,IAAM,EAAE,EAAI,KAAO,EAAE,EAAI,GAChE,EAAE,GAAG,GAAK,KAAK,IAAI,EAAE,GAAG,GAAI,EAAE,EAAI,GAAG,EAAI,GAAK,CAAC,EAKrD,OAAO,EAAE,EAAE,QAAQ,EAAE,QAWvB,SAAS,EAAc,CAAC,EAAM,EAAY,CACxC,IAAK,GAAc,EAAW,SAAW,EAAG,MAAO,GAEnD,EAAa,MAAM,KAAK,IAAI,IAAI,CAAU,CAAC,EAE3C,IAAM,EAAmB,EAAK,WAAW,IAAI,EAC7C,GAAI,EACF,EAAO,EAAK,MAAM,CAAC,EACnB,EAAa,EAAW,IAAI,KAAa,EAAU,MAAM,CAAC,CAAC,EAG7D,IAAI,EAAU,CAAC,EACX,EAlEc,EAmEZ,EAAgB,IAmBtB,GAlBA,EAAW,QAAQ,CAAC,IAAc,CAChC,GAAI,EAAU,QAAU,EAAG,OAE3B,IAAM,EAAW,GAAa,EAAM,CAAS,EACvC,EAAS,KAAK,IAAI,EAAK,OAAQ,EAAU,MAAM,EAErD,IADoB,EAAS,GAAY,EACxB,GACf,GAAI,EAAW,EAEb,EAAe,EACf,EAAU,CAAC,CAAS,EACf,QAAI,IAAa,EACtB,EAAQ,KAAK,CAAS,GAG3B,EAED,EAAQ,KAAK,CAAC,EAAG,IAAM,EAAE,cAAc,CAAC,CAAC,EACrC,EACF,EAAU,EAAQ,IAAI,KAAa,KAAK,GAAW,EAGrD,GAAI,EAAQ,OAAS,EACnB,MAAO;AAAA,uBAA0B,EAAQ,KAAK,IAAI,MAEpD,GAAI,EAAQ,SAAW,EACrB,MAAO;AAAA,gBAAmB,EAAQ,OAEpC,MAAO,GAGT,GAAQ,eAAiB,qBCnGzB,IAAM,qBAAiC,aACjC,4BACA,mBACA,iBACA,sBAEE,YAAU,+BACV,yBACA,eACA,UAAQ,oBAAkB,sBAC1B,wBAER,MAAM,WAAgB,EAAa,CAOjC,WAAW,CAAC,EAAM,CAChB,MAAM,EAEN,KAAK,SAAW,CAAC,EAEjB,KAAK,QAAU,CAAC,EAChB,KAAK,OAAS,KACd,KAAK,oBAAsB,GAC3B,KAAK,sBAAwB,GAE7B,KAAK,oBAAsB,CAAC,EAC5B,KAAK,MAAQ,KAAK,oBAElB,KAAK,KAAO,CAAC,EACb,KAAK,QAAU,CAAC,EAChB,KAAK,cAAgB,CAAC,EACtB,KAAK,YAAc,KACnB,KAAK,MAAQ,GAAQ,GACrB,KAAK,cAAgB,CAAC,EACtB,KAAK,oBAAsB,CAAC,EAC5B,KAAK,0BAA4B,GACjC,KAAK,eAAiB,KACtB,KAAK,mBAAqB,GAC1B,KAAK,gBAAkB,KACvB,KAAK,eAAiB,KACtB,KAAK,oBAAsB,KAC3B,KAAK,cAAgB,KACrB,KAAK,SAAW,CAAC,EACjB,KAAK,6BAA+B,GACpC,KAAK,aAAe,GACpB,KAAK,SAAW,GAChB,KAAK,iBAAmB,OACxB,KAAK,yBAA2B,GAChC,KAAK,oBAAsB,GAC3B,KAAK,gBAAkB,CAAC,EAExB,KAAK,oBAAsB,GAC3B,KAAK,0BAA4B,GAGjC,KAAK,qBAAuB,CAC1B,SAAU,CAAC,IAAQ,EAAQ,OAAO,MAAM,CAAG,EAC3C,SAAU,CAAC,IAAQ,EAAQ,OAAO,MAAM,CAAG,EAC3C,gBAAiB,IAAM,EAAQ,OAAO,MAAQ,EAAQ,OAAO,QAAU,OACvE,gBAAiB,IAAM,EAAQ,OAAO,MAAQ,EAAQ,OAAO,QAAU,OACvE,YAAa,CAAC,EAAK,IAAU,EAAM,CAAG,CACxC,EAEA,KAAK,QAAU,GACf,KAAK,eAAiB,GACtB,KAAK,WAAa,aAClB,KAAK,iBAAmB,2BACxB,KAAK,eAAiB,KACtB,KAAK,cAAgB,SACrB,KAAK,wBAA0B,OAC/B,KAAK,iBAAmB,OACxB,KAAK,wBAA0B,iBAC/B,KAAK,wBAA0B,2BAC/B,KAAK,mBAAqB,CAAC,EAW7B,qBAAqB,CAAC,EAAe,CAmBnC,OAlBA,KAAK,qBAAuB,EAAc,qBAC1C,KAAK,eAAiB,EAAc,eACpC,KAAK,WAAa,EAAc,WAChC,KAAK,iBAAmB,EAAc,iBACtC,KAAK,eAAiB,EAAc,eACpC,KAAK,cAAgB,EAAc,cACnC,KAAK,iBAAmB,EAAc,iBACtC,KAAK,wBAA0B,EAAc,wBAC7C,KAAK,wBAA0B,EAAc,wBAC7C,KAAK,mBAAqB,EAAc,mBACxC,KAAK,cAAgB,EAAc,cACnC,KAAK,0BAA4B,EAAc,0BAC/C,KAAK,6BAA+B,EAAc,6BAClD,KAAK,sBAAwB,EAAc,sBAC3C,KAAK,yBAA2B,EAAc,yBAC9C,KAAK,oBAAsB,EAAc,oBACzC,KAAK,0BAA4B,EAAc,0BAExC,KAQT,uBAAuB,EAAG,CACxB,IAAM,EAAS,CAAC,EAChB,QAAS,EAAU,KAAM,EAAS,EAAU,EAAQ,OAClD,EAAO,KAAK,CAAO,EAErB,OAAO,EA4BT,OAAO,CAAC,EAAa,EAAsB,EAAU,CACnD,IAAI,EAAO,EACP,EAAO,EACX,GAAI,OAAO,IAAS,UAAY,IAAS,KACvC,EAAO,EACP,EAAO,KAET,EAAO,GAAQ,CAAC,EAChB,KAAS,EAAM,GAAQ,EAAY,MAAM,eAAe,EAElD,EAAM,KAAK,cAAc,CAAI,EACnC,GAAI,EACF,EAAI,YAAY,CAAI,EACpB,EAAI,mBAAqB,GAE3B,GAAI,EAAK,UAAW,KAAK,oBAAsB,EAAI,MAGnD,GAFA,EAAI,WAAa,EAAK,QAAU,EAAK,QACrC,EAAI,gBAAkB,EAAK,gBAAkB,KACzC,EAAM,EAAI,UAAU,CAAI,EAK5B,GAJA,KAAK,SAAS,KAAK,CAAG,EACtB,EAAI,OAAS,KACb,EAAI,sBAAsB,IAAI,EAE1B,EAAM,OAAO,KACjB,OAAO,EAaT,aAAa,CAAC,EAAM,CAClB,OAAO,IAAI,GAAQ,CAAI,EAUzB,UAAU,EAAG,CACX,OAAO,OAAO,OAAO,IAAI,GAAQ,KAAK,cAAc,CAAC,EAWvD,aAAa,CAAC,EAAe,CAC3B,GAAI,IAAkB,OAAW,OAAO,KAAK,mBAG7C,OADA,KAAK,mBAAqB,EACnB,KAsBT,eAAe,CAAC,EAAe,CAC7B,GAAI,IAAkB,OAAW,OAAO,KAAK,qBAG7C,OADA,OAAO,OAAO,KAAK,qBAAsB,CAAa,EAC/C,KAST,kBAAkB,CAAC,EAAc,GAAM,CACrC,GAAI,OAAO,IAAgB,SAAU,IAAgB,EAErD,OADA,KAAK,oBAAsB,EACpB,KAST,wBAAwB,CAAC,EAAoB,GAAM,CAEjD,OADA,KAAK,4BAA8B,EAC5B,KAaT,UAAU,CAAC,EAAK,EAAM,CACpB,IAAK,EAAI,MACP,MAAM,IAAI,MAAM;AAAA,2DACqC,EAIvD,GADA,EAAO,GAAQ,CAAC,EACZ,EAAK,UAAW,KAAK,oBAAsB,EAAI,MACnD,GAAI,EAAK,QAAU,EAAK,OAAQ,EAAI,QAAU,GAI9C,OAFA,KAAK,SAAS,KAAK,CAAG,EACtB,EAAI,OAAS,KACN,KAcT,cAAc,CAAC,EAAM,EAAa,CAChC,OAAO,IAAI,GAAS,EAAM,CAAW,EAmBvC,QAAQ,CAAC,EAAM,EAAa,EAAI,EAAc,CAC5C,IAAM,EAAW,KAAK,eAAe,EAAM,CAAW,EACtD,GAAI,OAAO,IAAO,WAChB,EAAS,QAAQ,CAAY,EAAE,UAAU,CAAE,EAE3C,OAAS,QAAQ,CAAE,EAGrB,OADA,KAAK,YAAY,CAAQ,EAClB,KAeT,SAAS,CAAC,EAAO,CAIf,OAHA,EAAM,KAAK,EAAE,MAAM,IAAI,EAAE,QAAQ,CAAC,IAAW,CAC3C,KAAK,SAAS,CAAM,EACrB,EACM,KAST,WAAW,CAAC,EAAU,CACpB,IAAM,EAAmB,KAAK,oBAAoB,MAAM,EAAE,EAAE,GAC5D,GAAI,GAAoB,EAAiB,SACvC,MAAM,IAAI,MAAM,2CAA2C,EAAiB,KAAK,IAAI,EAEvF,GAAI,EAAS,UAAY,EAAS,eAAiB,QAAa,EAAS,WAAa,OACpF,MAAM,IAAI,MAAM,2DAA2D,EAAS,KAAK,IAAI,EAG/F,OADA,KAAK,oBAAoB,KAAK,CAAQ,EAC/B,KAaT,cAAc,CAAC,EAAqB,EAAa,CAC/C,GAAI,IAAwB,GAC1B,KAAK,wBAA0B,GAC1B,KAEL,GADA,KAAK,wBAA0B,GAC3B,OAAO,IAAwB,SACjC,KAAK,iBAAmB,EAAoB,MAAM,GAAG,EAAE,GACvD,KAAK,wBAA0B,EAEjC,KAAK,wBAA0B,GAAe,KAAK,wBAErD,OAAO,KAQT,uBAAuB,EAAG,CACxB,GAAI,KAAK,0BAA4B,OACnC,OAAO,KAAK,SAAS,SAAW,KAAK,iBAAmB,KAAK,aAAa,MAAM,EAElF,OAAO,KAAK,wBAWd,IAAI,CAAC,EAAO,EAAU,CACpB,IAAM,EAAgB,CAAC,gBAAiB,YAAa,YAAY,EACjE,IAAK,EAAc,SAAS,CAAK,EAC/B,MAAM,IAAI,MAAM,gDAAgD;AAAA,oBAClD,EAAc,KAAK,MAAM,IAAI,EAE7C,GAAI,KAAK,gBAAgB,GACvB,KAAK,gBAAgB,GAAO,KAAK,CAAQ,EAEzC,UAAK,gBAAgB,GAAS,CAAC,CAAQ,EAEzC,OAAO,KAUT,YAAY,CAAC,EAAI,CACf,GAAI,EACF,KAAK,cAAgB,EAErB,UAAK,cAAgB,CAAC,IAAQ,CAC5B,GAAI,EAAI,OAAS,mCACf,MAAM,GAMZ,OAAO,KAaT,KAAK,CAAC,EAAU,EAAM,EAAS,CAC7B,GAAI,KAAK,cACP,KAAK,cAAc,IAAI,GAAe,EAAU,EAAM,CAAO,CAAC,EAGhE,EAAQ,KAAK,CAAQ,EAkBvB,MAAM,CAAC,EAAI,CACT,IAAM,EAAW,CAAC,IAAS,CAEzB,IAAM,EAAoB,KAAK,oBAAoB,OAC7C,EAAa,EAAK,MAAM,EAAG,CAAiB,EAClD,GAAI,KAAK,0BACP,EAAW,GAAqB,KAEhC,OAAW,GAAqB,KAAK,KAAK,EAI5C,OAFA,EAAW,KAAK,IAAI,EAEb,EAAG,MAAM,KAAM,CAAU,GAGlC,OADA,KAAK,eAAiB,EACf,KAcT,YAAY,CAAC,EAAO,EAAa,CAC/B,OAAO,IAAI,GAAO,EAAO,CAAW,EAatC,aAAa,CAAC,EAAQ,EAAO,EAAU,EAAwB,CAC7D,GAAI,CACF,OAAO,EAAO,SAAS,EAAO,CAAQ,EACtC,MAAO,EAAK,CACZ,GAAI,EAAI,OAAS,4BAA6B,CAC5C,IAAM,EAAU,GAAG,KAA0B,EAAI,UACjD,KAAK,MAAM,EAAS,CAAE,SAAU,EAAI,SAAU,KAAM,EAAI,IAAK,CAAC,EAEhE,MAAM,GAUV,SAAS,CAAC,EAAQ,CAChB,IAAM,EAAQ,EAAO,KAAK,EACpB,EAAO,EAAO,cAAc,EAGlC,GAAI,EAAO,OAAQ,CAEjB,IAAM,EAAmB,EAAO,KAAK,QAAQ,SAAU,IAAI,EAC3D,IAAK,KAAK,YAAY,CAAgB,EACpC,KAAK,yBAAyB,EAAM,EAAO,eAAiB,OAAY,GAAO,EAAO,aAAc,SAAS,EAE1G,QAAI,EAAO,eAAiB,OACjC,KAAK,yBAAyB,EAAM,EAAO,aAAc,SAAS,EAIpE,KAAK,QAAQ,KAAK,CAAM,EAGxB,IAAM,EAAoB,CAAC,EAAK,EAAqB,IAAgB,CAGnE,GAAI,GAAO,MAAQ,EAAO,YAAc,OACtC,EAAM,EAAO,UAIf,IAAM,EAAW,KAAK,eAAe,CAAI,EACzC,GAAI,IAAQ,MAAQ,EAAO,SACzB,EAAM,KAAK,cAAc,EAAQ,EAAK,EAAU,CAAmB,EAC9D,QAAI,IAAQ,MAAQ,EAAO,SAChC,EAAM,EAAO,aAAa,EAAK,CAAQ,EAIzC,GAAI,GAAO,KACT,GAAI,EAAO,OACT,EAAM,GACD,QAAI,EAAO,UAAU,GAAK,EAAO,SACtC,EAAM,GAEN,OAAM,GAGV,KAAK,yBAAyB,EAAM,EAAK,CAAW,GAQtD,GALA,KAAK,GAAG,UAAY,EAAO,CAAC,IAAQ,CAClC,IAAM,EAAsB,kBAAkB,EAAO,oBAAoB,iBACzE,EAAkB,EAAK,EAAqB,KAAK,EAClD,EAEG,EAAO,OACT,KAAK,GAAG,aAAe,EAAO,CAAC,IAAQ,CACrC,IAAM,EAAsB,kBAAkB,EAAO,iBAAiB,gBAAkB,EAAO,sBAC/F,EAAkB,EAAK,EAAqB,KAAK,EAClD,EAGH,OAAO,KAQT,SAAS,CAAC,EAAQ,EAAO,EAAa,EAAI,EAAc,CACtD,GAAI,OAAO,IAAU,UAAY,aAAiB,GAChD,MAAM,IAAI,MAAM,iFAAiF,EAEnG,IAAM,EAAS,KAAK,aAAa,EAAO,CAAW,EAEnD,GADA,EAAO,sBAAsB,EAAO,SAAS,EACzC,OAAO,IAAO,WAChB,EAAO,QAAQ,CAAY,EAAE,UAAU,CAAE,EACpC,QAAI,aAAc,OAAQ,CAE/B,IAAM,EAAQ,EACd,EAAK,CAAC,EAAK,IAAQ,CACjB,IAAM,EAAI,EAAM,KAAK,CAAG,EACxB,OAAO,EAAI,EAAE,GAAK,GAEpB,EAAO,QAAQ,CAAY,EAAE,UAAU,CAAE,EAEzC,OAAO,QAAQ,CAAE,EAGnB,OAAO,KAAK,UAAU,CAAM,EAyB9B,MAAM,CAAC,EAAO,EAAa,EAAU,EAAc,CACjD,OAAO,KAAK,UAAU,CAAC,EAAG,EAAO,EAAa,EAAU,CAAY,EAgBtE,cAAc,CAAC,EAAO,EAAa,EAAU,EAAc,CACzD,OAAO,KAAK,UAAU,CAAE,UAAW,EAAK,EAAG,EAAO,EAAa,EAAU,CAAY,EAavF,2BAA2B,CAAC,EAAU,GAAM,CAE1C,OADA,KAAK,+BAAiC,EAC/B,KAST,kBAAkB,CAAC,EAAe,GAAM,CAEtC,OADA,KAAK,sBAAwB,EACtB,KAST,oBAAoB,CAAC,EAAc,GAAM,CAEvC,OADA,KAAK,wBAA0B,EACxB,KAUT,uBAAuB,CAAC,EAAa,GAAM,CAEzC,OADA,KAAK,2BAA6B,EAC3B,KAYT,kBAAkB,CAAC,EAAc,GAAM,CAErC,GADA,KAAK,sBAAwB,IACvB,KAAK,QAAU,IAAgB,KAAK,OAAO,yBAC/C,MAAM,IAAI,MAAM,qGAAqG,EAEvH,OAAO,KAWT,wBAAwB,CAAC,EAAoB,GAAM,CACjD,GAAI,KAAK,QAAQ,OACf,MAAM,IAAI,MAAM,wDAAwD,EAM1E,OADA,KAAK,4BAA8B,EAC5B,KAUT,cAAc,CAAC,EAAK,CAClB,GAAI,KAAK,0BACP,OAAO,KAAK,GAEd,OAAO,KAAK,cAAc,GAW5B,cAAc,CAAC,EAAK,EAAO,CACzB,OAAO,KAAK,yBAAyB,EAAK,EAAO,MAAS,EAY5D,wBAAwB,CAAC,EAAK,EAAO,EAAQ,CAC3C,GAAI,KAAK,0BACP,KAAK,GAAO,EAEZ,UAAK,cAAc,GAAO,EAG5B,OADA,KAAK,oBAAoB,GAAO,EACzB,KAWT,oBAAoB,CAAC,EAAK,CACxB,OAAO,KAAK,oBAAoB,GAWlC,+BAA+B,CAAC,EAAK,CAEnC,IAAI,EAMJ,OALA,KAAK,wBAAwB,EAAE,QAAQ,CAAC,IAAQ,CAC9C,GAAI,EAAI,qBAAqB,CAAG,IAAM,OACpC,EAAS,EAAI,qBAAqB,CAAG,EAExC,EACM,EAUT,gBAAgB,CAAC,EAAM,EAAc,CACnC,GAAI,IAAS,SAAc,MAAM,QAAQ,CAAI,EAC3C,MAAM,IAAI,MAAM,qDAAqD,EAKvE,GAHA,EAAe,GAAgB,CAAC,EAG5B,IAAS,QAGX,GAFA,EAAO,EAAQ,KAEX,EAAQ,UAAY,EAAQ,SAAS,SACvC,EAAa,KAAO,WAGxB,KAAK,QAAU,EAAK,MAAM,EAG1B,IAAI,EACJ,OAAQ,EAAa,UACd,YACA,OACH,KAAK,YAAc,EAAK,GACxB,EAAW,EAAK,MAAM,CAAC,EACvB,UACG,WAEH,GAAI,EAAQ,WACV,KAAK,YAAc,EAAK,GACxB,EAAW,EAAK,MAAM,CAAC,EAEvB,OAAW,EAAK,MAAM,CAAC,EAEzB,UACG,OACH,EAAW,EAAK,MAAM,CAAC,EACvB,cAEA,MAAM,IAAI,MAAM,oCAAoC,EAAa,SAAS,EAI9E,IAAK,KAAK,OAAS,KAAK,YAAa,KAAK,iBAAiB,KAAK,WAAW,EAG3E,OAFA,KAAK,MAAQ,KAAK,OAAS,UAEpB,EAoBT,KAAK,CAAC,EAAM,EAAc,CACxB,IAAM,EAAW,KAAK,iBAAiB,EAAM,CAAY,EAGzD,OAFA,KAAK,cAAc,CAAC,EAAG,CAAQ,EAExB,UAsBH,WAAU,CAAC,EAAM,EAAc,CACnC,IAAM,EAAW,KAAK,iBAAiB,EAAM,CAAY,EAGzD,OAFA,MAAM,KAAK,cAAc,CAAC,EAAG,CAAQ,EAE9B,KAST,kBAAkB,CAAC,EAAY,EAAM,CACnC,EAAO,EAAK,MAAM,EAClB,IAAI,EAAiB,GACf,EAAY,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAM,EAEvD,SAAS,CAAQ,CAAC,EAAS,EAAU,CAEnC,IAAM,EAAW,GAAK,QAAQ,EAAS,CAAQ,EAC/C,GAAI,GAAG,WAAW,CAAQ,EAAG,OAAO,EAGpC,GAAI,EAAU,SAAS,GAAK,QAAQ,CAAQ,CAAC,EAAG,OAGhD,IAAM,EAAW,EAAU,KAAK,KAAO,GAAG,WAAW,GAAG,IAAW,GAAK,CAAC,EACzE,GAAI,EAAU,MAAO,GAAG,IAAW,IAEnC,OAIF,KAAK,iCAAiC,EACtC,KAAK,4BAA4B,EAGjC,IAAI,EAAiB,EAAW,iBAAmB,GAAG,KAAK,SAAS,EAAW,QAC3E,EAAgB,KAAK,gBAAkB,GAC3C,GAAI,KAAK,YAAa,CACpB,IAAI,EACJ,GAAI,CACF,EAAqB,GAAG,aAAa,KAAK,WAAW,EACrD,MAAO,EAAK,CACZ,EAAqB,KAAK,YAE5B,EAAgB,GAAK,QAAQ,GAAK,QAAQ,CAAkB,EAAG,CAAa,EAI9E,GAAI,EAAe,CACjB,IAAI,EAAY,EAAS,EAAe,CAAc,EAGtD,IAAK,IAAc,EAAW,iBAAmB,KAAK,YAAa,CACjE,IAAM,EAAa,GAAK,SAAS,KAAK,YAAa,GAAK,QAAQ,KAAK,WAAW,CAAC,EACjF,GAAI,IAAe,KAAK,MACtB,EAAY,EAAS,EAAe,GAAG,KAAc,EAAW,OAAO,EAG3E,EAAiB,GAAa,EAGhC,EAAiB,EAAU,SAAS,GAAK,QAAQ,CAAc,CAAC,EAEhE,IAAI,EACJ,GAAI,EAAQ,WAAa,QACvB,GAAI,EACF,EAAK,QAAQ,CAAc,EAE3B,EAAO,GAA2B,EAAQ,QAAQ,EAAE,OAAO,CAAI,EAE/D,EAAO,GAAa,MAAM,EAAQ,KAAK,GAAI,EAAM,CAAE,MAAO,SAAU,CAAC,EAErE,OAAO,GAAa,MAAM,EAAgB,EAAM,CAAE,MAAO,SAAU,CAAC,EAGtE,OAAK,QAAQ,CAAc,EAE3B,EAAO,GAA2B,EAAQ,QAAQ,EAAE,OAAO,CAAI,EAC/D,EAAO,GAAa,MAAM,EAAQ,SAAU,EAAM,CAAE,MAAO,SAAU,CAAC,EAGxE,IAAK,EAAK,OACQ,CAAC,UAAW,UAAW,UAAW,SAAU,QAAQ,EAC5D,QAAQ,CAAC,IAAW,CAE1B,EAAQ,GAAG,EAAQ,IAAM,CACvB,GAAI,EAAK,SAAW,IAAS,EAAK,WAAa,KAC7C,EAAK,KAAK,CAAM,EAEnB,EACF,EAKH,IAAM,EAAe,KAAK,cAC1B,IAAK,EACH,EAAK,GAAG,QAAS,EAAQ,KAAK,KAAK,CAAO,CAAC,EAE3C,OAAK,GAAG,QAAS,IAAM,CACrB,EAAa,IAAI,GAAe,EAAQ,UAAY,EAAG,mCAAoC,SAAS,CAAC,EACtG,EAEH,EAAK,GAAG,QAAS,CAAC,IAAQ,CAExB,GAAI,EAAI,OAAS,SAAU,CACzB,IAAM,EAAuB,EACzB,wDAAwD,KACxD,kGACE,EAAoB,IAAI;AAAA,SAC7B,EAAW;AAAA;AAAA,KAEf,IACG,MAAM,IAAI,MAAM,CAAiB,EAE5B,QAAI,EAAI,OAAS,SACtB,MAAM,IAAI,MAAM,IAAI,mBAAgC,EAEtD,IAAK,EACH,EAAQ,KAAK,CAAC,EACT,KACL,IAAM,EAAe,IAAI,GAAe,EAAG,mCAAoC,SAAS,EACxF,EAAa,YAAc,EAC3B,EAAa,CAAY,GAE5B,EAGD,KAAK,eAAiB,EAOxB,mBAAmB,CAAC,EAAa,EAAU,EAAS,CAClD,IAAM,EAAa,KAAK,aAAa,CAAW,EAChD,IAAK,EAAY,KAAK,KAAK,CAAE,MAAO,EAAK,CAAC,EAE1C,IAAI,EASJ,OARA,EAAe,KAAK,2BAA2B,EAAc,EAAY,eAAe,EACxF,EAAe,KAAK,aAAa,EAAc,IAAM,CACnD,GAAI,EAAW,mBACb,KAAK,mBAAmB,EAAY,EAAS,OAAO,CAAO,CAAC,EAE5D,YAAO,EAAW,cAAc,EAAU,CAAO,EAEpD,EACM,EAUT,oBAAoB,CAAC,EAAgB,CACnC,IAAK,EACH,KAAK,KAAK,EAEZ,IAAM,EAAa,KAAK,aAAa,CAAc,EACnD,GAAI,IAAe,EAAW,mBAC5B,EAAW,KAAK,EAIlB,OAAO,KAAK,oBAAoB,EAAgB,CAAC,EAAG,CAClD,KAAK,eAAiB,KAAK,cAC7B,CAAC,EASH,uBAAuB,EAAG,CAQxB,GANA,KAAK,oBAAoB,QAAQ,CAAC,EAAK,IAAM,CAC3C,GAAI,EAAI,UAAY,KAAK,KAAK,IAAM,KAClC,KAAK,gBAAgB,EAAI,KAAK,CAAC,EAElC,EAEG,KAAK,oBAAoB,OAAS,GAAK,KAAK,oBAAoB,KAAK,oBAAoB,OAAS,GAAG,SACvG,OAEF,GAAI,KAAK,KAAK,OAAS,KAAK,oBAAoB,OAC9C,KAAK,iBAAiB,KAAK,IAAI,EAUnC,iBAAiB,EAAG,CAClB,IAAM,EAAa,CAAC,EAAU,EAAO,IAAa,CAEhD,IAAI,EAAc,EAClB,GAAI,IAAU,MAAQ,EAAS,SAAU,CACvC,IAAM,EAAsB,kCAAkC,+BAAmC,EAAS,KAAK,MAC/G,EAAc,KAAK,cAAc,EAAU,EAAO,EAAU,CAAmB,EAEjF,OAAO,GAGT,KAAK,wBAAwB,EAE7B,IAAM,EAAgB,CAAC,EACvB,KAAK,oBAAoB,QAAQ,CAAC,EAAa,IAAU,CACvD,IAAI,EAAQ,EAAY,aACxB,GAAI,EAAY,UAEd,GAAI,EAAQ,KAAK,KAAK,QAEpB,GADA,EAAQ,KAAK,KAAK,MAAM,CAAK,EACzB,EAAY,SACd,EAAQ,EAAM,OAAO,CAAC,EAAW,IAAM,CACrC,OAAO,EAAW,EAAa,EAAG,CAAS,GAC1C,EAAY,YAAY,EAExB,QAAI,IAAU,OACnB,EAAQ,CAAC,EAEN,QAAI,EAAQ,KAAK,KAAK,QAE3B,GADA,EAAQ,KAAK,KAAK,GACd,EAAY,SACd,EAAQ,EAAW,EAAa,EAAO,EAAY,YAAY,EAGnE,EAAc,GAAS,EACxB,EACD,KAAK,cAAgB,EAYvB,YAAY,CAAC,EAAS,EAAI,CAExB,GAAI,GAAW,EAAQ,MAAQ,OAAO,EAAQ,OAAS,WAErD,OAAO,EAAQ,KAAK,IAAM,EAAG,CAAC,EAGhC,OAAO,EAAG,EAWZ,iBAAiB,CAAC,EAAS,EAAO,CAChC,IAAI,EAAS,EACP,EAAQ,CAAC,EASf,GARA,KAAK,wBAAwB,EAC1B,QAAQ,EACR,OAAO,KAAO,EAAI,gBAAgB,KAAW,MAAS,EACtD,QAAQ,KAAiB,CACxB,EAAc,gBAAgB,GAAO,QAAQ,CAAC,IAAa,CACzD,EAAM,KAAK,CAAE,gBAAe,UAAS,CAAC,EACvC,EACF,EACC,IAAU,aACZ,EAAM,QAAQ,EAQhB,OALA,EAAM,QAAQ,CAAC,IAAe,CAC5B,EAAS,KAAK,aAAa,EAAQ,IAAM,CACvC,OAAO,EAAW,SAAS,EAAW,cAAe,IAAI,EAC1D,EACF,EACM,EAYT,0BAA0B,CAAC,EAAS,EAAY,EAAO,CACrD,IAAI,EAAS,EACb,GAAI,KAAK,gBAAgB,KAAW,OAClC,KAAK,gBAAgB,GAAO,QAAQ,CAAC,IAAS,CAC5C,EAAS,KAAK,aAAa,EAAQ,IAAM,CACvC,OAAO,EAAK,KAAM,CAAU,EAC7B,EACF,EAEH,OAAO,EAUT,aAAa,CAAC,EAAU,EAAS,CAC/B,IAAM,EAAS,KAAK,aAAa,CAAO,EAOxC,GANA,KAAK,iBAAiB,EACtB,KAAK,qBAAqB,EAC1B,EAAW,EAAS,OAAO,EAAO,QAAQ,EAC1C,EAAU,EAAO,QACjB,KAAK,KAAO,EAAS,OAAO,CAAO,EAE/B,GAAY,KAAK,aAAa,EAAS,EAAE,EAC3C,OAAO,KAAK,oBAAoB,EAAS,GAAI,EAAS,MAAM,CAAC,EAAG,CAAO,EAEzE,GAAI,KAAK,wBAAwB,GAAK,EAAS,KAAO,KAAK,iBACzD,OAAO,KAAK,qBAAqB,EAAS,EAAE,EAE9C,GAAI,KAAK,oBAEP,OADA,GAAsB,KAAM,CAAO,EAC5B,KAAK,oBAAoB,KAAK,oBAAqB,EAAU,CAAO,EAE7E,GAAI,KAAK,SAAS,QAAU,KAAK,KAAK,SAAW,IAAM,KAAK,iBAAmB,KAAK,oBAElF,KAAK,KAAK,CAAE,MAAO,EAAK,CAAC,EAG3B,GAAsB,KAAM,EAAO,OAAO,EAC1C,KAAK,iCAAiC,EACtC,KAAK,4BAA4B,EAGjC,IAAM,EAAyB,IAAM,CACnC,GAAI,EAAO,QAAQ,OAAS,EAC1B,KAAK,cAAc,EAAO,QAAQ,EAAE,GAIlC,EAAe,WAAW,KAAK,KAAK,IAC1C,GAAI,KAAK,eAAgB,CACvB,EAAuB,EACvB,KAAK,kBAAkB,EAEvB,IAAI,EAGJ,GAFA,EAAe,KAAK,kBAAkB,EAAc,WAAW,EAC/D,EAAe,KAAK,aAAa,EAAc,IAAM,KAAK,eAAe,KAAK,aAAa,CAAC,EACxF,KAAK,OACP,EAAe,KAAK,aAAa,EAAc,IAAM,CACnD,KAAK,OAAO,KAAK,EAAc,EAAU,CAAO,EACjD,EAGH,OADA,EAAe,KAAK,kBAAkB,EAAc,YAAY,EACzD,EAET,GAAI,KAAK,QAAU,KAAK,OAAO,cAAc,CAAY,EACvD,EAAuB,EACvB,KAAK,kBAAkB,EACvB,KAAK,OAAO,KAAK,EAAc,EAAU,CAAO,EAC3C,QAAI,EAAS,OAAQ,CAC1B,GAAI,KAAK,aAAa,GAAG,EACvB,OAAO,KAAK,oBAAoB,IAAK,EAAU,CAAO,EAExD,GAAI,KAAK,cAAc,WAAW,EAEhC,KAAK,KAAK,YAAa,EAAU,CAAO,EACnC,QAAI,KAAK,SAAS,OACvB,KAAK,eAAe,EAEpB,OAAuB,EACvB,KAAK,kBAAkB,EAEpB,QAAI,KAAK,SAAS,OACvB,EAAuB,EAEvB,KAAK,KAAK,CAAE,MAAO,EAAK,CAAC,EAEzB,OAAuB,EACvB,KAAK,kBAAkB,EAU3B,YAAY,CAAC,EAAM,CACjB,IAAK,EAAM,OACX,OAAO,KAAK,SAAS,KAAK,KAAO,EAAI,QAAU,GAAQ,EAAI,SAAS,SAAS,CAAI,CAAC,EAWpF,WAAW,CAAC,EAAK,CACf,OAAO,KAAK,QAAQ,KAAK,KAAU,EAAO,GAAG,CAAG,CAAC,EAUnD,gCAAgC,EAAG,CAEjC,KAAK,wBAAwB,EAAE,QAAQ,CAAC,IAAQ,CAC9C,EAAI,QAAQ,QAAQ,CAAC,IAAa,CAChC,GAAI,EAAS,WAAc,EAAI,eAAe,EAAS,cAAc,CAAC,IAAM,OAC1E,EAAI,4BAA4B,CAAQ,EAE3C,EACF,EAQH,gCAAgC,EAAG,CACjC,IAAM,EAA2B,KAAK,QAAQ,OAC5C,CAAC,IAAW,CACV,IAAM,EAAY,EAAO,cAAc,EACvC,GAAI,KAAK,eAAe,CAAS,IAAM,OACrC,MAAO,GAET,OAAO,KAAK,qBAAqB,CAAS,IAAM,UAEpD,EAE+B,EAAyB,OACtD,CAAC,IAAW,EAAO,cAAc,OAAS,CAC5C,EAEuB,QAAQ,CAAC,IAAW,CACzC,IAAM,EAAwB,EAAyB,KAAK,CAAC,IAC3D,EAAO,cAAc,SAAS,EAAQ,cAAc,CAAC,CACvD,EACA,GAAI,EACF,KAAK,mBAAmB,EAAQ,CAAqB,EAExD,EASH,2BAA2B,EAAG,CAE5B,KAAK,wBAAwB,EAAE,QAAQ,CAAC,IAAQ,CAC9C,EAAI,iCAAiC,EACtC,EAmBH,YAAY,CAAC,EAAM,CACjB,IAAM,EAAW,CAAC,EACZ,EAAU,CAAC,EACb,EAAO,EACL,EAAO,EAAK,MAAM,EAExB,SAAS,CAAW,CAAC,EAAK,CACxB,OAAO,EAAI,OAAS,GAAK,EAAI,KAAO,IAItC,IAAI,EAAuB,KAC3B,MAAO,EAAK,OAAQ,CAClB,IAAM,EAAM,EAAK,MAAM,EAGvB,GAAI,IAAQ,KAAM,CAChB,GAAI,IAAS,EAAS,EAAK,KAAK,CAAG,EACnC,EAAK,KAAK,GAAG,CAAI,EACjB,MAGF,GAAI,IAAyB,EAAY,CAAG,EAAG,CAC7C,KAAK,KAAK,UAAU,EAAqB,KAAK,IAAK,CAAG,EACtD,SAIF,GAFA,EAAuB,KAEnB,EAAY,CAAG,EAAG,CACpB,IAAM,EAAS,KAAK,YAAY,CAAG,EAEnC,GAAI,EAAQ,CACV,GAAI,EAAO,SAAU,CACnB,IAAM,EAAQ,EAAK,MAAM,EACzB,GAAI,IAAU,OAAW,KAAK,sBAAsB,CAAM,EAC1D,KAAK,KAAK,UAAU,EAAO,KAAK,IAAK,CAAK,EACrC,QAAI,EAAO,SAAU,CAC1B,IAAI,EAAQ,KAEZ,GAAI,EAAK,OAAS,IAAM,EAAY,EAAK,EAAE,EACzC,EAAQ,EAAK,MAAM,EAErB,KAAK,KAAK,UAAU,EAAO,KAAK,IAAK,CAAK,EAE1C,UAAK,KAAK,UAAU,EAAO,KAAK,GAAG,EAErC,EAAuB,EAAO,SAAW,EAAS,KAClD,UAKJ,GAAI,EAAI,OAAS,GAAK,EAAI,KAAO,KAAO,EAAI,KAAO,IAAK,CACtD,IAAM,EAAS,KAAK,YAAY,IAAI,EAAI,IAAI,EAC5C,GAAI,EAAQ,CACV,GAAI,EAAO,UAAa,EAAO,UAAY,KAAK,6BAE9C,KAAK,KAAK,UAAU,EAAO,KAAK,IAAK,EAAI,MAAM,CAAC,CAAC,EAGjD,UAAK,KAAK,UAAU,EAAO,KAAK,GAAG,EACnC,EAAK,QAAQ,IAAI,EAAI,MAAM,CAAC,GAAG,EAEjC,UAKJ,GAAI,YAAY,KAAK,CAAG,EAAG,CACzB,IAAM,EAAQ,EAAI,QAAQ,GAAG,EACvB,EAAS,KAAK,YAAY,EAAI,MAAM,EAAG,CAAK,CAAC,EACnD,GAAI,IAAW,EAAO,UAAY,EAAO,UAAW,CAClD,KAAK,KAAK,UAAU,EAAO,KAAK,IAAK,EAAI,MAAM,EAAQ,CAAC,CAAC,EACzD,UAQJ,GAAI,EAAY,CAAG,EACjB,EAAO,EAIT,IAAK,KAAK,0BAA4B,KAAK,sBAAwB,EAAS,SAAW,GAAK,EAAQ,SAAW,GAC7G,GAAI,KAAK,aAAa,CAAG,EAAG,CAE1B,GADA,EAAS,KAAK,CAAG,EACb,EAAK,OAAS,EAAG,EAAQ,KAAK,GAAG,CAAI,EACzC,MACK,QAAI,IAAQ,KAAK,kBAAoB,KAAK,wBAAwB,EAAG,CAE1E,GADA,EAAS,KAAK,CAAG,EACb,EAAK,OAAS,EAAG,EAAS,KAAK,GAAG,CAAI,EAC1C,MACK,QAAI,KAAK,oBAAqB,CAEnC,GADA,EAAQ,KAAK,CAAG,EACZ,EAAK,OAAS,EAAG,EAAQ,KAAK,GAAG,CAAI,EACzC,OAKJ,GAAI,KAAK,oBAAqB,CAE5B,GADA,EAAK,KAAK,CAAG,EACT,EAAK,OAAS,EAAG,EAAK,KAAK,GAAG,CAAI,EACtC,MAIF,EAAK,KAAK,CAAG,EAGf,MAAO,CAAE,WAAU,SAAQ,EAQ7B,IAAI,EAAG,CACL,GAAI,KAAK,0BAA2B,CAElC,IAAM,EAAS,CAAC,EACV,EAAM,KAAK,QAAQ,OAEzB,QAAS,EAAI,EAAG,EAAI,EAAK,IAAK,CAC5B,IAAM,EAAM,KAAK,QAAQ,GAAG,cAAc,EAC1C,EAAO,GAAO,IAAQ,KAAK,mBAAqB,KAAK,SAAW,KAAK,GAEvE,OAAO,EAGT,OAAO,KAAK,cAQd,eAAe,EAAG,CAEhB,OAAO,KAAK,wBAAwB,EAAE,OACpC,CAAC,EAAiB,IAAQ,OAAO,OAAO,EAAiB,EAAI,KAAK,CAAC,EACnE,CAAC,CACH,EAWF,KAAK,CAAC,EAAS,EAAc,CAG3B,GADA,KAAK,qBAAqB,YAAY,GAAG;AAAA,EAAa,KAAK,qBAAqB,QAAQ,EACpF,OAAO,KAAK,sBAAwB,SACtC,KAAK,qBAAqB,SAAS,GAAG,KAAK;AAAA,CAAuB,EAC7D,QAAI,KAAK,oBACd,KAAK,qBAAqB,SAAS;AAAA,CAAI,EACvC,KAAK,WAAW,CAAE,MAAO,EAAK,CAAC,EAIjC,IAAM,EAAS,GAAgB,CAAC,EAC1B,EAAW,EAAO,UAAY,EAC9B,EAAO,EAAO,MAAQ,kBAC5B,KAAK,MAAM,EAAU,EAAM,CAAO,EASpC,gBAAgB,EAAG,CACjB,KAAK,QAAQ,QAAQ,CAAC,IAAW,CAC/B,GAAI,EAAO,QAAU,EAAO,UAAU,EAAQ,IAAK,CACjD,IAAM,EAAY,EAAO,cAAc,EAEvC,GAAI,KAAK,eAAe,CAAS,IAAM,QAAa,CAAC,UAAW,SAAU,KAAK,EAAE,SAAS,KAAK,qBAAqB,CAAS,CAAC,EAC5H,GAAI,EAAO,UAAY,EAAO,SAE5B,KAAK,KAAK,aAAa,EAAO,KAAK,IAAK,EAAQ,IAAI,EAAO,OAAO,EAGlE,UAAK,KAAK,aAAa,EAAO,KAAK,GAAG,GAI7C,EAQH,oBAAoB,EAAG,CACrB,IAAM,EAAa,IAAI,GAAY,KAAK,OAAO,EACzC,EAAuB,CAAC,IAAc,CAC1C,OAAO,KAAK,eAAe,CAAS,IAAM,SAAc,CAAC,UAAW,SAAS,EAAE,SAAS,KAAK,qBAAqB,CAAS,CAAC,GAE9H,KAAK,QACF,OAAO,KAAW,EAAO,UAAY,QACpC,EAAqB,EAAO,cAAc,CAAC,GAC3C,EAAW,gBAAgB,KAAK,eAAe,EAAO,cAAc,CAAC,EAAG,CAAM,CAAC,EAChF,QAAQ,CAAC,IAAW,CACnB,OAAO,KAAK,EAAO,OAAO,EACvB,OAAO,MAAe,EAAqB,CAAU,CAAC,EACtD,QAAQ,KAAc,CACrB,KAAK,yBAAyB,EAAY,EAAO,QAAQ,GAAa,SAAS,EAChF,EACJ,EAUL,eAAe,CAAC,EAAM,CACpB,IAAM,EAAU,qCAAqC,KACrD,KAAK,MAAM,EAAS,CAAE,KAAM,2BAA4B,CAAC,EAU3D,qBAAqB,CAAC,EAAQ,CAC5B,IAAM,EAAU,kBAAkB,EAAO,0BACzC,KAAK,MAAM,EAAS,CAAE,KAAM,iCAAkC,CAAC,EAUjE,2BAA2B,CAAC,EAAQ,CAClC,IAAM,EAAU,2BAA2B,EAAO,uBAClD,KAAK,MAAM,EAAS,CAAE,KAAM,uCAAwC,CAAC,EAUvE,kBAAkB,CAAC,EAAQ,EAAmB,CAG5C,IAAM,EAA0B,CAAC,IAAW,CAC1C,IAAM,EAAY,EAAO,cAAc,EACjC,EAAc,KAAK,eAAe,CAAS,EAC3C,EAAiB,KAAK,QAAQ,KAAK,KAAU,EAAO,QAAU,IAAc,EAAO,cAAc,CAAC,EAClG,EAAiB,KAAK,QAAQ,KAAK,MAAW,EAAO,QAAU,IAAc,EAAO,cAAc,CAAC,EACzG,GAAI,IACD,EAAe,YAAc,QAAa,IAAgB,IAC1D,EAAe,YAAc,QAAa,IAAgB,EAAe,WAE1E,OAAO,EAET,OAAO,GAAkB,GAGrB,EAAkB,CAAC,IAAW,CAClC,IAAM,EAAa,EAAwB,CAAM,EAC3C,EAAY,EAAW,cAAc,EAE3C,GADe,KAAK,qBAAqB,CAAS,IACnC,MACb,MAAO,yBAAyB,EAAW,UAE7C,MAAO,WAAW,EAAW,UAGzB,EAAU,UAAU,EAAgB,CAAM,yBAAyB,EAAgB,CAAiB,IAC1G,KAAK,MAAM,EAAS,CAAE,KAAM,6BAA8B,CAAC,EAU7D,aAAa,CAAC,EAAM,CAClB,GAAI,KAAK,oBAAqB,OAC9B,IAAI,EAAa,GAEjB,GAAI,EAAK,WAAW,IAAI,GAAK,KAAK,0BAA2B,CAE3D,IAAI,EAAiB,CAAC,EAClB,EAAU,KACd,EAAG,CACD,IAAM,EAAY,EAAQ,WAAW,EAAE,eAAe,CAAO,EAC1D,OAAO,KAAU,EAAO,IAAI,EAC5B,IAAI,KAAU,EAAO,IAAI,EAC5B,EAAiB,EAAe,OAAO,CAAS,EAChD,EAAU,EAAQ,aACX,IAAY,EAAQ,0BAC7B,EAAa,GAAe,EAAM,CAAc,EAGlD,IAAM,EAAU,0BAA0B,KAAQ,IAClD,KAAK,MAAM,EAAS,CAAE,KAAM,yBAA0B,CAAC,EAUzD,gBAAgB,CAAC,EAAc,CAC7B,GAAI,KAAK,sBAAuB,OAEhC,IAAM,EAAW,KAAK,oBAAoB,OACpC,EAAK,IAAa,EAAK,GAAK,IAE5B,EAAU,4BADM,KAAK,OAAS,SAAS,KAAK,KAAK,KAAO,gBACS,aAAoB,aAAa,EAAa,UACrH,KAAK,MAAM,EAAS,CAAE,KAAM,2BAA4B,CAAC,EAS3D,cAAc,EAAG,CACf,IAAM,EAAc,KAAK,KAAK,GAC1B,EAAa,GAEjB,GAAI,KAAK,0BAA2B,CAClC,IAAM,EAAiB,CAAC,EACxB,KAAK,WAAW,EAAE,gBAAgB,IAAI,EAAE,QAAQ,CAAC,IAAY,CAG3D,GAFA,EAAe,KAAK,EAAQ,KAAK,CAAC,EAE9B,EAAQ,MAAM,EAAG,EAAe,KAAK,EAAQ,MAAM,CAAC,EACzD,EACD,EAAa,GAAe,EAAa,CAAc,EAGzD,IAAM,EAAU,2BAA2B,KAAe,IAC1D,KAAK,MAAM,EAAS,CAAE,KAAM,0BAA2B,CAAC,EAgB1D,OAAO,CAAC,EAAK,EAAO,EAAa,CAC/B,GAAI,IAAQ,OAAW,OAAO,KAAK,SACnC,KAAK,SAAW,EAChB,EAAQ,GAAS,gBACjB,EAAc,GAAe,4BAC7B,IAAM,EAAgB,KAAK,aAAa,EAAO,CAAW,EAO1D,OANA,KAAK,mBAAqB,EAAc,cAAc,EACtD,KAAK,QAAQ,KAAK,CAAa,EAC/B,KAAK,GAAG,UAAY,EAAc,KAAK,EAAG,IAAM,CAC9C,KAAK,qBAAqB,SAAS,GAAG;AAAA,CAAO,EAC7C,KAAK,MAAM,EAAG,oBAAqB,CAAG,EACvC,EACM,KAUT,WAAW,CAAC,EAAK,EAAiB,CAChC,GAAI,IAAQ,QAAa,IAAoB,OAAW,OAAO,KAAK,aAEpE,GADA,KAAK,aAAe,EAChB,EACF,KAAK,iBAAmB,EAE1B,OAAO,KAST,OAAO,CAAC,EAAK,CACX,GAAI,IAAQ,OAAW,OAAO,KAAK,SAEnC,OADA,KAAK,SAAW,EACT,KAYT,KAAK,CAAC,EAAO,CACX,GAAI,IAAU,OAAW,OAAO,KAAK,SAAS,GAG9C,IAAI,EAAU,KACd,GAAI,KAAK,SAAS,SAAW,GAAK,KAAK,SAAS,KAAK,SAAS,OAAS,GAAG,mBAExE,EAAU,KAAK,SAAS,KAAK,SAAS,OAAS,GAGjD,GAAI,IAAU,EAAQ,MAAO,MAAM,IAAI,MAAM,6CAA8C,EAG3F,OADA,EAAQ,SAAS,KAAK,CAAK,EACpB,KAYT,OAAO,CAAC,EAAS,CAEf,GAAI,IAAY,OAAW,OAAO,KAAK,SAGvC,OADA,EAAQ,QAAQ,CAAC,IAAU,KAAK,MAAM,CAAK,CAAC,EACrC,KAUT,KAAK,CAAC,EAAK,CACT,GAAI,IAAQ,OAAW,CACrB,GAAI,KAAK,OAAQ,OAAO,KAAK,OAE7B,IAAM,EAAO,KAAK,oBAAoB,IAAI,CAAC,IAAQ,CACjD,OAAO,GAAqB,CAAG,EAChC,EACD,MAAO,CAAC,EAAE,OACP,KAAK,QAAQ,QAAU,KAAK,eAAiB,YAAc,CAAC,EAC5D,KAAK,SAAS,OAAS,YAAc,CAAC,EACtC,KAAK,oBAAoB,OAAS,EAAO,CAAC,CAC7C,EAAE,KAAK,GAAG,EAIZ,OADA,KAAK,OAAS,EACP,KAUT,IAAI,CAAC,EAAK,CACR,GAAI,IAAQ,OAAW,OAAO,KAAK,MAEnC,OADA,KAAK,MAAQ,EACN,KAgBT,gBAAgB,CAAC,EAAU,CAGzB,OAFA,KAAK,MAAQ,GAAK,SAAS,EAAU,GAAK,QAAQ,CAAQ,CAAC,EAEpD,KAeT,aAAa,CAAC,EAAM,CAClB,GAAI,IAAS,OAAW,OAAO,KAAK,eAEpC,OADA,KAAK,eAAiB,EACf,KAUT,eAAe,CAAC,EAAgB,CAC9B,IAAM,EAAS,KAAK,WAAW,EAC/B,GAAI,EAAO,YAAc,OACvB,EAAO,UAAa,GAAkB,EAAe,MAAS,KAAK,qBAAqB,gBAAgB,EAAI,KAAK,qBAAqB,gBAAgB,EAExJ,OAAO,EAAO,WAAW,KAAM,CAAM,EAOvC,eAAe,CAAC,EAAgB,CAC9B,EAAiB,GAAkB,CAAC,EACpC,IAAM,EAAU,CAAE,QAAS,EAAe,KAAM,EAC5C,EACJ,GAAI,EAAQ,MACV,EAAQ,CAAC,IAAQ,KAAK,qBAAqB,SAAS,CAAG,EAEvD,OAAQ,CAAC,IAAQ,KAAK,qBAAqB,SAAS,CAAG,EAIzD,OAFA,EAAQ,MAAQ,EAAe,OAAS,EACxC,EAAQ,QAAU,KACX,EAWT,UAAU,CAAC,EAAgB,CACzB,IAAI,EACJ,GAAI,OAAO,IAAmB,WAC5B,EAAqB,EACrB,EAAiB,OAEnB,IAAM,EAAU,KAAK,gBAAgB,CAAc,EAEnD,KAAK,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,KAAW,EAAQ,KAAK,gBAAiB,CAAO,CAAC,EAClG,KAAK,KAAK,aAAc,CAAO,EAE/B,IAAI,EAAkB,KAAK,gBAAgB,CAAO,EAClD,GAAI,GAEF,GADA,EAAkB,EAAmB,CAAe,EAChD,OAAO,IAAoB,WAAa,OAAO,SAAS,CAAe,EACzE,MAAM,IAAI,MAAM,sDAAsD,EAK1E,GAFA,EAAQ,MAAM,CAAe,EAEzB,KAAK,cACP,KAAK,KAAK,KAAK,aAAa,EAE9B,KAAK,KAAK,YAAa,CAAO,EAC9B,KAAK,wBAAwB,EAAE,QAAQ,KAAW,EAAQ,KAAK,eAAgB,CAAO,CAAC,EAazF,UAAU,CAAC,EAAO,EAAa,CAC7B,GAAI,OAAO,IAAU,UAEnB,OADA,KAAK,eAAiB,EACf,KAET,KAAK,WAAa,GAAS,KAAK,WAChC,KAAK,iBAAmB,GAAe,KAAK,iBAE5C,IAAM,EAAY,GAAiB,KAAK,UAAU,EAIlD,OAHA,KAAK,eAAiB,EAAU,UAChC,KAAK,cAAgB,EAAU,SAExB,KAWT,IAAI,CAAC,EAAgB,CACnB,KAAK,WAAW,CAAc,EAC9B,IAAI,EAAW,EAAQ,UAAY,EACnC,GAAI,IAAa,GAAK,GAAkB,OAAO,IAAmB,YAAc,EAAe,MAC7F,EAAW,EAGb,KAAK,MAAM,EAAU,iBAAkB,cAAc,EAavD,WAAW,CAAC,EAAU,EAAM,CAC1B,IAAM,EAAgB,CAAC,YAAa,SAAU,QAAS,UAAU,EACjE,IAAK,EAAc,SAAS,CAAQ,EAClC,MAAM,IAAI,MAAM;AAAA,oBACF,EAAc,KAAK,MAAM,IAAI,EAE7C,IAAM,EAAY,GAAG,QAarB,OAZA,KAAK,GAAG,EAAW,CAAC,IAAY,CAC9B,IAAI,EACJ,GAAI,OAAO,IAAS,WAClB,EAAU,EAAK,CAAE,MAAO,EAAQ,MAAO,QAAS,EAAQ,OAAQ,CAAC,EAEjE,OAAU,EAGZ,GAAI,EACF,EAAQ,MAAM,GAAG;AAAA,CAAW,EAE/B,EACM,KAEX,CAUA,SAAS,EAAqB,CAAC,EAAK,EAAM,CAExC,GADmB,EAAI,gBAAkB,EAAK,KAAK,KAAO,IAAQ,EAAI,eAAiB,IAAQ,EAAI,cAAc,EAE/G,EAAI,WAAW,EAEf,EAAI,MAAM,EAAG,0BAA2B,cAAc,EAY1D,SAAS,EAA0B,CAAC,EAAM,CAKxC,OAAO,EAAK,IAAI,CAAC,IAAQ,CACvB,IAAK,EAAI,WAAW,WAAW,EAC7B,OAAO,EAET,IAAI,EACA,EAAY,YACZ,EAAY,OACZ,EACJ,IAAK,EAAQ,EAAI,MAAM,sBAAsB,KAAO,KAElD,EAAc,EAAM,GACf,SAAK,EAAQ,EAAI,MAAM,oCAAoC,KAAO,KAEvE,GADA,EAAc,EAAM,GAChB,QAAQ,KAAK,EAAM,EAAE,EAEvB,EAAY,EAAM,GAGlB,OAAY,EAAM,GAEf,SAAK,EAAQ,EAAI,MAAM,0CAA0C,KAAO,KAE7E,EAAc,EAAM,GACpB,EAAY,EAAM,GAClB,EAAY,EAAM,GAGpB,GAAI,GAAe,IAAc,IAC/B,MAAO,GAAG,KAAe,KAAa,SAAS,CAAS,EAAI,IAE9D,OAAO,EACR,EAGH,GAAQ,QAAU,uBCloElB,IAAQ,mBACA,kBACA,kBAAgB,+BAChB,eACA,gBAMR,EAAU,GAAO,QAAU,IAAI,GAC/B,EAAQ,QAAU,EAOlB,EAAQ,QAAU,GAClB,EAAQ,OAAS,GACjB,EAAQ,SAAW,GACnB,EAAQ,KAAO,GAEf,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,2BAA6B,wBCzBrC,IAAM,GAAU,oBACV,GAAY,oBACZ,GAAa,qBACb,GAAW,wBACX,GAAe,qBACf,GAAe,YAErB,SAAS,EAAW,CAAC,EAAK,CACxB,OAAO,GAAW,CAAG,EAClB,IAAI,KAAK,CAAC,EAAG,EAAI,EAAE,EAAE,KAAK,GAAG,CAAC,EAC9B,KAAK,GAAG,EAGb,SAAS,EAAW,CAAC,EAAK,CACxB,IAAM,EAAM,CAAC,EASb,OARA,EAAI,MAAM,GAAG,EAAE,QAAQ,KAAM,CAC3B,IAAM,EAAM,EAAG,MAAM,GAAG,EACxB,GAAI,EAAI,OAAS,EACf,MAAM,IAAI,UAAU,yCAAyC,EAG/D,EAAI,EAAI,MAAM,GAAK,EAAI,KAAK,GAAG,EAChC,EACM,EAGT,SAAS,EAAU,CAAC,EAAQ,CAE1B,OAAO,OAAO,KAAK,CAAM,EAG3B,SAAS,EAAY,CAAC,EAAQ,CAE5B,GAAI,OAAO,OAAO,SAAW,WAAY,OAAO,OAAO,OAAO,CAAM,EAEpE,OAAO,GAAW,CAAM,EAAE,IAAI,KAAK,EAAO,EAAE,EAc9C,SAAS,EAAS,CAAC,EAAM,CACvB,IAAM,EAAS,CAAC,EAAE,EAElB,GAAI,OAAO,IAAS,UAAY,IAAS,KACvC,MAAM,IAAI,UAAU,wBAAwB,EAI9C,GAAI,OAAO,EAAK,KAAO,SACrB,MAAM,IAAI,UAAU,qBAAqB,EAG3C,IAAK,GAAQ,KAAK,EAAK,EAAE,EACvB,MAAM,IAAI,UAAU,mBAAmB,IAAS,EAKlD,GAFA,EAAO,KAAK,EAAK,EAAE,EAEf,OAAO,EAAK,UAAY,YAAa,CACvC,GACE,OAAO,EAAK,UAAY,UACxB,EAAK,QAAU,IACd,OAAO,UAAU,EAAK,OAAO,EAE9B,MAAM,IAAI,UAAU,2CAA2C,EAGjE,EAAO,KAAK,KAAK,EAAK,SAAS,EAIjC,GAAI,OAAO,EAAK,SAAW,YAAa,CACtC,GAAI,OAAO,EAAK,SAAW,UAAY,EAAK,SAAW,KACrD,MAAM,IAAI,UAAU,0BAA0B,EAGhD,IAAM,EAAK,GAAW,EAAK,MAAM,EACjC,IAAK,EAAG,MAAM,KAAK,GAAU,KAAK,CAAC,CAAC,EAClC,MAAM,IAAI,UAAU,6BAA6B,IAAW,EAI9D,EAAG,QAAQ,KAAK,CACd,GAAI,OAAO,EAAK,OAAO,KAAO,SAC5B,EAAK,OAAO,GAAK,EAAK,OAAO,GAAG,SAAS,EACpC,QAAI,OAAO,SAAS,EAAK,OAAO,EAAE,EACvC,EAAK,OAAO,GAAK,EAAK,OAAO,GAAG,SAAS,QAAQ,EAAE,MAAM,GAAG,EAAE,GAEjE,EACD,IAAM,EAAK,GAAa,EAAK,MAAM,EACnC,IAAK,EAAG,MAAM,KAAK,OAAO,IAAM,QAAQ,EACtC,MAAM,IAAI,UAAU,+BAA+B,EAGrD,IAAK,EAAG,MAAM,KAAK,GAAW,KAAK,CAAC,CAAC,EACnC,MAAM,IAAI,UAAU,8BAA8B,IAAY,EAGhE,IAAM,EAAS,GAAY,EAAK,MAAM,EACtC,EAAO,KAAK,CAAM,EAGpB,GAAI,OAAO,EAAK,OAAS,YAAa,CAEpC,IAAK,OAAO,SAAS,EAAK,IAAI,EAC5B,MAAM,IAAI,UAAU,uBAAuB,EAK7C,GAFA,EAAO,KAAK,EAAK,KAAK,SAAS,QAAQ,EAAE,MAAM,GAAG,EAAE,EAAE,EAElD,OAAO,EAAK,OAAS,YAAa,CAEpC,IAAK,OAAO,SAAS,EAAK,IAAI,EAC5B,MAAM,IAAI,UAAU,uBAAuB,EAG7C,EAAO,KAAK,EAAK,KAAK,SAAS,QAAQ,EAAE,MAAM,GAAG,EAAE,EAAE,GAO1D,OAFe,EAAO,KAAK,GAAG,EAUhC,SAAS,EAAW,CAAC,EAAQ,CAC3B,GAAI,OAAO,IAAW,UAAY,IAAW,GAC3C,MAAM,IAAI,UAAU,mCAAmC,EAGzD,GAAI,EAAO,KAAO,IAChB,MAAM,IAAI,UAAU,uCAAuC,EAG7D,IAAM,EAAS,EAAO,MAAM,GAAG,EAE/B,EAAO,MAAM,EAGb,IAAI,EAAO,EACX,IAAK,GAAa,KAAK,EAAO,EAAE,EAAG,IACnC,GAAI,EAAO,OAAS,EAClB,MAAM,IAAI,UACR,oCAAoC,EAAO,UAAU,GACvD,EAIF,IAAM,EAAK,EAAO,MAAM,EACxB,IAAK,GAAQ,KAAK,CAAE,EAClB,MAAM,IAAI,UAAU,mBAAmB,IAAS,EAGlD,IAAI,EAEJ,GAAI,GAAa,KAAK,EAAO,EAAE,EAC7B,EAAU,SAAS,EAAO,MAAM,EAAE,MAAM,EAAY,EAAE,GAAI,EAAE,EAG9D,IAAI,EACA,EACJ,GAAI,GAAS,KAAK,EAAO,EAAO,OAAS,EAAE,EACzC,GAAI,EAAO,OAAS,GAAK,GAAS,KAAK,EAAO,EAAO,OAAS,EAAE,EAE9D,EAAO,OAAO,KAAK,EAAO,IAAI,EAAG,QAAQ,EAEzC,EAAO,OAAO,KAAK,EAAO,IAAI,EAAG,QAAQ,EAGzC,OAAO,OAAO,KAAK,EAAO,IAAI,EAAG,QAAQ,EAK7C,IAAI,EACJ,GAAI,EAAO,OAAS,EAAG,CACrB,IAAM,EAAS,EAAO,IAAI,EAE1B,GADA,EAAS,GAAY,CAAM,GACtB,GAAW,CAAM,EAAE,MAAM,KAAK,GAAU,KAAK,CAAC,CAAC,EAClD,MAAM,IAAI,UAAU,6BAA6B,IAAW,EAI9D,IADW,GAAa,CAAM,EACtB,MAAM,KAAK,GAAW,KAAK,CAAC,CAAC,EACnC,MAAM,IAAI,UAAU,8BAA8B,IAAY,EAGrD,GAAW,CAAM,EAEzB,QAAQ,KAAK,CACd,EAAO,GAAK,GAAa,KAAK,EAAO,EAAE,EACnC,SAAS,EAAO,GAAI,EAAE,EACtB,EAAO,GACZ,EAGH,GAAI,EAAO,OAAS,EAClB,MAAM,IAAI,UAAU,wCAAwC,GAAQ,EAItE,IAAM,EAAS,CAAC,IAAE,EAClB,GAAI,EAAS,EAAO,QAAU,EAC9B,GAAI,EAAQ,EAAO,OAAS,EAC5B,GAAI,EAAM,EAAO,KAAO,EACxB,GAAI,EAAM,EAAO,KAAO,EAExB,OAAO,EAGT,GAAO,QAAU,CACf,aACA,cACF,uBCpOA,IAAI,iBACA,mBACA,iBAGA,GAAiB,OAAO,sBAAwB,WAAa,wBAA0B,QAEvF,GAAQ,QAAQ,QAAU,QAAQ,OAAO,WAAc,CAAC,EACxD,KAAkB,QAAQ,IAAI,eAC9B,GAAM,QAAQ,SAAS,QACvB,GAAU,GAAW,EAAI,WAAc,GAAO,EAAI,cAAgB,OAElE,GAAO,QAAQ,IAAI,iBAAmB,GAAG,KAAK,EAC9C,GAAW,QAAQ,IAAI,qBAAuB,GAAG,SAAS,EAC1D,GAAO,QAAQ,IAAI,OAAS,GAAS,EAAQ,EAAI,OAAS,SAC1D,GAAO,QAAQ,IAAI,cAAgB,KAAS,QAAU,IAAM,GAAK,cAAgB,GACjF,IAAM,QAAQ,SAAS,IAAM,IAAI,MAAM,GAAG,EAAE,GAEhD,GAAO,QAAU,EAEjB,SAAS,CAAK,CAAC,EAAK,CAClB,OAAO,GAAe,EAAK,QAAQ,CAAG,CAAC,EAGzC,EAAK,QAAU,EAAK,KAAO,QAAS,CAAC,EAAK,CACxC,EAAM,GAAK,QAAQ,GAAO,GAAG,EAE7B,GAAI,CACF,IAAI,EAAO,GAAe,GAAK,KAAK,EAAK,cAAc,CAAC,EAAE,KAAK,YAAY,EAAE,QAAQ,KAAM,GAAG,EAC9F,GAAI,QAAQ,IAAI,EAAO,aAAc,EAAM,QAAQ,IAAI,EAAO,aAC9D,MAAO,EAAK,EAEd,IAAK,GAAe,CAClB,IAAI,EAAU,GAAS,GAAK,KAAK,EAAK,eAAe,EAAG,EAAU,EAClE,GAAI,EAAS,OAAO,EAEpB,IAAI,EAAQ,GAAS,GAAK,KAAK,EAAK,aAAa,EAAG,EAAU,EAC9D,GAAI,EAAO,OAAO,EAGpB,IAAI,EAAW,EAAQ,CAAG,EAC1B,GAAI,EAAU,OAAO,EAErB,IAAI,EAAS,EAAQ,GAAK,QAAQ,QAAQ,QAAQ,CAAC,EACnD,GAAI,EAAQ,OAAO,EAEnB,IAAI,EAAS,CACX,YAAc,GACd,QAAU,GACV,WAAa,GACb,OAAS,GACT,MAAQ,GACR,GAAO,QAAU,GAAO,GACxB,QAAU,GACV,QAAU,QAAQ,SAAS,KAC3B,QAAQ,SAAS,SAAW,YAAc,QAAQ,SAAS,SAAW,GACtE,OAAO,sBAAwB,WAAa,eAAiB,EAC/D,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAE1B,MAAM,IAAI,MAAM,iCAAmC,EAAS;AAAA,mBAAwB,EAAM;AAAA,CAAI,EAE9F,SAAS,CAAQ,CAAC,EAAK,CAErB,IAAI,EAAS,GAAY,GAAK,KAAK,EAAK,WAAW,CAAC,EAAE,IAAI,EAAU,EAChE,EAAQ,EAAO,OAAO,GAAW,GAAU,EAAI,CAAC,EAAE,KAAK,EAAa,EAAE,GAC1E,IAAK,EAAO,OAGZ,IAAI,EAAY,GAAK,KAAK,EAAK,YAAa,EAAM,IAAI,EAClD,EAAS,GAAY,CAAS,EAAE,IAAI,EAAS,EAC7C,EAAa,EAAO,OAAO,GAAU,GAAS,EAAG,CAAC,EAClD,EAAS,EAAW,KAAK,GAAY,EAAO,CAAC,EAAE,GACnD,GAAI,EAAQ,OAAO,GAAK,KAAK,EAAW,EAAO,IAAI,IAIvD,SAAS,EAAY,CAAC,EAAK,CACzB,GAAI,CACF,OAAO,GAAG,YAAY,CAAG,EACzB,MAAO,EAAK,CACZ,MAAO,CAAC,GAIZ,SAAS,EAAS,CAAC,EAAK,EAAQ,CAC9B,IAAI,EAAQ,GAAY,CAAG,EAAE,OAAO,CAAM,EAC1C,OAAO,EAAM,IAAM,GAAK,KAAK,EAAK,EAAM,EAAE,EAG5C,SAAS,EAAW,CAAC,EAAM,CACzB,MAAO,UAAU,KAAK,CAAI,EAG5B,SAAS,EAAW,CAAC,EAAM,CAEzB,IAAI,EAAM,EAAK,MAAM,GAAG,EACxB,GAAI,EAAI,SAAW,EAAG,OAEtB,IAAI,EAAW,EAAI,GACf,EAAgB,EAAI,GAAG,MAAM,GAAG,EAEpC,IAAK,EAAU,OACf,IAAK,EAAc,OAAQ,OAC3B,IAAK,EAAc,MAAM,OAAO,EAAG,OAEnC,MAAO,CAAE,OAAM,WAAU,eAAc,EAGzC,SAAS,EAAW,CAAC,EAAU,EAAM,CACnC,OAAO,QAAS,CAAC,EAAO,CACtB,GAAI,GAAS,KAAM,MAAO,GAC1B,GAAI,EAAM,WAAa,EAAU,MAAO,GACxC,OAAO,EAAM,cAAc,SAAS,CAAI,GAI5C,SAAS,EAAc,CAAC,EAAG,EAAG,CAE5B,OAAO,EAAE,cAAc,OAAS,EAAE,cAAc,OAGlD,SAAS,EAAU,CAAC,EAAM,CACxB,IAAI,EAAM,EAAK,MAAM,GAAG,EACpB,EAAY,EAAI,IAAI,EACpB,EAAO,CAAE,KAAM,EAAM,YAAa,CAAE,EAExC,GAAI,IAAc,OAAQ,OAE1B,QAAS,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CACnC,IAAI,EAAM,EAAI,GAEd,GAAI,IAAQ,QAAU,IAAQ,YAAc,IAAQ,cAClD,EAAK,QAAU,EACV,QAAI,IAAQ,OACjB,EAAK,KAAO,GACP,QAAI,EAAI,MAAM,EAAG,CAAC,IAAM,MAC7B,EAAK,IAAM,EAAI,MAAM,CAAC,EACjB,QAAI,EAAI,MAAM,EAAG,CAAC,IAAM,KAC7B,EAAK,GAAK,EAAI,MAAM,CAAC,EAChB,QAAI,EAAI,MAAM,EAAG,CAAC,IAAM,OAC7B,EAAK,KAAO,EAAI,MAAM,CAAC,EAClB,QAAI,IAAQ,SAAW,IAAQ,OACpC,EAAK,KAAO,EAEZ,cAGF,EAAK,cAGP,OAAO,EAGT,SAAS,EAAU,CAAC,EAAS,EAAK,CAChC,OAAO,QAAS,CAAC,EAAM,CACrB,GAAI,GAAQ,KAAM,MAAO,GACzB,GAAI,EAAK,SAAW,EAAK,UAAY,IAAY,GAAgB,CAAI,EAAG,MAAO,GAC/E,GAAI,EAAK,KAAO,EAAK,MAAQ,IAAQ,EAAK,KAAM,MAAO,GACvD,GAAI,EAAK,IAAM,EAAK,KAAO,GAAI,MAAO,GACtC,GAAI,EAAK,MAAQ,EAAK,OAAS,GAAM,MAAO,GAC5C,GAAI,EAAK,MAAQ,EAAK,OAAS,GAAM,MAAO,GAE5C,MAAO,IAIX,SAAS,EAAgB,CAAC,EAAM,CAC9B,OAAO,EAAK,UAAY,QAAU,EAAK,KAGzC,SAAS,EAAY,CAAC,EAAS,CAE7B,OAAO,QAAS,CAAC,EAAG,EAAG,CACrB,GAAI,EAAE,UAAY,EAAE,QAClB,OAAO,EAAE,UAAY,EAAU,GAAK,EAC/B,QAAI,EAAE,MAAQ,EAAE,IACrB,OAAO,EAAE,IAAM,GAAK,EACf,QAAI,EAAE,cAAgB,EAAE,YAC7B,OAAO,EAAE,YAAc,EAAE,YAAc,GAAK,EAE5C,WAAO,IAKb,SAAS,EAAO,EAAG,CACjB,SAAU,QAAQ,UAAY,QAAQ,SAAS,IAGjD,SAAS,EAAW,EAAG,CACrB,GAAI,QAAQ,UAAY,QAAQ,SAAS,SAAU,MAAO,GAC1D,GAAI,QAAQ,IAAI,qBAAsB,MAAO,GAC7C,OAAO,OAAO,SAAW,aAAe,OAAO,SAAW,OAAO,QAAQ,OAAS,WAGpF,SAAS,EAAS,CAAC,EAAU,CAC3B,OAAO,IAAa,SAAW,GAAG,WAAW,qBAAqB,EAKpE,EAAK,UAAY,GACjB,EAAK,UAAY,GACjB,EAAK,YAAc,GACnB,EAAK,WAAa,GAClB,EAAK,WAAa,GAClB,EAAK,cAAgB,wBC9MrB,IAAM,GAAiB,OAAO,sBAAwB,WAAa,wBAA0B,QAC7F,GAAI,OAAO,GAAe,QAAU,WAClC,GAAO,QAAU,GAAe,MAAM,KAAK,EAAc,EAEzD,QAAO,kHCJH,2BACE,eAAa,4CACb,oCACA,eAAa,mBACf,SAEE,KAAM,IAAiB,GAAS,SAAS,EAG3C,GAAe,GAAU,EAAW,EAM1C,GAAO,QAAQ,QAJC,EAKhB,GAAO,QAAQ,QAJC,EAKhB,GAAO,QAAQ,SAJE,EAOjB,IAAM,GAAQ,OAAO,OAAO,CAAE,QATd,EASuB,QARvB,EAQgC,SAP/B,CAOwC,CAAC,EAGpD,GAAQ,OAAO,OAAO,EACzB,GAAM,SAAU,WAChB,GAAM,SAAU,WAChB,GAAM,UAAW,UACpB,CAAC,EAEK,GAAW,CACf,WAAY,GACZ,SAAU,EACV,WAAY,MACZ,YAAa,EACb,KArBe,EAsBf,QAAS,EACX,EAmCA,eAAe,EAAI,CAAC,EAAU,EAAS,CACrC,IAAM,MAAK,UAAS,GAAS,IAAK,MAAa,CAAQ,EAEvD,GAAI,EAAK,WAAa,WACpB,MAAM,IAAI,WAAW,0BAA0B,EAGjD,GAAI,EAAK,WAAa,WACpB,MAAM,IAAI,WAAW,0BAA0B,EAGjD,GAAI,EAAK,SAAW,WAClB,MAAM,IAAI,WAAW,wBAAwB,EAG/C,GAAI,EAAK,YAAc,SACrB,MAAM,IAAI,WAAW,0BAA0B,EAGjD,EAAO,GAAS,MAAM,GAAa,EAAE,EAErC,IACE,aACA,SAAS,OAAO,MAAM,CAAC,EACvB,OACA,UACA,WAAY,EACZ,SAAU,EACV,YAAa,EACb,eAAgB,EAAO,OAAO,MAAM,CAAC,GACnC,EAEE,EAAO,MAAM,GAAa,CAC9B,SAAU,OAAO,KAAK,CAAQ,EAC9B,OACA,SACA,OACA,aACA,IACA,IACA,IACA,UACA,MACF,CAAC,EACD,GAAI,EACF,OAAO,EAGT,OAAO,GAAU,CACf,GAAI,GAAM,GACV,UACA,OAAQ,CAAE,IAAG,IAAG,OAAO,EAAK,WAAa,EAAI,CAAE,MAAK,EAAI,CAAC,CAAG,EAC5D,OACA,MACF,CAAC,EAEH,GAAO,QAAQ,KAAO,GAWtB,SAAS,EAAW,CAAC,EAAQ,EAAU,CAAC,EAAG,CACzC,IAAQ,aAAY,WAAU,cAAa,WAAY,IAClD,MACA,CACL,GAGE,QAAS,EACT,QAAU,IAAG,IAAG,MACd,GAAY,CAAM,EAEtB,OACG,KAAO,IACP,KAAO,IACP,KAAO,IACP,KAAO,EAGZ,GAAO,QAAQ,YAAc,GAS7B,eAAe,EAAM,CAAC,EAAQ,EAAU,EAAU,CAAC,EAAG,CACpD,IAAQ,QAAO,GAAS,GAAY,CAAM,EAC1C,KAAM,KAAM,IACV,MAAO,GAGT,IACE,UAAU,GACV,QAAU,IAAG,IAAG,IAAG,OAAO,IAC1B,OACA,QACE,GAEI,SAAS,OAAO,MAAM,CAAC,GAAM,EAErC,OAAO,GACL,MAAM,GAAa,CACjB,SAAU,OAAO,KAAK,CAAQ,EAC9B,OACA,SACA,KAAM,OAAO,KAAK,EAAM,QAAQ,EAChC,WAAY,EAAK,WACjB,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,SAAU,EACV,KAAM,GAAM,EACd,CAAC,EACD,CACF,EAEF,GAAO,QAAQ,OAAS,KCpMxB,iBAIE,WACA,iBACA,kBACA,gBACA,kBACA,wBACA,8BACA,WACA,YACA,UACA,SACE,WCZ0E,IAA9E,qBACA,sBACA,0BCDO,MAAM,UAAqB,KAAM,CACtC,WAAW,CAAC,EAAiB,CAC3B,MAAM,CAAO,EACb,OAAO,eAAe,KAAM,WAAW,SAAS,EAChD,KAAK,KAAQ,WAAW,KACxB,KAAK,MAAQ,OAEjB,CAEO,MAAM,UAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CACjD,MAAM,UAA6B,CAAa,CAAC,CACjD,MAAM,WAA6B,CAAa,CAAC,CChBxD,SAAS,EAAU,EAAY,CAC7B,OACE,OAAO,UAAY,aACnB,OAAO,QAAQ,WAAa,UAE3B,GAME,SAAS,EAAM,IAAI,EAAkC,CAC1D,IAAM,EAAQ,EAAO,OAAO,CAAC,EAAG,IAAM,EAAI,EAAE,WAAY,CAAC,EACnD,EAAQ,IAAI,WAAW,CAAK,EAC9B,EAAU,EACd,QAAW,KAAK,EACd,EAAI,IAAI,EAAG,CAAM,EACjB,GAAU,EAAE,WAEd,OAAO,EAIF,SAAS,EAAY,IAAI,EAA8B,CAC5D,GAAI,CACF,IAAM,EAAO,GAAO,GAAG,CAAM,EAE7B,GAAI,GAAW,EAEb,OAAQ,OAAe,KAAK,CAAI,EAAE,SAAS,QAAQ,EAIrD,IAAI,EAAS,GACb,QAAS,EAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,GAAU,OAAO,aAAa,EAAK,EAAE,EAC3E,OAAO,KAAK,CAAM,EAClB,KAAM,CAEN,MAAM,IAAI,GADE,uBACe,GAMxB,SAAS,EAAY,CAAC,EAAyB,CACpD,GAAI,CACF,IAAK,yBAAyB,KAAK,CAAG,GAAK,EAAI,OAAS,IAAM,EAC5D,MAAM,IAAI,MAAM,gBAAgB,EAGlC,GAAI,GAAW,EACb,OAAO,IAAI,WAAY,OAAe,KAAK,EAAK,QAAQ,CAAC,EAG3D,IAAM,EAAM,KAAK,CAAG,EACd,EAAM,IAAI,WAAW,EAAI,MAAM,EACrC,QAAS,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,GAAK,EAAI,WAAW,CAAC,EAC9D,OAAO,EACP,KAAM,CACJ,MAAM,IAAI,GACV,0BAA0B,EAAI,oBAAoB,EAAI,MAAM,EAAE,EAAE,KAClE,GAIG,SAAS,CAAa,CAAC,EAA8B,CAE1D,IAAM,EAAO,EAAI,MAAM,OACjB,EAAO,IAAI,MAAM,CAAG,EAAE,KAAK,MAAI,EAAE,KAAK,EAAE,EAC7C,EAAY,MAAQ,EC1EhB,SAAS,EAAiB,CAC/B,EACA,EACA,EACM,CACN,GAAI,EAAS,GAAK,EAAM,GAAK,EAAS,EAAM,EAC1C,MAAM,IAAI,WAAW,kCAAkC,ECqD5B,IAA/B,iBAlDO,MAAM,EAAW,CAGO,IAF7B,GAA0B,KAE1B,WAAW,CAAkB,EAAiC,CAAjC,cAGzB,OAAM,EAAW,CACnB,GAAI,KAAK,eAAe,WAAY,OAAO,KAAK,IAAI,WACpD,GAAI,KAAK,eAAe,KAAW,OAAO,KAAK,IAAI,KAEnD,OAAO,KAAK,YAAY,EAAE,gBAOtB,KAAI,CAAC,EAAgB,EAAkC,CAI3D,GAHA,GAAkB,KAAK,OAAQ,EAAQ,CAAG,EAGtC,KAAK,eAAe,WACtB,OAAO,KAAK,IAAI,MAAM,EAAQ,EAAS,CAAG,EAI5C,GAAI,KAAK,eAAe,KAAM,CAC5B,IAAM,EAAM,MAAM,KAAK,IAAI,MAAM,EAAQ,EAAS,CAAG,EAAE,YAAY,EACnE,OAAO,IAAI,WAAW,CAAG,EAI3B,OAAO,KAAK,YAAY,EAAE,MAAM,EAAQ,EAAS,CAAG,EAQ9C,WAAW,EAAe,CAChC,IAAK,KAAK,GACR,KAAK,GAAO,GAAa,KAAK,GAAa,EAE7C,OAAO,KAAK,GAEhB,CAuBO,MAAM,EAA6C,CAErC,GACD,OAFV,WAAW,CACA,EACD,EAChB,CAFiB,UACD,0BAGL,KAAI,CAAC,EAAuC,CACvD,IAAM,EAAO,MAAM,YAAG,KAAK,EAAM,GAAG,EAC9B,EAAO,MAAM,EAAG,KAAK,EAC3B,OAAO,IAAI,GAAe,EAAI,EAAK,IAAI,OAGnC,KAAI,CAAC,EAAgB,EAAkC,CAC3D,GAAkB,KAAK,OAAQ,EAAQ,CAAG,EAC1C,IAAM,EAAM,OAAO,YAAY,CAAG,EAElC,OADA,MAAM,KAAK,GAAG,KAAK,EAAK,EAAG,EAAK,CAAM,EAC/B,IAAI,WAAW,CAAG,OAIrB,MAAK,EAAkB,CAC3B,MAAM,KAAK,GAAG,MAAM,EAExB,CCjGO,MAAM,CAAe,OACF,MAAO,IAAI,UAE5B,SAAQ,CAAC,EAA2B,CACzC,GAAI,KAAK,KAAK,IAAI,EAAE,EAAE,EAAG,MAAM,IAAI,GAAY,UAAU,EAAE,uBAAuB,EAClF,KAAK,KAAK,IAAI,EAAE,GAAI,CAAC,QAEhB,IAAG,CAAC,EAA8B,CACvC,IAAM,EAAI,KAAK,KAAK,IAAI,CAAE,EAC1B,IAAK,EAAG,MAAM,IAAI,GAAY,mBAAmB,GAAI,EACrD,OAAO,YAGE,QAAO,EAAqB,CAAE,OAAO,KAAK,IAAI,CAAC,EAC5D,CCbO,MAAM,EAAsC,CASpB,QARN,WAAoB,SACpB,YAAqB,GAC5B,UAAY,GAAO,UACnB,WAAa,GAAO,WAE5B,IACA,IAAkB,IAAI,WAAW,CAAC,EAE1C,WAAW,CAAkB,EAAmB,CAAnB,cAEhB,OAAM,CAAC,EAAc,CAAE,KAAK,IAAM,OAElC,aAAY,CAAC,EAAwC,CAEhE,IAAM,EAAK,KAAK,EAAE,gBAAgB,IAAI,WAAW,GAAO,SAAS,CAAC,EAE5D,EAAuB,KAAK,IAAI,OAClC,CAAE,KAAM,UAAW,GAAI,EAAoB,eAAgB,KAAK,GAAoB,EACpF,CAAE,KAAM,UAAW,GAAI,CAAmB,EAExC,EAAY,MAAM,KAAK,EAAE,OAAO,QAAQ,EAAQ,KAAK,WAAW,EAAG,CAAqB,EACxF,EAAS,IAAI,WAAW,CAAS,EAGvC,EAAM,KAAK,CAAC,EAGZ,IAAM,EAAM,IAAI,WAAW,EAAG,OAAS,EAAO,MAAM,EAGpD,OAFA,EAAI,IAAI,EAAI,CAAC,EACb,EAAI,IAAI,EAAQ,EAAG,MAAM,EAClB,OAGI,aAAY,CAAC,EAAuC,CAC/D,IAAM,EAAS,EAAK,MAAM,EAAG,GAAO,SAAS,EACvC,EAAS,EAAK,MAAM,GAAO,SAAS,EAEpC,EAAuB,KAAK,IAAI,OAClC,CAAE,KAAM,UAAW,GAAI,EAAoB,eAAgB,KAAK,GAAoB,EACpF,CAAE,KAAM,UAAW,GAAI,CAAkB,EAE7C,GAAI,CACF,IAAM,EAAQ,MAAM,KAAK,EAAE,OAAO,QAAQ,EAAQ,KAAK,WAAW,EAAG,CAAsB,EAC3F,OAAO,IAAI,WAAW,CAAK,EAC3B,KAAM,CACN,MAAM,IAAI,EACR,6DACF,GAIG,OAAO,EAAG,CACf,KAAK,IAAM,KAIN,MAAM,CAAC,EAA2B,CACvC,KAAK,IAAM,GAAW,EAAQ,WAC1B,IAAI,WAAW,CAAO,EACtB,IAAI,WAAW,CAAC,EAGd,UAAU,EAAc,CAC9B,IAAK,KAAK,IACR,MAAM,IAAI,MAAM,wBAAwB,EAE1C,OAAO,KAAK,IAGhB,wECrEO,SAAS,EAAO,CAAC,EAAG,CACvB,OAAO,aAAa,YAAe,YAAY,OAAO,CAAC,GAAK,EAAE,YAAY,OAAS,aAGhF,SAAS,EAAK,CAAC,EAAG,CACrB,GAAI,OAAO,IAAM,UACb,MAAM,IAAI,MAAM,yBAAyB,GAAG,EAG7C,SAAS,EAAO,CAAC,EAAG,CACvB,IAAK,OAAO,cAAc,CAAC,GAAK,EAAI,EAChC,MAAM,IAAI,MAAM,kCAAoC,CAAC,EAGtD,SAAS,CAAM,CAAC,KAAM,EAAS,CAClC,IAAK,GAAQ,CAAC,EACV,MAAM,IAAI,MAAM,qBAAqB,EACzC,GAAI,EAAQ,OAAS,IAAM,EAAQ,SAAS,EAAE,MAAM,EAChD,MAAM,IAAI,MAAM,iCAAmC,EAAU,gBAAkB,EAAE,MAAM,EAcxF,SAAS,EAAO,CAAC,EAAU,EAAgB,GAAM,CACpD,GAAI,EAAS,UACT,MAAM,IAAI,MAAM,kCAAkC,EACtD,GAAI,GAAiB,EAAS,SAC1B,MAAM,IAAI,MAAM,uCAAuC,EAGxD,SAAS,EAAO,CAAC,EAAK,EAAU,CACnC,EAAO,CAAG,EACV,IAAM,EAAM,EAAS,UACrB,GAAI,EAAI,OAAS,EACb,MAAM,IAAI,MAAM,yDAA2D,CAAG,EAQ/E,SAAS,EAAG,CAAC,EAAK,CACrB,OAAO,IAAI,YAAY,EAAI,OAAQ,EAAI,WAAY,KAAK,MAAM,EAAI,WAAa,CAAC,CAAC,EAG9E,SAAS,EAAK,IAAI,EAAQ,CAC7B,QAAS,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC/B,EAAO,GAAG,KAAK,CAAC,EAIjB,SAAS,EAAU,CAAC,EAAK,CAC5B,OAAO,IAAI,SAAS,EAAI,OAAQ,EAAI,WAAY,EAAI,UAAU,EAG3D,IAAM,IAAwB,IAAM,IAAI,WAAW,IAAI,YAAY,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE,KAAO,IAAM,EAoFtG,SAAS,EAAW,CAAC,EAAK,CAC7B,GAAI,OAAO,IAAQ,SACf,MAAM,IAAI,MAAM,iBAAiB,EACrC,OAAO,IAAI,WAAW,IAAI,YAAY,EAAE,OAAO,CAAG,CAAC,EAchD,SAAS,EAAO,CAAC,EAAM,CAC1B,GAAI,OAAO,IAAS,SAChB,EAAO,GAAY,CAAI,EACtB,QAAI,GAAQ,CAAI,EACjB,EAAO,GAAU,CAAI,EAErB,WAAM,IAAI,MAAM,4BAA8B,OAAO,CAAI,EAC7D,OAAO,EAwCJ,SAAS,EAAS,CAAC,EAAU,EAAM,CACtC,GAAI,GAAQ,MAAQ,OAAO,IAAS,SAChC,MAAM,IAAI,MAAM,yBAAyB,EAE7C,OADe,OAAO,OAAO,EAAU,CAAI,EAIxC,SAAS,EAAU,CAAC,EAAG,EAAG,CAC7B,GAAI,EAAE,SAAW,EAAE,OACf,MAAO,GACX,IAAI,EAAO,EACX,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC1B,GAAQ,EAAE,GAAK,EAAE,GACrB,OAAO,IAAS,EAUb,IAAM,GAAa,CAAC,EAAQ,IAAgB,CAC/C,SAAS,CAAa,CAAC,KAAQ,EAAM,CAIjC,GAFA,EAAO,CAAG,GAEL,GACD,MAAM,IAAI,MAAM,iDAAiD,EAErE,GAAI,EAAO,cAAgB,OAAW,CAClC,IAAM,EAAQ,EAAK,GACnB,IAAK,EACD,MAAM,IAAI,MAAM,qBAAqB,EACzC,GAAI,EAAO,aACP,EAAO,CAAK,EAEZ,OAAO,EAAO,EAAO,WAAW,EAGxC,IAAM,EAAO,EAAO,UACpB,GAAI,GAAQ,EAAK,KAAO,OACpB,EAAO,EAAK,EAAE,EAElB,IAAM,EAAS,EAAY,EAAK,GAAG,CAAI,EACjC,EAAc,CAAC,EAAU,IAAW,CACtC,GAAI,IAAW,OAAW,CACtB,GAAI,IAAa,EACb,MAAM,IAAI,MAAM,6BAA6B,EACjD,EAAO,CAAM,IAIjB,EAAS,GAkBb,MAjBiB,CACb,OAAO,CAAC,EAAM,EAAQ,CAClB,GAAI,EACA,MAAM,IAAI,MAAM,8CAA8C,EAIlE,OAHA,EAAS,GACT,EAAO,CAAI,EACX,EAAY,EAAO,QAAQ,OAAQ,CAAM,EAClC,EAAO,QAAQ,EAAM,CAAM,GAEtC,OAAO,CAAC,EAAM,EAAQ,CAElB,GADA,EAAO,CAAI,EACP,GAAQ,EAAK,OAAS,EACtB,MAAM,IAAI,MAAM,qDAAuD,CAAI,EAE/E,OADA,EAAY,EAAO,QAAQ,OAAQ,CAAM,EAClC,EAAO,QAAQ,EAAM,CAAM,EAE1C,EAIJ,OADA,OAAO,OAAO,EAAe,CAAM,EAC5B,GAMJ,SAAS,EAAS,CAAC,EAAgB,EAAK,EAAc,GAAM,CAC/D,GAAI,IAAQ,OACR,OAAO,IAAI,WAAW,CAAc,EACxC,GAAI,EAAI,SAAW,EACf,MAAM,IAAI,MAAM,mCAAqC,EAAiB,UAAY,EAAI,MAAM,EAChG,GAAI,IAAgB,GAAY,CAAG,EAC/B,MAAM,IAAI,MAAM,iCAAiC,EACrD,OAAO,EAGJ,SAAS,EAAY,CAAC,EAAM,EAAY,EAAO,EAAM,CACxD,GAAI,OAAO,EAAK,eAAiB,WAC7B,OAAO,EAAK,aAAa,EAAY,EAAO,CAAI,EACpD,IAAM,EAAO,OAAO,EAAE,EAChB,EAAW,OAAO,UAAU,EAC5B,EAAK,OAAQ,GAAS,EAAQ,CAAQ,EACtC,EAAK,OAAO,EAAQ,CAAQ,EAC5B,EAAI,EAAO,EAAI,EACf,EAAI,EAAO,EAAI,EACrB,EAAK,UAAU,EAAa,EAAG,EAAI,CAAI,EACvC,EAAK,UAAU,EAAa,EAAG,EAAI,CAAI,EAEpC,SAAS,EAAU,CAAC,EAAY,EAAW,EAAM,CACpD,GAAM,CAAI,EACV,IAAM,EAAM,IAAI,WAAW,EAAE,EACvB,EAAO,GAAW,CAAG,EAG3B,OAFA,GAAa,EAAM,EAAG,OAAO,CAAS,EAAG,CAAI,EAC7C,GAAa,EAAM,EAAG,OAAO,CAAU,EAAG,CAAI,EACvC,EAGJ,SAAS,EAAW,CAAC,EAAO,CAC/B,OAAO,EAAM,WAAa,IAAM,EAG7B,SAAS,EAAS,CAAC,EAAO,CAC7B,OAAO,WAAW,KAAK,CAAK,ECtShC,IAAM,GAAe,CAAC,IAAQ,WAAW,KAAK,EAAI,MAAM,EAAE,EAAE,IAAI,CAAC,IAAM,EAAE,WAAW,CAAC,CAAC,CAAC,EACjF,GAAU,GAAa,kBAAkB,EACzC,GAAU,GAAa,kBAAkB,EACzC,GAAa,GAAI,EAAO,EACxB,GAAa,GAAI,EAAO,EACvB,SAAS,CAAI,CAAC,EAAG,EAAG,CACvB,OAAQ,GAAK,EAAM,IAAO,GAAK,EAGnC,SAAS,EAAW,CAAC,EAAG,CACpB,OAAO,EAAE,WAAa,IAAM,EAGhC,IAAM,GAAY,GACZ,GAAc,GAGd,GAAc,WACd,GAAY,IAAI,YACtB,SAAS,EAAS,CAAC,EAAM,EAAO,EAAK,EAAO,EAAM,EAAQ,EAAS,EAAQ,CACvE,IAAM,EAAM,EAAK,OACX,EAAQ,IAAI,WAAW,EAAS,EAChC,EAAM,GAAI,CAAK,EAEf,EAAY,GAAY,CAAI,GAAK,GAAY,CAAM,EACnD,EAAM,EAAY,GAAI,CAAI,EAAI,GAC9B,EAAM,EAAY,GAAI,CAAM,EAAI,GACtC,QAAS,EAAM,EAAG,EAAM,EAAK,IAAW,CAEpC,GADA,EAAK,EAAO,EAAK,EAAO,EAAK,EAAS,CAAM,EACxC,GAAW,GACX,MAAM,IAAI,MAAM,uBAAuB,EAC3C,IAAM,EAAO,KAAK,IAAI,GAAW,EAAM,CAAG,EAE1C,GAAI,GAAa,IAAS,GAAW,CACjC,IAAM,EAAQ,EAAM,EACpB,GAAI,EAAM,IAAM,EACZ,MAAM,IAAI,MAAM,6BAA6B,EACjD,QAAS,EAAI,EAAG,EAAM,EAAI,GAAa,IACnC,EAAO,EAAQ,EACf,EAAI,GAAQ,EAAI,GAAQ,EAAI,GAEhC,GAAO,GACP,SAEJ,QAAS,EAAI,EAAG,EAAM,EAAI,EAAM,IAC5B,EAAO,EAAM,EACb,EAAO,GAAQ,EAAK,GAAQ,EAAM,GAEtC,GAAO,GAIR,SAAS,EAAY,CAAC,EAAM,EAAM,CACrC,IAAQ,iBAAgB,gBAAe,gBAAe,eAAc,UAAW,GAAU,CAAE,eAAgB,GAAO,cAAe,EAAG,aAAc,GAAO,OAAQ,EAAG,EAAG,CAAI,EAC3K,GAAI,OAAO,IAAS,WAChB,MAAM,IAAI,MAAM,yBAAyB,EAK7C,OAJA,GAAQ,CAAa,EACrB,GAAQ,CAAM,EACd,GAAM,CAAY,EAClB,GAAM,CAAc,EACb,CAAC,EAAK,EAAO,EAAM,EAAQ,EAAU,IAAM,CAC9C,EAAO,CAAG,EACV,EAAO,CAAK,EACZ,EAAO,CAAI,EACX,IAAM,EAAM,EAAK,OACjB,GAAI,IAAW,OACX,EAAS,IAAI,WAAW,CAAG,EAG/B,GAFA,EAAO,CAAM,EACb,GAAQ,CAAO,EACX,EAAU,GAAK,GAAW,GAC1B,MAAM,IAAI,MAAM,uBAAuB,EAC3C,GAAI,EAAO,OAAS,EAChB,MAAM,IAAI,MAAM,gBAAgB,EAAO,iCAAiC,IAAM,EAClF,IAAM,EAAU,CAAC,EAIb,EAAI,EAAI,OACR,EACA,EACJ,GAAI,IAAM,GACN,EAAQ,KAAM,EAAI,GAAU,CAAG,CAAE,EACjC,EAAQ,GAEP,QAAI,IAAM,IAAM,EACjB,EAAI,IAAI,WAAW,EAAE,EACrB,EAAE,IAAI,CAAG,EACT,EAAE,IAAI,EAAK,EAAE,EACb,EAAQ,GACR,EAAQ,KAAK,CAAC,EAGd,WAAM,IAAI,MAAM,wCAAwC,GAAG,EAS/D,IAAK,GAAY,CAAK,EAClB,EAAQ,KAAM,EAAQ,GAAU,CAAK,CAAE,EAC3C,IAAM,EAAM,GAAI,CAAC,EAEjB,GAAI,EAAe,CACf,GAAI,EAAM,SAAW,GACjB,MAAM,IAAI,MAAM,sCAAsC,EAC1D,EAAc,EAAO,EAAK,GAAI,EAAM,SAAS,EAAG,EAAE,CAAC,EAAG,CAAG,EACzD,EAAQ,EAAM,SAAS,EAAE,EAG7B,IAAM,EAAa,GAAK,EACxB,GAAI,IAAe,EAAM,OACrB,MAAM,IAAI,MAAM,sBAAsB,eAAwB,EAElE,GAAI,IAAe,GAAI,CACnB,IAAM,EAAK,IAAI,WAAW,EAAE,EAC5B,EAAG,IAAI,EAAO,EAAe,EAAI,GAAK,EAAM,MAAM,EAClD,EAAQ,EACR,EAAQ,KAAK,CAAK,EAEtB,IAAM,EAAM,GAAI,CAAK,EAGrB,OAFA,GAAU,EAAM,EAAO,EAAK,EAAK,EAAM,EAAQ,EAAS,CAAM,EAC9D,GAAM,GAAG,CAAO,EACT,GCnJf,IAAM,EAAS,CAAC,EAAG,IAAO,EAAE,KAAO,KAAU,EAAE,KAAO,MAAS,EAC/D,MAAM,EAAS,CACX,WAAW,CAAC,EAAK,CACb,KAAK,SAAW,GAChB,KAAK,UAAY,GACjB,KAAK,OAAS,IAAI,WAAW,EAAE,EAC/B,KAAK,EAAI,IAAI,YAAY,EAAE,EAC3B,KAAK,EAAI,IAAI,YAAY,EAAE,EAC3B,KAAK,IAAM,IAAI,YAAY,CAAC,EAC5B,KAAK,IAAM,EACX,KAAK,SAAW,GAChB,EAAM,GAAQ,CAAG,EACjB,EAAO,EAAK,EAAE,EACd,IAAM,EAAK,EAAO,EAAK,CAAC,EAClB,EAAK,EAAO,EAAK,CAAC,EAClB,EAAK,EAAO,EAAK,CAAC,EAClB,EAAK,EAAO,EAAK,CAAC,EAClB,EAAK,EAAO,EAAK,CAAC,EAClB,EAAK,EAAO,EAAK,EAAE,EACnB,EAAK,EAAO,EAAK,EAAE,EACnB,EAAK,EAAO,EAAK,EAAE,EAEzB,KAAK,EAAE,GAAK,EAAK,KACjB,KAAK,EAAE,IAAO,IAAO,GAAO,GAAM,GAAM,KACxC,KAAK,EAAE,IAAO,IAAO,GAAO,GAAM,GAAM,KACxC,KAAK,EAAE,IAAO,IAAO,EAAM,GAAM,GAAM,KACvC,KAAK,EAAE,IAAO,IAAO,EAAM,GAAM,IAAO,IACxC,KAAK,EAAE,GAAM,IAAO,EAAK,KACzB,KAAK,EAAE,IAAO,IAAO,GAAO,GAAM,GAAM,KACxC,KAAK,EAAE,IAAO,IAAO,GAAO,GAAM,GAAM,KACxC,KAAK,EAAE,IAAO,IAAO,EAAM,GAAM,GAAM,KACvC,KAAK,EAAE,GAAM,IAAO,EAAK,IACzB,QAAS,EAAI,EAAG,EAAI,EAAG,IACnB,KAAK,IAAI,GAAK,EAAO,EAAK,GAAK,EAAI,CAAC,EAE5C,OAAO,CAAC,EAAM,EAAQ,EAAS,GAAO,CAClC,IAAM,EAAQ,EAAS,EAAI,MACnB,IAAG,KAAM,KACX,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAO,EAAM,EAAS,CAAC,EAC5B,EAAK,EAAO,EAAM,EAAS,CAAC,EAC5B,EAAK,EAAO,EAAM,EAAS,CAAC,EAC5B,EAAK,EAAO,EAAM,EAAS,CAAC,EAC5B,EAAK,EAAO,EAAM,EAAS,CAAC,EAC5B,GAAK,EAAO,EAAM,EAAS,EAAE,EAC7B,EAAK,EAAO,EAAM,EAAS,EAAE,EAC7B,EAAK,EAAO,EAAM,EAAS,EAAE,EAC/B,EAAK,EAAE,IAAM,EAAK,MAClB,EAAK,EAAE,KAAQ,IAAO,GAAO,GAAM,GAAM,MACzC,EAAK,EAAE,KAAQ,IAAO,GAAO,GAAM,GAAM,MACzC,EAAK,EAAE,KAAQ,IAAO,EAAM,GAAM,GAAM,MACxC,EAAK,EAAE,KAAQ,IAAO,EAAM,GAAM,IAAO,MACzC,EAAK,EAAE,IAAO,IAAO,EAAK,MAC1B,EAAK,EAAE,KAAQ,IAAO,GAAO,IAAM,GAAM,MACzC,EAAK,EAAE,KAAQ,KAAO,GAAO,GAAM,GAAM,MACzC,EAAK,EAAE,KAAQ,IAAO,EAAM,GAAM,GAAM,MACxC,EAAK,EAAE,IAAO,IAAO,EAAK,GAC1B,EAAI,EACJ,EAAK,EAAI,EAAK,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GACjF,EAAI,IAAO,GACX,GAAM,KACN,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAChF,GAAK,IAAO,GACZ,GAAM,KACN,IAAI,EAAK,EAAI,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAC3E,EAAI,IAAO,GACX,GAAM,KACN,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAChF,GAAK,IAAO,GACZ,GAAM,KACN,IAAI,EAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GACrE,EAAI,IAAO,GACX,GAAM,KACN,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAChF,GAAK,IAAO,GACZ,GAAM,KACN,IAAI,EAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GAC/D,EAAI,IAAO,GACX,GAAM,KACN,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAChF,GAAK,IAAO,GACZ,GAAM,KACN,IAAI,GAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1D,EAAI,KAAO,GACX,IAAM,KACN,IAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAChF,GAAK,KAAO,GACZ,IAAM,KACN,IAAI,GAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1D,EAAI,KAAO,GACX,IAAM,KACN,IAAM,EAAK,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GAC1E,GAAK,KAAO,GACZ,IAAM,KACN,IAAI,GAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1D,EAAI,KAAO,GACX,IAAM,KACN,IAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GAAM,GAAM,EAAI,GACpE,GAAK,KAAO,GACZ,IAAM,KACN,IAAI,GAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1D,EAAI,KAAO,GACX,IAAM,KACN,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GAC9D,GAAK,KAAO,GACZ,IAAM,KACN,IAAI,GAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1D,EAAI,KAAO,GACX,IAAM,KACN,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GACxD,GAAK,KAAO,GACZ,IAAM,KACN,IAAI,GAAK,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1D,EAAI,KAAO,GACX,IAAM,KACN,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnD,GAAK,KAAO,GACZ,IAAM,KACN,GAAM,GAAK,GAAK,EAAK,EACrB,EAAK,EAAI,EAAM,EACf,EAAK,EAAI,KACT,EAAI,IAAM,GACV,GAAM,EACN,EAAE,GAAK,EACP,EAAE,GAAK,EACP,EAAE,GAAK,EACP,EAAE,GAAK,EACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GAEX,QAAQ,EAAG,CACP,IAAQ,IAAG,OAAQ,KACb,EAAI,IAAI,YAAY,EAAE,EACxB,EAAI,EAAE,KAAO,GACjB,EAAE,IAAM,KACR,QAAS,EAAI,EAAG,EAAI,GAAI,IACpB,EAAE,IAAM,EACR,EAAI,EAAE,KAAO,GACb,EAAE,IAAM,KAEZ,EAAE,IAAM,EAAI,EACZ,EAAI,EAAE,KAAO,GACb,EAAE,IAAM,KACR,EAAE,IAAM,EACR,EAAI,EAAE,KAAO,GACb,EAAE,IAAM,KACR,EAAE,IAAM,EACR,EAAE,GAAK,EAAE,GAAK,EACd,EAAI,EAAE,KAAO,GACb,EAAE,IAAM,KACR,QAAS,EAAI,EAAG,EAAI,GAAI,IACpB,EAAE,GAAK,EAAE,GAAK,EACd,EAAI,EAAE,KAAO,GACb,EAAE,IAAM,KAEZ,EAAE,IAAM,KACR,IAAI,GAAQ,EAAI,GAAK,EACrB,QAAS,EAAI,EAAG,EAAI,GAAI,IACpB,EAAE,IAAM,EACZ,GAAQ,EACR,QAAS,EAAI,EAAG,EAAI,GAAI,IACpB,EAAE,GAAM,EAAE,GAAK,EAAQ,EAAE,GAC7B,EAAE,IAAM,EAAE,GAAM,EAAE,IAAM,IAAO,MAC/B,EAAE,IAAO,EAAE,KAAO,EAAM,EAAE,IAAM,IAAO,MACvC,EAAE,IAAO,EAAE,KAAO,EAAM,EAAE,IAAM,GAAM,MACtC,EAAE,IAAO,EAAE,KAAO,EAAM,EAAE,IAAM,GAAM,MACtC,EAAE,IAAO,EAAE,KAAO,GAAO,EAAE,IAAM,EAAM,EAAE,IAAM,IAAO,MACtD,EAAE,IAAO,EAAE,KAAO,EAAM,EAAE,IAAM,IAAO,MACvC,EAAE,IAAO,EAAE,KAAO,EAAM,EAAE,IAAM,GAAM,MACtC,EAAE,IAAO,EAAE,KAAO,EAAM,EAAE,IAAM,GAAM,MACtC,IAAI,EAAI,EAAE,GAAK,EAAI,GACnB,EAAE,GAAK,EAAI,MACX,QAAS,EAAI,EAAG,EAAI,EAAG,IACnB,GAAO,EAAE,GAAK,EAAI,GAAM,IAAM,IAAM,IAAO,EAC3C,EAAE,GAAK,EAAI,MAEf,GAAM,CAAC,EAEX,MAAM,CAAC,EAAM,CACT,GAAQ,IAAI,EACZ,EAAO,GAAQ,CAAI,EACnB,EAAO,CAAI,EACX,IAAQ,SAAQ,YAAa,KACvB,EAAM,EAAK,OACjB,QAAS,EAAM,EAAG,EAAM,GAAM,CAC1B,IAAM,EAAO,KAAK,IAAI,EAAW,KAAK,IAAK,EAAM,CAAG,EAEpD,GAAI,IAAS,EAAU,CACnB,KAAO,GAAY,EAAM,EAAK,GAAO,EACjC,KAAK,QAAQ,EAAM,CAAG,EAC1B,SAKJ,GAHA,EAAO,IAAI,EAAK,SAAS,EAAK,EAAM,CAAI,EAAG,KAAK,GAAG,EACnD,KAAK,KAAO,EACZ,GAAO,EACH,KAAK,MAAQ,EACb,KAAK,QAAQ,EAAQ,EAAG,EAAK,EAC7B,KAAK,IAAM,EAGnB,OAAO,KAEX,OAAO,EAAG,CACN,GAAM,KAAK,EAAG,KAAK,EAAG,KAAK,OAAQ,KAAK,GAAG,EAE/C,UAAU,CAAC,EAAK,CACZ,GAAQ,IAAI,EACZ,GAAQ,EAAK,IAAI,EACjB,KAAK,SAAW,GAChB,IAAQ,SAAQ,KAAM,MAChB,OAAQ,KACd,GAAI,EAAK,CACL,EAAO,KAAS,EAChB,KAAO,EAAM,GAAI,IACb,EAAO,GAAO,EAClB,KAAK,QAAQ,EAAQ,EAAG,EAAI,EAEhC,KAAK,SAAS,EACd,IAAI,EAAO,EACX,QAAS,EAAI,EAAG,EAAI,EAAG,IACnB,EAAI,KAAU,EAAE,KAAO,EACvB,EAAI,KAAU,EAAE,KAAO,EAE3B,OAAO,EAEX,MAAM,EAAG,CACL,IAAQ,SAAQ,aAAc,KAC9B,KAAK,WAAW,CAAM,EACtB,IAAM,EAAM,EAAO,MAAM,EAAG,CAAS,EAErC,OADA,KAAK,QAAQ,EACN,EAEf,CACO,SAAS,EAAsB,CAAC,EAAU,CAC7C,IAAM,EAAQ,CAAC,EAAK,IAAQ,EAAS,CAAG,EAAE,OAAO,GAAQ,CAAG,CAAC,EAAE,OAAO,EAChE,EAAM,EAAS,IAAI,WAAW,EAAE,CAAC,EAIvC,OAHA,EAAM,UAAY,EAAI,UACtB,EAAM,SAAW,EAAI,SACrB,EAAM,OAAS,CAAC,IAAQ,EAAS,CAAG,EAC7B,EAGJ,IAAM,GAAW,GAAuB,CAAC,IAAQ,IAAI,GAAS,CAAG,CAAC,EC9PzE,SAAS,EAAU,CAAC,EAAG,EAAG,EAAG,EAAK,EAAK,EAAS,GAAI,CAChD,IAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAChD,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAC5C,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAC5C,EAAM,EAAK,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,GAAM,EAAE,GAEvC,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,GAC/K,QAAS,GAAI,EAAG,GAAI,EAAQ,IAAK,EAC7B,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EAG3B,IAAI,EAAK,EACT,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,EAAM,EAAO,EAC1B,EAAI,KAAS,GAAM,EAAO,EASvB,SAAS,EAAO,CAAC,EAAG,EAAG,EAAG,EAAK,CAClC,IAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAAI,EAAM,EAAE,GAChM,QAAS,GAAI,EAAG,GAAI,GAAI,IAAK,EACzB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,EAAE,EACxB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,CAAC,EACvB,EAAO,EAAM,EAAO,EACpB,EAAM,EAAK,EAAM,EAAK,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",
  "debugId": "D21601D19D7DF1BE64756E2164756E21",
  "names": []
}